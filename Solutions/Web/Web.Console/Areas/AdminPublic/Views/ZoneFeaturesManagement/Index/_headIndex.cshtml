@using VM.Public;
@using Newtonsoft.Json

<script type="text/javascript">
    @{
        List<StatesVM> statesList = new List<StatesVM>();

        @Html.Raw("var statesList = [];")
        ;

        if (ViewData["StatesList"] != null)
        {
            statesList = (List<StatesVM>)ViewData["StatesList"];

            var statesListData = statesList.Select(c =>
            new
            {
                DisplayText = $"{c.StateName}",
                Value = c.StateId
            });

            @Html.Raw("debugger; statesList = " +
                JsonConvert.DeserializeObject(JsonConvert.SerializeObject(statesListData)) + "; debugger;")
            ;
        }
    }
</script>

<script type="text/javascript">
    @{
        List<CitiesVM> citiesList = new List<CitiesVM>();

        @Html.Raw("var citiesList = [];")
        ;

        if (ViewData["CitiesList"] != null)
        {
            citiesList = (List<CitiesVM>)ViewData["CitiesList"];

            var citiesListData = citiesList.Select(c =>
            new
            {
                DisplayText = $"{c.CityName}",
                Value = c.CityId,
                Data_StateId = c.StateId
            });

            @Html.Raw("debugger; citiesList = " +
                JsonConvert.DeserializeObject(JsonConvert.SerializeObject(citiesListData)) + "; debugger;")
            ;
        }
    }
</script>

<script type="text/javascript">
    @{
        List<ZonesVM> zonesList = new List<ZonesVM>();

        @Html.Raw("var zonesList = [];")
        ;

        if (ViewData["ZonesList"] != null)
        {
            zonesList = (List<ZonesVM>)ViewData["ZonesList"];

            var zonesListData = zonesList.Select(z =>
            new
            {
                DisplayText = $"{z.ZoneName}",
                Value = z.ZoneId,
                Data_CityId = z.CityId
            });

            @Html.Raw("debugger; zonesList = " +
    JsonConvert.DeserializeObject(JsonConvert.SerializeObject(zonesListData)) + "; debugger;")
            ;
        }
    }
</script>

@{
    await Html.RenderPartialAsync("jTableCssJs");
}

<style type="text/css">
    .ui-dialog {
        width: 40% !important;
    }

    .jtable-dialog-form .jtable-input-field-container {
        width: 50%;
    }

    div.jtable-main-container table.jtable thead th:nth-child(8),
    div.jtable-main-container table.jtable thead th:nth-child(9) {
        width: 1% !important;
    }

    div.jtable-main-container table.jtable tbody > tr > td:nth-child(8),
    div.jtable-main-container table.jtable tbody > tr > td:nth-child(9) {
        width: 1% !important;
        text-align: center;
    }

    .formError {
        top: inherit !important;
    }

    .isActivated,
    .isDeleted {
        cursor: pointer;
    }

</style>