@*<a class="font-medium tooltip-text1">
    <script src="~/lib/thumbnail-slider/thumbnail-slider.js"></script> *@
<script src="~/lib/video-player-lazy-load-rtop/dist/js/rtop.videoPlayer.1.0.2.min.js"></script>
@*
    <script src="~/lib/highcharts-persiandate/jdate-master/jdate.min.js"></script> *@
@*
    <script src="~/lib/highcharts-persiandate/jdate-master/persian-date.min.js"></script> *@
<script src="~/lib/highcharts-persiandate/jdate-master/jalali-moment.browser.js"></script>
<script src="~/lib/highcharts-gantt-11.1.0/code/modules/pattern-fill.js"></script>



<script>



    $(document).ready(function () {
        $('#Monthly-Pictures').on('classChange', function () {
            if (!$(this).hasClass('show')) {
                // Stop any playing videos
                $('video').each(function () {
                    this.pause();
                    this.currentTime = 0; // Reset the video to the beginning
                });
            }
        });

        // Monitor for class changes
        const observer = new MutationObserver(function (mutations) {
            mutations.forEach(function (mutation) {
                if (mutation.attributeName === 'class') {
                    $('#Monthly-Pictures').trigger('classChange');
                }
            });
        });

        observer.observe(document.getElementById('Monthly-Pictures'), {
            attributes: true, // Watch for attribute changes
            attributeFilter: ['class'] // Specifically watch for 'class' changes
        });
    });
    const throttle = (callback, limit) => {
        let waiting = false; // Flag to track execution
        return function (...args) {
            if (!waiting) {
                callback.apply(this, args); // Execute the callback
                waiting = true; // Set waiting to true
                setTimeout(() => waiting = false, limit); // Reset after limit
            }
        };
    };

    // Handle horizontal scrolling for both desktop and mobile
    const handleScroll = (e, isTouch = false) => {
        const target = e.target.closest('*'); // Get the target element
        if (target && getComputedStyle(target).overflow === 'auto') {
            const scrollWidth = target.scrollWidth;
            const clientWidth = target.clientWidth;

            // Check if the element can scroll horizontally
            if (scrollWidth > clientWidth) {
                e.preventDefault(); // Prevent default vertical scroll

                if (isTouch) {
                    // Handle touch scrolling
                    const touch = e.touches[0];
                    target.scrollLeft -= touch.clientX - (target._lastTouchX || touch.clientX);
                    target._lastTouchX = touch.clientX; // Update the last touch point
                } else {
                    // Handle wheel scrolling
                    target.scrollLeft += e.deltaY;
                }
            }
        }
    };

    // Add throttled event listeners
    document.addEventListener('wheel', throttle((e) => handleScroll(e), 16), { passive: false }); // 16ms for ~60fps
    document.addEventListener('touchmove', throttle((e) => handleScroll(e, true), 16), { passive: false });


    // Helper function to throttle events
   
  
    // Handle horizontal scrolling for both desktop and mobile


    // Add throttled event listeners



    // Scaling Disable <--
    //document.addEventListener('gesturestart', function (e) {
    //    e.preventDefault();
    //});
    //document.addEventListener('gesturechange', function (e) {
    //    e.preventDefault();
    //});
    let xhr; // Declare xhr globally
    let counter; // Declare counter globally

    document.addEventListener('change', function (event) {
        if (event.target.classList.contains('Contract_new1')) {
            const fileInput = event.target;
            const file = fileInput.files[0];
            const counter = document.getElementById('counter1'); // Define counter here
            const removeButton = document.getElementById('remove-button1'); // Define remove button here

            if (!isValidFileType(file.name)) {
                // Display unsupported format message
                counter.textContent = 'این فرمت پشتیبانی نمیشود'; // Unsupported format message in Persian
                fileInput.value = ''; // Clear the input
                $('.attach_icon').removeClass('d-none');
                $('#AddContractLabel').css('background-color', '#d11515');
                if (removeButton) {
                    removeButton.style.display = 'none'; // Hide remove button immediately on error
                }
                return; // Exit the function to prevent further processing
            }

            if (file) {
                const maxSizeInBytes = 2147483648; // 2GB in bytes
                if (file.size > maxSizeInBytes) {
                    // Display error message for file size
                    counter.textContent = 'فایل انتخاب شده باید کوچکتر از 2GB باشد.'; // Error message in Persian
                    $('#AddContractLabel').css('background-color', '#d11515');
                    $('.attach_icon').removeClass('d-none');
                    fileInput.value = ''; // Clear the input
                    if (removeButton) {
                        removeButton.style.display = 'none'; // Hide remove button immediately on size error
                    }
                    return; // Exit the function to prevent further processing
                }

                // Display filename as tooltip for remove button
                if (removeButton) {
                    document.getElementById('fileNameuploaded1').textContent = file.name; // Set tooltip text
                    removeButton.style.display = 'inline-block'; // Show the button
                }

                // Start file upload process
                const formData = new FormData();
                formData.append('file', file);
                counter.textContent = 'در حال بارگذاری...'; // Set upload text

                xhr = new XMLHttpRequest(); // Initialize xhr here
                xhr.open('POST', 'YOUR_UPLOAD_URL', true);

                xhr.upload.addEventListener('progress', function (e) {
                    if (e.lengthComputable) {
                        const percentComplete = (e.loaded / e.total) * 100;
                        counter.textContent = `بارگذاری ${Math.round(percentComplete)}%`;
                        if (percentComplete === 100) counter.textContent = "فایل آپلود شد"; // Upload complete
                        $('#AddContractLabel').css('background-color', '#29b586');
                        $('.attach_icon').addClass('d-none');
                        $('#AddContractLabel').removeClass('has-erorr-bg');

                    }
                });

                xhr.onerror = function () {
                    console.error('Upload Error:', xhr.statusText);
                    counter.textContent = 'بارگذاری ناموفق'; // Upload failed message
                    $('#AddContractLabel').css('background-color', '#d11515');
                };

                xhr.send(formData); // Send the form data
            }
        }
    });

    // Add click event for the remove button
    document.addEventListener('click', function (event) {
        if (event.target.id === 'remove-button1') {
            event.preventDefault(); // Prevent page refresh

            const counter = document.getElementById('counter1');
            const fileInput = document.querySelector('.Contract_new1');

            // Abort the upload if it's in progress
            if (xhr) {
                xhr.abort(); // Stop the ongoing upload
                counter.textContent = 'بارگذاری متوقف شد'; // Display upload stopped message
            }

            // Clear uploaded file and reset tooltip
            if (fileInput) {
                fileInput.value = ''; // Clear file input
                counter.textContent = 'انتخاب فایل'; // Reset text
                $('#AddContractLabel').css('background-color', '#858585');
                $('.attach_icon').removeClass('d-none');
                document.getElementById('fileNameuploaded1').textContent = ''; // Clear tooltip
                event.target.style.display = 'none'; // Hide remove button
            }
        }
    });





    const rowsPerPageDesktop = 5; // Rows per page for desktop
    const rowsPerPageMobile = 3; // Rows per page for phone

    let currentPage = 1; // Track the current page

    // Function to get rows based on screen size
    function getRows() {
        if (window.innerWidth <= 825) {
            // Mobile view
            return $('#Records .tr').not('.related-child');
        } else {
            // Desktop view
            return $('#Records tr').not('.related-child');
        }
    }




    function displayPage(page) {
        const rows = getRows();
        const rowsPerPage = (window.innerWidth <= 825) ? rowsPerPageMobile : rowsPerPageDesktop; // Adjust rows per page
        rows.hide(); // Hide all rows initially

        const start = (page - 1) * rowsPerPage;
        const end = start + rowsPerPage;

        rows.slice(start, end).show(); // Show rows for the current page
        $('#Records .related-child').hide(); // Keep related-child rows hidden
    }




    // Function to update the active page button and pagination
    function updatePagination() {
        const pageButtonsContainer = $('.page-buttons'); // Select the container for page buttons
        pageButtonsContainer.empty(); // Clear existing page buttons

        const rows = getRows(); // Get rows based on screen size
        const totalRows = rows.length;
        const rowsPerPage = (window.innerWidth <= 825) ? rowsPerPageMobile : rowsPerPageDesktop;
        const totalPages = Math.ceil(totalRows / rowsPerPage);

        const showPageButtons = 3; // Number of page buttons to show
        let startPage = currentPage - Math.floor(showPageButtons / 2);
        let endPage = currentPage + Math.floor(showPageButtons / 2);

        // Ensure startPage and endPage are within valid bounds
        if (startPage < 1) {
            startPage = 1;
            endPage = Math.min(showPageButtons, totalPages);
        }
        if (endPage > totalPages) {
            endPage = totalPages;
            startPage = Math.max(1, totalPages - showPageButtons + 1);
        }

        // Create page buttons
        for (let i = startPage; i <= endPage; i++) {
            const pageButton = $(`<button class="page-btn">${i}</button>`);
            pageButton.on('click', function () {
                currentPage = i; // Update current page on click
                displayPage(i);
                removeBlurOnPageChange(); // Remove blur effect when page changes
                updatePagination();
            });
            pageButtonsContainer.append(pageButton); // Add page buttons to the container
        }

        // Set the current page button as active
        $('.page-btn').removeClass('active');
        $(`.page-btn:contains(${currentPage})`).addClass('active');
    }

    // Function to remove the blur effect when the page changes
    function removeBlurOnPageChange() {
        $(".AddAttachmentForm").addClass("d-none");

        $('.contractAttachmentsModal').addClass("d-none");
        $('#Records tr, #Records td').removeClass('blur'); // Remove the blur effect from rows and cells
    }

    // Function to setup pagination
    function setupPagination() {
        const rows = getRows(); // Get rows based on screen size
        const totalRows = rows.length;
        const rowsPerPage = (window.innerWidth <= 825) ? rowsPerPageMobile : rowsPerPageDesktop;
        const totalPages = Math.ceil(totalRows / rowsPerPage);

        // Clear previous pagination if it exists
        $('.pagination').remove();

        // If there are no rows, hide pagination
        if (totalRows === 0) {
            return;
        }
        // Reset the currentPage if it exceeds the totalPages of the new section
        if (currentPage > totalPages) {
            currentPage = 1;
        }
        // Display the current page
        displayPage(currentPage);

        // Create pagination controls
        const pagination = $('<div class="pagination"></div>');

        // Left arrows
        const firstPageBtn = $('<i class="material-symbols-outlined arrow-btn" id="first-page">keyboard_double_arrow_left</i>').on('click', function () {
            currentPage = 1; // Go to the first page
            displayPage(currentPage);
            removeBlurOnPageChange(); // Remove blur effect when page changes
            updatePagination();
        });
        const prevPageBtn = $('<i class="material-symbols-outlined arrow-btn" id="prev-page">keyboard_arrow_left</i>').on('click', function () {
            if (currentPage > 1) {
                currentPage--; // Go to the previous page
                displayPage(currentPage);
                removeBlurOnPageChange(); // Remove blur effect when page changes
                updatePagination();
            }
        });

        // Append left arrows first
        pagination.append(firstPageBtn, prevPageBtn);

        // Container for page buttons
        const pageButtonsContainer = $('<span class="page-buttons"></span>');
        pagination.append(pageButtonsContainer);

        // Right arrows
        const nextPageBtn = $('<i class="material-symbols-outlined arrow-btn" id="next-page">keyboard_arrow_right</i>').on('click', function () {
            if (currentPage < totalPages) {
                currentPage++; // Go to the next page
                displayPage(currentPage);
                removeBlurOnPageChange(); // Remove blur effect when page changes
                updatePagination();
            }
        });

        const lastPageBtn = $('<i class="material-symbols-outlined arrow-btn" id="last-page">keyboard_double_arrow_right</i>').on('click', function () {
            currentPage = totalPages; // Go to the last page
            displayPage(currentPage);
            removeBlurOnPageChange(); // Remove blur effect when page changes
            updatePagination();
        });

        // Append right arrows after page buttons container
        pagination.append(nextPageBtn, lastPageBtn);
        $('#titelAndRecords').after(pagination);

        // Hide pagination if there's only 1 page
        if (totalPages <= 1) {
            pagination.hide();
        } else {
            pagination.show();
        }

        updatePagination(); // Initial pagination setup
    }

    // Reinitialize pagination on window resize
    $(window).on('resize', function () {
        setupPagination();
    });

    // Observe dynamic content changes
    const observer = new MutationObserver(function () {
        if ($('#Records tr').length > 0) {
            setupPagination();
            observer.disconnect();
        }
    });
    const recordsElement = document.getElementById('Records');
    if (recordsElement) {
        observer.observe(recordsElement, { childList: true, subtree: true });
    }

    // Initial setup
    $(document).ready(function () {


        if ($('#Records tr').length > 0) {
            setupPagination();
        }
    });
    var isMobile = false;
    if (window.matchMedia("(max-width: 825px)").matches) {
        // The viewport is less than 825 pixels wide
        isMobile = true
    }







    $(document).ready(function () {

        function removeBlurOnPageChange() {
            $(".AddAttachmentForm").addClass("d-none");

            $('.contractAttachmentsModal').addClass("d-none");
            $('#Records tr, #Records td').removeClass('blur'); // Remove the blur effect from rows and cells
        }



        $('body').on('click', '.popup-btn', function () {
            const modal = document.querySelector('.popup-modal');

            // Check if modal exists before attempting to style it
            if (modal) {
                // Set the modal to display flex, opacity 1, and z-index 10040
                modal.style.display = 'flex';
                modal.style.opacity = '1';
                modal.style.zIndex = '10040';

                // Close modal when clicking outside
                $(document).on('click.outsideModal', function (event) {
                    $('body').addClass('fixModalPadding');
                    $('body').addClass('overflow-y-hidden');

                    $('html').addClass('overflow-y-hidden');
                    if (!$(event.target).closest('.popup-modal, .popup-btn').length) {
                        closeModal();
                        $('#Contracts-ModalDiv').css('overflow-y', 'unset');
                    }
                });

                // Close modal when clicking the decline button
                $('body').on('click', '.decline-btn', function () {
                    closeModal();
                    $('#Contracts-ModalDiv').css('overflow-y', 'unset');
                });

                // Close modal when clicking the accept button
                $('body').on('click', '.accept-btn', function () {
                    closeModal();
                    $('#Contracts-ModalDiv').css('overflow-y', 'unset');
                });
            } else {
                console.error("Modal element with class '.popup-modal' not found.");
            }

            // Function to close the modal
            function closeModal() {
                if (modal) {
                    modal.style.display = 'none';
                    modal.style.opacity = '0';
                    modal.style.zIndex = ''; // Reset z-index if necessary
                }
                $(document).off('click.outsideModal'); // Remove the outside click listener
                $('body').off('click', '.decline-btn'); // Remove the decline button listener
                $('body').off('click', '.accept-btn'); // Remove the accept button listener
            }
        });



        // Get the modal element

        //const showPopupBtn = document.querySelector('.showPopup');
        //const acceptBtn = document.getElementById('acceptBtn');
        //const declineBtn = document.getElementById('declineBtn');

        // //Show the modal when the button is clicked








        // Close the modal when clicking outside the popup content
        //window.addEventListener('click', (event) => {
        //    if (event.target === popupModal) {
        //        popupModal.classList.remove('active');
        //    }
        //});


        // Kia :: Active Menu By Class Every Area Spefic has been repeated
        $(".side-nav ul li:nth-child(1)").addClass("activemenu");
        $(".side-nav ul li:nth-child(1) a").addClass("activemenu-link");
        $(".side-nav ul li:nth-child(1) a").removeClass("side-menu");
        $(".side-nav ul li:nth-child(1) a .side-menu__title").addClass("activemenu-text");

        if (projectsVMList === null || projectsVMList === '' || projectsVMList === undefined || projectsVMList.length <= 0) {
            $('.container_project').css('display', 'none');
            $('.container1_project').css('display', 'none');
            $('.list-of-project').html('شما در حال حاضر هیچ پروژه ای ندارید!');
            $('.modal_project_error').addClass('bg_container_error_project');
            $('.error_text').html('شما در حال حاضر هیچ پروژه ای ندارید!');

            return $('#warningModal')[0].click();

        }
        let totalPlansCircles = 0;

        var totalNum1 = 0; // Initialize the total variable
        for (var j = 0; j < projectsVMList.length; j++) {

            let partnershipAgreementsCircles = generateAgreementCircles(projectsVMList[j].PartnershipAgreementsCount);
            let RequestCount = projectsVMList[j].PartnershipAgreementsCount;
            let PlanCount1 = projectsVMList[j].InitialPlansCount;

            let confirmationAgreementsCircles = generateAgreementCircles(projectsVMList[j].ConfirmationAgreementsCount);
            let ConfirmCount = projectsVMList[j].ConfirmationAgreementsCount;
            let contractAgreementsCircles = generateAgreementCircles(projectsVMList[j].ContractAgreementsCount);
            let ContractCount = projectsVMList[j].ContractAgreementsCount;

            let initialPlansCircles = generateAgreementCircles(projectsVMList[j].InitialPlansCount);
            let PlanCount = projectsVMList[j].InitialPlansCount;

            // The number of iterations is based on the length of projectsVMList



            function convertToPersianNumbers(englishDate) {
                const persianNumbers = ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'];
                return String(englishDate).replace(/\d/g, function (digit) {
                    return persianNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUpdateDate = projectsVMList[j].LastProgessUpdateDate; // e.g., "1403/09/22"
            // var persianLastProgessUpdateDate = convertToPersianNumbers(LastProgessUpdateDate);


            // Example of setting the Persian date in an element




            let meetingBoardsCircles = generateAgreementCircles(projectsVMList[j].MeetingBoardsCount);
            let MeetingCount = projectsVMList[j].MeetingBoardsCount;
            let pitchDecksCircles = generateAgreementCircles(projectsVMList[j].PitchDecksCount);
            let introProjectCount = projectsVMList[j].PitchDecksCount;


            var shareOfTotalProjectCostPercent = ((projectsVMList[j].ShareOfTotalProjectCostPercent != null) ? projectsVMList[j].ShareOfTotalProjectCostPercent : '0');
            var fundsCeiling = ((projectsVMList[j].FundsCeiling != null) ? projectsVMList[j].FundsCeiling : 0);
            var ProgressProject = (projectsVMList[j].ProjectProgressDataVM != null ? parseFloat(projectsVMList[j].ProjectProgressDataVM.Operation) : 0)
            //fundsCeiling = ((parseFloat(fundsCeiling) * parseFloat(shareOfTotalProjectCostPercent)) / 100).toFixed(0).toPersinaDigit();
            fundsCeiling = fundsCeiling.toFixed(0).toPersinaDigit();

            RequestCount = RequestCount || '<i class="material-symbols-outlined open-in-new">add</i>';
            ConfirmCount = ConfirmCount || '<i class="material-symbols-outlined open-in-new ">add</i>';
            ContractCount = ContractCount || '<i class="material-symbols-outlined open-in-new ">add</i>';
            PlanCount = PlanCount || '<i class="material-symbols-outlined open-in-new ">add</i>';
            MeetingCount = MeetingCount || '<i class="material-symbols-outlined open-in-new">add</i>';
            introProjectCount = introProjectCount || '<i class="material-symbols-outlined open-in-new">add</i>';
              function toEnglishDigits(persianNumber) {
                const persianDigits = '۰۱۲۳۴۵۶۷۸۹';
                const englishDigits = '0123456789';
                return persianNumber.replace(/[۰-۹]/g, (d) => englishDigits[persianDigits.indexOf(d)]);
            }

            function toPersianDigits(englishNumber) {
                const persianDigits = '۰۱۲۳۴۵۶۷۸۹';
                const englishDigits = '0123456789';
                return englishNumber.toString().replace(/\d/g, (d) => persianDigits[parseInt(d)]);
            }

            // Your variables


            if (projectsVMList[j].ProjectRemainingCost != null) {
                var ProjectRemainingCost = projectsVMList[j].ProjectRemainingCost.toLocaleString().toPersinaDigit(); // Assuming toPersinaDigit() converts to Persian digits
                var SpliterCost = Spliter(fundsCeiling).toPersinaDigit();



            }




            function addCommasToPersianNumber(number) {
                return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }

             var num1 = parseFloat(toEnglishDigits(ProjectRemainingCost.replace(/,/g, '')));
             num1 = -num1;
            var num2 = parseFloat(toEnglishDigits(SpliterCost.replace(/,/g, '')));
            var sum = num1 + num2;


            // حذف مقدار منفی
            var absoluteSum = Math.abs(sum);
            var sumInPersian = toPersianDigits(absoluteSum.toLocaleString());



            var colorsum = '';


            totalNum1 += Number(toEnglishDigits(ProjectRemainingCost.replace(/,/g, '')));

             var totalNum1InPersian = toPersianDigits(addCommasToPersianNumber(totalNum1));
            var sumInPersian = toPersianDigits(sum.toLocaleString());

            if (num1 === 0 || num1 === null || isNaN(sum)) {
            colorsumv1 = '#6B7280'; // خاکستری
            colorsum = '#6B7280';
            } else if (num1 > 0) {
                colorsumv1 = '#0D9488'; // سبز
                colorsum = '#0D9488';
            } else {
                colorsumv1 = '#B91C1C'; // قرمز
                colorsum = '#B91C1C';
            }

            let paymore = "";
            if (colorsum !== "#0D9488") {
                paymore = '<span class="flex justify-center" style="direction:ltr;">: مانده</span>';
            } else {
                paymore = "";
            }

             num1 = toPersianDigits(Math.abs(num1).toLocaleString());
            var shareOfTotalProjectCostPercent = ((projectsVMList[j].ShareOfTotalProjectCostPercent != null) ? projectsVMList[j].ShareOfTotalProjectCostPercent : '0');
            var fundsCeiling = ((projectsVMList[j].FundsCeiling != null) ? projectsVMList[j].FundsCeiling : 0);
            var Obligations = ((projectsVMList[j].Obligations != null) ? projectsVMList[j].Obligations : 0);
            //fundsCeiling = ((parseFloat(fundsCeiling) * parseFloat(shareOfTotalProjectCostPercent)) / 100).toFixed(0).toPersinaDigit();
            fundsCeiling = fundsCeiling.toFixed(0).toPersinaDigit();
            Obligations = Obligations.toFixed(0).toPersinaDigit();





            if (window.innerWidth <= 768) {
                var str =

                    `<div class="block w-full border-b border-gray-300 relative">
                                                 <div id="basic-accordion" >
                                                      <div class="preview">
                                                          <div class="accordion" id="faq-accordion-`+ projectsVMList[j].ConstructionProjectId + `">
                                                               <div class="accordion-item">
                                                                    <div id="faq-accordion-content-1" class="accordion-header">
                                                                            <a href="#faq-accordion-`+ projectsVMList[j].ConstructionProjectId + `" class="clickableAccordian clickableAccordianmd pointer mr-auto font-medium text-2xl" type="button" data-tw-toggle="collapse" data-tw-target="#faq-accordion-collapse-` + projectsVMList[j].ConstructionProjectId + `" aria-expanded="false" aria-controls="faq-accordion-collapse` + projectsVMList[j].ConstructionProjectId + `" id="` + projectsVMList[j].ConstructionProjectId + `">

                                                                        <div class="p-2 text-center justify-center flex items-center absolute projectnameM">
                                                   <div class="nProject flex items-stretch  text-slate-600 text-lg">
                                                   <i class="material-symbols-outlined apartment fs40  text-warning ml-1">apartment</i>
                                                   `+ projectsVMList[j].ConstructionProjectTitle + `
                                                   </div>
                                                </div>
                                                                        <div class="p-2   text-center justify-center flex items-center">
                                                           <span class="text-center text-base  text-slate-600">میزان مالکیت :`+ (shareOfTotalProjectCostPercent + '').toPersinaDigit() + ` %</span>
                                                </div>
                                                                        <div class="p-2   text-center justify-center flex items-center">
                                                     <span class="block font-sans text-lg antialiased font-normal leading-normal"
                            style="color:${colorsum};direction:ltr">
                            ${(num1 < 0 ? '−' : '') + toPersianDigits(num1.toLocaleString('en-US').replace('-', ''))}
                        </span>

                                                </div>
                                                                        <div class=" p-2 radial-progress-usp text-center justify-center flex items-center">
                                                      <section class="row radial-progress">


                                                         <svg class="radial-progress" data-percentage="`+ ProgressProject + `" viewBox="0 0 80 80">


                                                         <circle class="incomplete" cx="40" cy="40" r="35"></circle>

                                                         <circle class="complete" cx="40" cy="40" r="35" style="stroke-dashoffset: 39.58406743523136;"></circle>

                                                                 <text class="percentage" x="50%" y="57%" transform="matrix(0, 1, -1, 0, 80, 0)">`+ ProgressProject + `%</text>

                                                         </svg>

                                                      </section>
                                                </div></a>`+
















                    '<div id="faq-accordion-collapse-' + projectsVMList[j].ConstructionProjectId + '" aria-labelledby="faq-accordion-content-1" data-tw-parent="#faq-accordion-collapse-' + projectsVMList[j].ConstructionProjectId + '" >'
                    +
                    '<div class="accordion-body  text-slate-600 dark:text-slate-500 leading-relaxed" data-body="' + projectsVMList[j].ConstructionProjectId + '" style="display:none;">'
                    +
                    '<div class="grid grid-cols-12 gap-6 rowOfProjects" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    // Project Detail And Daily Repeort -  Modal 1
                    ' <div class="col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12">'
                    +
                    '<div class="report-box-2 intro-y mt-5">'
                    +
                    ' <div class="box p-5 project-base-info" id="project-base-info">'
                    +
                    ' <div class="">'
                    +
                    '<div class="flex pb-2">'
                    +
                    '<div class="side-menu__icon text-warning" width="24" height="24" ><i class="material-symbols-outlined apartment fs40">apartment</i></div>'
                    +
                    '<div class="ml-auto font-medium text-3xl text-warning">'
                    +
                    projectsVMList[j].ConstructionProjectTitle
                    +
                    '</div></div>'
                    +
                    ' <div class="">'
                    +
                    ' <div class="flex items-center">'
                    +
                    '     <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="calendar" data-lucide="calendar" class="lucide lucide-calendar text-success">'
                    +
                    '<rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>'
                    +
                    '<line x1="16" y1="2" x2="16" y2="6"></line>'
                    +
                    '<line x1="8" y1="2" x2="8" y2="6"></line>'
                    +
                    '<line x1="3" y1="10" x2="21" y2="10"></line>'
                    +
                    ' </svg>'
                    +
                    ' <span class="font-medium mr-auto"> روز مانده تا پایان پروژه </span>'
                    +
                    '<span class="font-medium text-xl daysLeft">' + (projectsVMList[j].DaysLeftUntilTheEnd === null || projectsVMList[j].DaysLeftUntilTheEnd === undefined || projectsVMList[j].DaysLeftUntilTheEnd === '' ? '-' : projectsVMList[j].DaysLeftUntilTheEnd.toPersinaDigit()) + ' </span>'
                    +
                    'روز'
                    +
                    '</div>'
                    +
                    '<div class="flex items-center mt-4">'
                    +
                    '    <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="calendar" data-lucide="calendar" class="lucide lucide-calendar text-success">'
                    +
                    '        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>'
                    +
                    '        <line x1="16" y1="2" x2="16" y2="6"></line>'
                    +
                    '        <line x1="8" y1="2" x2="8" y2="6"></line>'
                    +
                    '        <line x1="3" y1="10" x2="21" y2="10"></line>'
                    +
                    '    </svg>'
                    +
                    '    <span class="font-medium mr-auto">  پیش بینی کل پروژه </span>'
                    +
                    '    <span class="truncate totalDaysleft totalDaysleft1"> ' + (projectsVMList[j].MonthsLeftUntilTheEnd === null || projectsVMList[j].MonthsLeftUntilTheEnd === undefined || projectsVMList[j].MonthsLeftUntilTheEnd === '' ? '-' : projectsVMList[j].MonthsLeftUntilTheEnd.toPersinaDigit()) + ' </span>'
                    +
                    'ماه'
                    +
                    '</div>'
                    +
                    '     <div class="flex items-center mt-4 mb-10">'
                    +
                    '     <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="dollar-sign" data-lucide="dollar-sign" class="lucide lucide-dollar-sign text-success">'
                    +
                    '  <line x1="12" y1="1" x2="12" y2="23"></line>'
                    +
                    '         <path d="M17 5H9.5a3.5 3.5 0 000 7h5a3.5 3.5 0 010 7H6"></path>'
                    +
                    '     </svg>'
                    +
                    '     <span class="font-medium mr-auto"> براورد کل هزینه پروژه </span>'
                    +
                    '     <span class="truncate totalDaysleft"> ' + (projectsVMList[j].PrevisionOfCost === null || projectsVMList[j].PrevisionOfCost === undefined || projectsVMList[j].PrevisionOfCost === '' ? '-' : Spliter((projectsVMList[j].PrevisionOfCost + '').toPersinaDigit())) + ' </span>'
                    +
                    //' میلیارد'
                    //+
                    '</div>'
                    +
                    '     <div class="flex items-center mt-4">'
                    +
                    '      <div class="w-2 h-2 bg-success rounded-full mr-2 cr1"></div>'
                    +
                    '      <span class="font-medium mr-auto"> شروع پروژه </span>'
                    +
                    '      <span class="truncate">  ' + (projectsVMList[j].StartDate === null || projectsVMList[j].StartDate === undefined || projectsVMList[j].StartDate === '' ? '-' : projectsVMList[j].StartDate.toPersinaDigit()) + '</span>'
                    +
                    '  </div>'
                    +
                    '  <div class="flex items-center mt-4 mb-3">'
                    +
                    '      <div class="w-2 h-2 bg-danger rounded-full mr-2 cr1"></div>'
                    +
                    '      <span class="font-medium mr-auto"> پایان پروژه </span>'
                    +
                    '      <span class="truncate"> ' + (projectsVMList[j].EndFaDate === null || projectsVMList[j].EndFaDate === undefined || projectsVMList[j].EndFaDate === '' ? '-' : projectsVMList[j].EndFaDate.toPersinaDigit()) + ' </span>'
                    +
                    ' </div></div>'
                    +
                    //'                 <a class="flex items-center text-success Daily-Report-Link"  data-tw-toggle="modal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  style="display:none" data-tw-target="#Daily-Report"></a>'
                    //+
                    '                 <button class="btn btn-outline-secondary relative flex rounded-full w-full mt-11 setDailyReportModal" data-tw-toggle="modal"  data-tw-target="#Daily-Report" data-constructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                     گزارشات روزانه پروژه'
                    +
                    '                 </button>'
                    +
                    //'                 <a class="flex items-center text-success Daily-Pictures-Link"  data-tw-toggle="modal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  style="display:none" data-tw-target="#Daily-Report"></a>'
                    //+
                    '           <button class="btn btn-outline-secondary relative flex rounded-full w-full mt-2 setDailyPicturesModal" data-tw-toggle="modal" data-tw-target="#Daily-Pictures" data-constructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                     تصاویر روزانه '
                    +
                    '                 </button>'
                    +
                    '           <button class="btn btn-outline-secondary relative flex rounded-full w-full mt-2 setMonthlyPicturesModal" data-tw-toggle="modal" data-tw-target="#Monthly-Pictures" data-constructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                     تصاویر ماهانه '
                    +
                    '                 </button>'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    '     </div>'
                    +
                    ' </div>'

                    +
                    // Contracts - Modal 2
                    '<div class="col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12">'
                    +
                    '        <div class="report-box-2 intro-y mt-5">'
                    +
                    '            <div class="box p-5 contracts  project-base-info Contracts"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                <div class="">'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal" style="display:none" class="contractLink"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-tw-target="#contractsModal" ></a>'
                    +
                    '                        <div  data-contractType="PartnershipAgreement" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-hasfile="false"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto">'
                    +
                    '                                <div class="font-medium text-right TitleOfContract">درخواست ها</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex PartnershipAgreementCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    partnershipAgreementsCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-hasfile="false" data-contractType="PartnershipAgreement"   data-tooltip="اضافه کردن درخواست جدید" data  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + RequestCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                        </div>'
                    +
                    '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none" class="contractLink"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" ></a>'
                    +
                    '                            <div data-contractType="ContractAgreement" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right">'
                    +
                    '                                <div class="font-medium TitleOfContract">قرارداد های پروژه</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex ContractAgreementCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" >'
                    +
                    contractAgreementsCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-contractType="ContractAgreement" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" ><span class="CountTotalContract">' + ContractCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"    class="contractLink"></a>'
                    +
                    '<div data-contractType="InitialPlan"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right">'
                    +
                    '                                <div class="font-medium TitleOfContract">نقشه ها</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex InitialPlanCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'

                    +
                    initialPlansCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-contractType="InitialPlan" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + PlanCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="contractLink" ></a>'
                    +
                    '<div data-contractType="MeetingBoard"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right">'
                    +
                    '                                <div class="font-medium TitleOfContract">صورت جلسات</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex MeetingBoardCircles"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    meetingBoardsCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-contractType="MeetingBoard" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + MeetingCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    // +
                    // '                    <div class="text-center">'
                    // +
                    // '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="contractLink"  ></a>'
                    // +
                    // '<div data-contractType="ContractorsAgreement"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    // +
                    // '                            <div class="mr-auto text-right">'
                    // +
                    // '                                <div class="font-medium TitleOfContract ">قرارداد پیمانکاران</div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            <div class="flex">'
                    // +
                    // '<div class="flex ContractorsAgreementCircles"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    // +
                    // contractorsAgreementsCircles
                    // +
                    // '</div>'
                    // +
                    // '                                <div class="w-10 h-10 image-fit zoom-in -mr-5 rounded-full bg-success attachments addContractDiv divAddContract colorWhite" data-contractType="ContractorsAgreement" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><i class="material-symbols-outlined add contractsIcons">add</i></div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                    </div>'
                    // +
                    // '                    <div class="text-center">'
                    // +
                    // '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"    class="contractLink"></a>'
                    // +
                    // '<div data-contractType="InitialPlan"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    // +
                    // '                            <div class="mr-auto text-right">'
                    // +
                    // '                                <div class="font-medium TitleOfContract">طرح اولیه</div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            <div class="flex">'
                    // +
                    // '<div class="flex InitialPlanCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'

                    // +
                    // initialPlansCircles
                    // +
                    // '</div>'
                    // +
                    // '                                <div class="w-10 h-10 image-fit zoom-in -mr-5 rounded-full bg-success attachments addContractDiv divAddContract colorWhite" data-contractType="InitialPlan" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><i class="material-symbols-outlined add contractsIcons">add</i></div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="contractLink"  data-contractType="ConfirmationAgreement" ></a>'
                    +
                    '                            <div data-contractType="ConfirmationAgreement"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right">'
                    +
                    '                                <div class="font-medium TitleOfContract">تاییدیه ها</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex ConfirmationAgreementCircles"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    confirmationAgreementsCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite"  data-contractType="ConfirmationAgreement" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + ConfirmCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    // +
                    // '                    <div class="text-center">'
                    // +
                    // '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal" class="contractLink"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"></a>'
                    // +
                    // '<div  data-contractType="ProgressPicture"   data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    // +
                    // '                            <div class="mr-auto text-right">'
                    // +
                    // '                                <div class="font-medium TitleOfContract">گزارش پیشرفت</div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            <div class="flex">'
                    // +
                    // '<div class="flex ProgressPictureCircles"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    // +
                    // progressPicturesCircles
                    // +
                    // '</div>'
                    // +
                    // '                                <div class="w-10 h-10 image-fit zoom-in -mr-5 rounded-full bg-success attachments addContractDiv divAddContract colorWhite"  data-contractType="ProgressPicture" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><i class="material-symbols-outlined add contractsIcons">add</i></div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"   class="contractLink"></a>'
                    +
                    '<div data-contractType="PitchDeck"   data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right ">'
                    +
                    '                                <div class="font-medium TitleOfContract">معرفی پروژه</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex PitchDeckCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    pitchDecksCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-contractType="PitchDeck" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + introProjectCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    +
                    '                </div>'
                    +
                    '            </div>'
                    +
                    '        </div>'
                    +
                    '    </div>'
                    +
                    // Project TimeLine - Modal 3
                    ' <div class="chartsPanel  col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 growdetails">'
                    +
                    '         <div class="report-box-2 intro-y mt-5">'
                    +
                    '             <div class="box p-5 all-pie-chart" id="all-pie-chart" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                 <button class="alert box-shadow-primary w-full alert-primary text-center text-xs cursor-pointer zoom-in chartsTimeLinePanelButton" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" role="alert">'
                    +
                    '                     جزئیات پیشرفت پروژه'
                    +
                    '                 </button>'
                    +
                    // '<p class="PersianDate">'+persianLastProgessUpdateDate +'</p>'
                    //+
                    '                 <div class="relative">'
                    +
                    // '                     <div class="h-[208px]">'
                    // +
                    '                         <div class="Time-chart" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"></div>'
                    +
                    // '                     </div>'
                    // +
                    '                 </div>'
                    +
                    '                 <div class="highcharts-figre" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"></div>'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    ' </div>'
                    +
                    // Project costs -  Modal 4
                    '<div data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 flipCardParent moreFD" dir="ltr">'
                    +
                    '<div class="report-box-2 intro-y mt-5 flipCardAccDetails" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    ' <div class="flip-card-inner flip-card-inner1">'
                    +
                    '     <div class="box flip-card-front p-5" >'
                    +
                    '         <div class="alert box-shadow-primary w-full alert-primary text-center text-xs chartsPanelButton" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  role="alert">'
                    +
                    '             جزئیات بیشتر مالی'
                    +
                    '         </div>'
                    +

                    '         <div class="tab-content tooltip-container mt-3 mb-1 zoom-in flipButtonAccDetails" data-tooltip-content="accpets-tooltip" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '           <div class="font-normal tooltip-text2">مانده حساب + سقف تنخواه</div>'
                    +
                    '             <div class="tab-pane active">'
                    // +
                    // '<p class="last-update text-sm">آخرین بارگذاری</p>'
                    +
                    '                 <div class="relative  highcharts-Speedometer" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                 </div>'
                    +
                    '             </div>'
                    +

                    '         </div>'
                    +
                    '<div class="more-details-inf flex">'
                    +
                    '         <div class="flex mt-4 mb-1  font-medium   h48Modal">'
                    +
                        '             <span style="color:' + colorsumv1 + '" class="font-medium">' +
      ((projectsVMList[j].ProjectRemainingCost != null) ?
        Math.abs(projectsVMList[j].ProjectRemainingCost).toLocaleString().toPersinaDigit() :
        '0'.toPersinaDigit()) +
    '</span> <span style="color:' + colorsumv1 + '" class="truncate mr-auto font-medium"> مانده حساب </span>'

                    +
                    '         </div>'
                    +
                    '         <div class="flex font-medium limit-t ">'
                    +
                    '             <span class="font-medium">' + Spliter(fundsCeiling).toPersinaDigit() + '</span> <span class="truncate mr-auto font-medium">سقف تنخواه  </span>'
                    +

                    '         </div>'
                    +
                    '         <div class="flex font-medium limit-o">'
                    +
                    '             <span class="font-medium">' + Spliter(Obligations).toPersinaDigit() + '</span> <span class="truncate mr-auto font-medium">تعهدات  </span>'
                    +
                    '         </div>'
                    +
                    '     </div>'
                    +
                    '</div>'
                    +
                    '     <div class="box flip-card-back p-5">'
                    +
                    '         <div class="tab-content">'
                    +
                    '             <div class="tab-pane active">'
                    +
                    '                 <div class="">'
                    +
                    '                     <div class="alert alert-success  text-white show mb-2 cursor: default form-control mt-2 projectCostModalClass"  role="alert" >'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-bold">' + ((projectsVMList[j].ProjectTotalCost != null) ? projectsVMList[j].ProjectTotalCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) + ' ریال </span> <span class="truncate mr-auto font-bold"> کل هزینه پروژه </span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-success-soft show mb-2 cursor-pointer zoom-in form-control mt-2  projectCostModal TotalPublicCostDiv"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-Type="TotalPublicCost" role="alert" data-tw-toggle="modal" data-tw-target="#Total-Public-Cost">'
                    +
                    '                         <div class="flex items-center ">'
                    +
                    '                             <span class="font-medium"> ' + ((projectsVMList[j].ProjectPublicTotalCost != null) ? projectsVMList[j].ProjectPublicTotalCost.toLocaleString().toPersinaDigit() : '0') + '  </span> <!--<i class="material-symbols-outlined aspect_ratio mx-auto openModalIcons"  >aspect_ratio</i>--> <span class="truncate mr-auto totalPriceTitle font-medium"> کل هزینه عمومی</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-success-soft show mb-2 cursor-pointer zoom-in form-control mt-2 projectCostModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-Type="ShareOfTheGeneralCost" role="alert" data-tw-toggle="modal" data-tw-target="#Share-Of-The-General-Cost">'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-medium"> ' + ((projectsVMList[j].ProjectShareOfGeneralCost != null) ? projectsVMList[j].ProjectShareOfGeneralCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) + '  </span> <span class="font-medium mx-auto"> ' +
                    ((projectsVMList[j].ProjectShareOfGeneralCostPercent != null) ? (projectsVMList[j].ProjectShareOfGeneralCostPercent + '').toPersinaDigit() : '0'.toPersinaDigit())
                    //(projectsVMList[j].ProjectShareOfGeneralCostPercent + '').toPersinaDigit()
                    +
                    ' % </span> <!--<i style="padding-right: 43px;" class="material-symbols-outlined openModalIcons aspect_ratio mx-auto" >aspect_ratio</i>-->  <span class="truncate mr-auto font-medium"> سهم از هزینه عمومی</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-success-soft show  cursor-pointer zoom-in form-control mt-2 totalPriceModal  projectCostModal TotalPublicCostDiv"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-Type="TotalPrivateCost" role="alert" data-tw-toggle="modal" data-tw-target="#Total-Public-Cost" >'
                    +
                    '                         <div class="flex items-center  ">'
                    +
                    '                             <span class="font-medium"> ' + ((projectsVMList[j].ProjectPrivateTotalCost != null) ? projectsVMList[j].ProjectPrivateTotalCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) +
                    '  </span> <!--<i style="padding-left: 11px;" class="material-symbols-outlined aspect_ratio mx-auto openModalIcons" >aspect_ratio</i>--> <span class="truncate mr-auto totalPriceTitle font-medium"> کل هزینه اختصاصی</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-pending show mb-2 cursor: default form-control mt-2 projectCostModalClass" role="alert">'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-bold"> ' + ((projectsVMList[j].ProjectRemainingCost != null) ? projectsVMList[j].ProjectRemainingCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) +
                    ' ریال </span> <span class="truncate mr-auto font-bold"> مانده حساب </span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-pending-soft show mb-2 cursor: default; form-control mt-2 projectCostModalClass" role="alert"  >'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-medium "> ' + ((projectsVMList[j].ShareOfTotalProjectCost != null) ? projectsVMList[j].ShareOfTotalProjectCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) +
                    '  </span> <span class="font-medium mx-auto" > ' + (shareOfTotalProjectCostPercent + '').toPersinaDigit() + ' % </span>  <span class="truncate mr-auto font-medium">سهم از کل هزینه</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-pending-soft show mb-2 cursor-pointer zoom-in form-control mt-2 projectCostModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  data-Type="PaidShareOfTheProject" role="alert" data-tw-toggle="modal" data-tw-target="#Paid-Share-Of-The-Project">'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-medium">' + ((projectsVMList[j].ProjectPaidShare != null) ? projectsVMList[j].ProjectPaidShare.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) +
                    '  </span> <!--<i style="padding-left: 23px;" class="material-symbols-outlined aspect_ratio mx-auto openModalIcons" >aspect_ratio</i>--> <span class="truncate mr-auto font-medium">سهم پرداختی پروژه  </span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                 </div>'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    '         <button class="btn btn-primary mr-1 mb-2 mt-2 flipButtonAccDetailsBack" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '             <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="arrow-left" data-lucide="arrow-left" class="lucide lucide-arrow-left w-5 h-5"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>'
                    +
                    '         </button>'
                    +
                    '     </div>'
                    +
                    ' </div>'
                    +
                    ' </div>'
                    +
                    '     </div>'
                    +
                    // DELAYS BLOCK

                    `

                                               <div data-constructionprojectid="${projectsVMList[j].ConstructionProjectId}" class="chartsPanel hidden col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 delaysBlock" dir="ltr"><div class="report-box-2 intro-y mt-5" data-constructionprojectid="${projectsVMList[j].ConstructionProjectId}"> <div>
                        <div class="box p-5 delayBox">
                                <div class="alert box-shadow-primary w-full alert-primary text-center chartsTimeLinePanelButton text-xs chartsPanelButton" data-constructionprojectid="${projectsVMList[j].ConstructionProjectId}" role="alert">لایحه تاخیرات</div>
                                         <div class="loading"></div>

                                </div>
                    </div>
                    </div>
                    </div>
                                    `

                    // END OF DELAYS BLOCK
                    +
                    '         <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="chartsTimeLinePanel col-span-12 sm:col-span-12 lg:col-span-12 xl:col-span-12 mt-2 lg:mt-12 xl:mt-2 report-box-2">'
                    +
                    '             <div data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="timeLineChart box">'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    // modal 6

                    '     <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="chartsPanel col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 lg:mt-2 xl:mt-2">'
                    +
                    '         <div class="report-box-2 intro-y mt-5 " data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '             <div class="private-pie-chart">'
                    +
                    '                   <div class="box   p-5 PieChartClass" id="private-pie-chart">'
                    +
                    '                       <div class="box-shadow-primary alert w-full alert-primary text-center text-xs" role="alert" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                           کل هزینه ها'
                    +
                    '                       </div>'
                    +
                    '                       <div class="mt-2">'
                    +
                    '                           <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="privateCostsChart"></div>'
                    +
                    '                       </div>'
                    +
                    '                       <div class="" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                          <div class="grid grid-cols-12 privateCostsTitles">'
                    +
                    '                               <div class="col-span-5 divide-b-2 divide-t-2 text-right">'
                    +
                    '                                   <span class="font-medium">شرح عملیات</span>'
                    +
                    '                              </div>'
                    +
                    '                               <div class="col-span-2 divide-b-2 divide-t-2 text-center">'
                    +
                    '                                   <span class="font-medium">درصد</span>'
                    +
                    '                               </div>'
                    +
                    '                               <div class="col-span-5 divide-b-2 divide-t-2 text-center">'
                    +
                    '                                   <span class="font-medium">هزینه</span>'
                    +
                    '                               </div></div>'
                    +
                    '                       <div class="privateCostsHistory" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                           <div class="grid grid-cols-12 privateCostsList">'
                    +
                    '                           </div>'
                    +
                    '                       </div>'
                    +
                    ' </div>'
                    +
                    '</div>'
                    +
                    '                       </div></div></div>'
                    +
                    // Modal 7
                    '                   <div data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="chartsPanel col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 lg:mt-2 xl:mt-2 p-5 PieChartClass" id="share-pie-chart">'
                    +
                    '                <div class="report-box-2 intro-y mt-5 " data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">' +
                    '             <div class="public-pie-chart">' +
                    '                     <div class="box   p-5 PieChartClass" id="public-pie-chart">'
                    +
                    '                       <div class="box-shadow-primary alert w-full alert-primary text-center text-xs" role="alert" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                           جزئیات هزینه عمومی'
                    +
                    '                       </div>'
                    +
                    '                       <div class="mt-2">'
                    +
                    '                           <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="publicCostsChart"></div>'
                    +
                    '                       </div>'
                    +
                    '                       <div class="" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                          <div class="grid grid-cols-12 publicCostsTitles">'
                    +
                    '                               <div class="col-span-5 divide-b-2 divide-t-2 text-right">'
                    +
                    '                                   <span class="font-medium">شرح عملیات</span>'
                    +
                    '                              </div>'
                    +
                    '                               <div class="col-span-2 divide-b-2 divide-t-2 text-center">'
                    +
                    '                                   <span class="font-medium">درصد</span>'
                    +
                    '                               </div>'
                    +
                    '                               <div class="col-span-5 divide-b-2 divide-t-2 text-center">'
                    +
                    '                                   <span class="font-medium">هزینه</span>'
                    +
                    '                               </div>'
                    +
                    '                           </div>'
                    +
                    '                       </div>'
                    +
                    '                       <div class="publicCostsHistory" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                           <div class="grid grid-cols-12 publicCostsList">'
                    +
                    '                          </div>'
                    +
                    '                       </div>'
                    +
                    ' </div>'
                    +
                    '</div>'
                    +
                    '                       </div></div></div>'
                    +
                    '</div>'
                    +
                    '</div>'
                    +
                    '</div>'




                $('#mainDiv').html($('#mainDiv').html() + str);
            }
            else {
                var str =
                    `<div class="block w-full border-b border-gray-300">
                                                 <div id="basic-accordion" >
                                                      <div class="preview">
                                                          <div class="accordion" id="faq-accordion-`+ projectsVMList[j].ConstructionProjectId + `">
                                                               <div class="accordion-item">
                                                                    <div id="faq-accordion-content-1" class="accordion-header">

                                                                                <a href="#faq-accordion-`+ projectsVMList[j].ConstructionProjectId + `" class="flex justify-center clickableAccordian pointer mr-auto font-medium text-2xl" type="button" data-tw-toggle="collapse" data-tw-target="#faq-accordion-collapse-` + projectsVMList[j].ConstructionProjectId + `" aria-expanded="false" aria-controls="faq-accordion-collapse` + projectsVMList[j].ConstructionProjectId + `" id="` + projectsVMList[j].ConstructionProjectId + `">


                                                                        <div class="w-1/5 p-2 text-center justify-center flex items-center">
                                                   <div class="nProject flex items-stretch  text-slate-600 text-base">
                                                   <i class="material-symbols-outlined apartment fs40  text-warning ml-1">apartment</i>
                                                   `+ projectsVMList[j].ConstructionProjectTitle + `
                                                   </div>
                                                </div>
                                                                        <div class="w-1/5 p-2   text-center justify-center flex items-center">
                                                           <span class="text-center text-base  text-slate-600">`+ (shareOfTotalProjectCostPercent + '').toPersinaDigit() + ` %</span>
                                                </div>
                                                                        <div class="w-1/5 p-2   text-center justify-center flex items-center">
                                                              <span class="block font-sans text-lg antialiased font-normal leading-normal"
                            style="color:${colorsum};direction:ltr">
                            ${(num1 < 0 ? '-' : '') + toPersianDigits(num1.toLocaleString('en-US').replace('-', ''))}
                        </span>

                                                </div>
                                                                        <div class="w-1/5 p-2  text-center justify-center flex items-center">
                                                      <section class="row radial-progress">


                                                         <svg class="radial-progress" data-percentage="`+ ProgressProject + `" viewBox="0 0 80 80">


                                                         <circle class="incomplete" cx="40" cy="40" r="35"></circle>

                                                         <circle class="complete" cx="40" cy="40" r="35" style="stroke-dashoffset: 39.58406743523136;"></circle>

                                                                 <text class="percentage" x="50%" y="57%" transform="matrix(0, 1, -1, 0, 80, 0)">`+ ProgressProject + `%</text>

                                                         </svg>

                                                      </section>
                                                </div></a>`+

                    '<div id="faq-accordion-collapse-' + projectsVMList[j].ConstructionProjectId + '" aria-labelledby="faq-accordion-content-1" data-tw-parent="#faq-accordion-collapse-' + projectsVMList[j].ConstructionProjectId + '" >'
                    +
                    '<div class="accordion-body  text-slate-600 dark:text-slate-500 leading-relaxed" data-body="' + projectsVMList[j].ConstructionProjectId + '" style="display:none;">'
                    +
                    '<div class="grid grid-cols-12 gap-6 rowOfProjects" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    // Project Detail And Daily Repeort -  Modal 1
                    ' <div class="col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12">'
                    +
                    '<div class="report-box-2 intro-y mt-5">'
                    +
                    ' <div class="box p-5 project-base-info" id="project-base-info">'
                    +
                    ' <div class="">'
                    +
                    '<div class="flex pb-2">'
                    +
                    '<div class="side-menu__icon text-warning" width="24" height="24" ><i class="material-symbols-outlined apartment fs40">apartment</i></div>'
                    +
                    '<div class="ml-auto font-medium text-3xl text-warning">'
                    +
                    projectsVMList[j].ConstructionProjectTitle
                    +
                    '</div></div>'
                    +
                    ' <div class="">'
                    +
                    ' <div class="flex items-center">'
                    +
                    '     <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="calendar" data-lucide="calendar" class="lucide lucide-calendar text-success">'
                    +
                    '<rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>'
                    +
                    '<line x1="16" y1="2" x2="16" y2="6"></line>'
                    +
                    '<line x1="8" y1="2" x2="8" y2="6"></line>'
                    +
                    '<line x1="3" y1="10" x2="21" y2="10"></line>'
                    +
                    ' </svg>'
                    +
                    ' <span class="font-medium mr-auto"> روز مانده تا پایان پروژه </span>'
                    +
                    '<span class="font-medium text-xl daysLeft">' + (projectsVMList[j].DaysLeftUntilTheEnd === null || projectsVMList[j].DaysLeftUntilTheEnd === undefined || projectsVMList[j].DaysLeftUntilTheEnd === '' ? '-' : projectsVMList[j].DaysLeftUntilTheEnd.toPersinaDigit()) + ' </span>'
                    +
                    'روز'
                    +
                    '</div>'
                    +
                    '<div class="flex items-center mt-4">'
                    +
                    '    <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="calendar" data-lucide="calendar" class="lucide lucide-calendar text-success">'
                    +
                    '        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>'
                    +
                    '        <line x1="16" y1="2" x2="16" y2="6"></line>'
                    +
                    '        <line x1="8" y1="2" x2="8" y2="6"></line>'
                    +
                    '        <line x1="3" y1="10" x2="21" y2="10"></line>'
                    +
                    '    </svg>'
                    +
                    '    <span class="font-medium mr-auto">  پیش بینی کل پروژه </span>'
                    +
                    '    <span class="truncate totalDaysleft totalDaysleft1"> ' + (projectsVMList[j].MonthsLeftUntilTheEnd === null || projectsVMList[j].MonthsLeftUntilTheEnd === undefined || projectsVMList[j].MonthsLeftUntilTheEnd === '' ? '-' : projectsVMList[j].MonthsLeftUntilTheEnd.toPersinaDigit()) + ' </span>'
                    +
                    'ماه'
                    +
                    '</div>'
                    +
                    '     <div class="flex items-center mt-4 mb-10">'
                    +
                    '     <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="dollar-sign" data-lucide="dollar-sign" class="lucide lucide-dollar-sign text-success">'
                    +
                    '  <line x1="12" y1="1" x2="12" y2="23"></line>'
                    +
                    '         <path d="M17 5H9.5a3.5 3.5 0 000 7h5a3.5 3.5 0 010 7H6"></path>'
                    +
                    '     </svg>'
                    +
                    '     <span class="font-medium mr-auto"> براورد کل هزینه پروژه </span>'
                    +
                    '     <span class="truncate totalDaysleft"> ' + (projectsVMList[j].PrevisionOfCost === null || projectsVMList[j].PrevisionOfCost === undefined || projectsVMList[j].PrevisionOfCost === '' ? '-' : Spliter((projectsVMList[j].PrevisionOfCost + '').toPersinaDigit())) + ' </span>'
                    +
                    //' میلیارد'
                    //+
                    '</div>'
                    +
                    '     <div class="flex items-center mt-4">'
                    +
                    '      <div class="w-2 h-2 bg-success rounded-full mr-2 cr1"></div>'
                    +
                    '      <span class="font-medium mr-auto"> شروع پروژه </span>'
                    +
                    '      <span class="truncate">  ' + (projectsVMList[j].StartDate === null || projectsVMList[j].StartDate === undefined || projectsVMList[j].StartDate === '' ? '-' : projectsVMList[j].StartDate.toPersinaDigit()) + '</span>'
                    +
                    '  </div>'
                    +
                    '  <div class="flex items-center mt-4 mb-3">'
                    +
                    '      <div class="w-2 h-2 bg-danger rounded-full mr-2 cr1"></div>'
                    +
                    '      <span class="font-medium mr-auto"> پایان پروژه </span>'
                    +
                    '      <span class="truncate"> ' + (projectsVMList[j].EndFaDate === null || projectsVMList[j].EndFaDate === undefined || projectsVMList[j].EndFaDate === '' ? '-' : projectsVMList[j].EndFaDate.toPersinaDigit()) + ' </span>'
                    +
                    ' </div></div>'
                    +
                    //'                 <a class="flex items-center text-success Daily-Report-Link"  data-tw-toggle="modal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  style="display:none" data-tw-target="#Daily-Report"></a>'
                    //+
                    '                 <button class="btn btn-outline-secondary relative flex rounded-full w-full mt-11 setDailyReportModal" data-tw-toggle="modal"  data-tw-target="#Daily-Report" data-constructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                     گزارشات روزانه پروژه'
                    +
                    '                 </button>'
                    +
                    //'                 <a class="flex items-center text-success Daily-Pictures-Link"  data-tw-toggle="modal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  style="display:none" data-tw-target="#Daily-Report"></a>'
                    //+
                    '           <button class="btn btn-outline-secondary relative flex rounded-full w-full mt-2 setDailyPicturesModal" data-tw-toggle="modal" data-tw-target="#Daily-Pictures" data-constructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                     تصاویر روزانه '
                    +
                    '                 </button>'
                    +
                    '           <button class="btn btn-outline-secondary relative flex rounded-full w-full mt-2 setMonthlyPicturesModal" data-tw-toggle="modal" data-tw-target="#Monthly-Pictures" data-constructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                     تصاویر ماهانه '
                    +
                    '                 </button>'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    '     </div>'
                    +
                    ' </div>'

                    +
                    // Contracts - Modal 2
                    '<div class="col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12">'
                    +
                    '        <div class="report-box-2 intro-y mt-5">'
                    +
                    '            <div class="box p-5 contracts  project-base-info Contracts"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                <div class="">'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal" style="display:none" class="contractLink"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-tw-target="#contractsModal" ></a>'
                    +
                    '                        <div  data-contractType="PartnershipAgreement" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-hasfile="false"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto">'
                    +
                    '                                <div class="font-medium text-right TitleOfContract">درخواست ها</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex PartnershipAgreementCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    partnershipAgreementsCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-hasfile="false" data-contractType="PartnershipAgreement"   data-tooltip="اضافه کردن درخواست جدید" data  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + RequestCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                        </div>'
                    +
                    '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none" class="contractLink"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" ></a>'
                    +
                    '                            <div data-contractType="ContractAgreement" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right">'
                    +
                    '                                <div class="font-medium TitleOfContract">قرارداد های پروژه</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex ContractAgreementCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" >'
                    +
                    contractAgreementsCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-contractType="ContractAgreement" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" ><span class="CountTotalContract">' + ContractCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"    class="contractLink"></a>'
                    +
                    '<div data-contractType="InitialPlan"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right">'
                    +
                    '                                <div class="font-medium TitleOfContract">نقشه ها</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex InitialPlanCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'

                    +
                    initialPlansCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-contractType="InitialPlan" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + PlanCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="contractLink" ></a>'
                    +
                    '<div data-contractType="MeetingBoard"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right">'
                    +
                    '                                <div class="font-medium TitleOfContract">صورت جلسات</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex MeetingBoardCircles"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    meetingBoardsCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-contractType="MeetingBoard" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + MeetingCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    // +
                    // '                    <div class="text-center">'
                    // +
                    // '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="contractLink"  ></a>'
                    // +
                    // '<div data-contractType="ContractorsAgreement"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    // +
                    // '                            <div class="mr-auto text-right">'
                    // +
                    // '                                <div class="font-medium TitleOfContract ">قرارداد پیمانکاران</div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            <div class="flex">'
                    // +
                    // '<div class="flex ContractorsAgreementCircles"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    // +
                    // contractorsAgreementsCircles
                    // +
                    // '</div>'
                    // +
                    // '                                <div class="w-10 h-10 image-fit zoom-in -mr-5 rounded-full bg-success attachments addContractDiv divAddContract colorWhite" data-contractType="ContractorsAgreement" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><i class="material-symbols-outlined add contractsIcons">add</i></div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                    </div>'
                    // +
                    // '                    <div class="text-center">'
                    // +
                    // '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"    class="contractLink"></a>'
                    // +
                    // '<div data-contractType="InitialPlan"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    // +
                    // '                            <div class="mr-auto text-right">'
                    // +
                    // '                                <div class="font-medium TitleOfContract">طرح اولیه</div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            <div class="flex">'
                    // +
                    // '<div class="flex InitialPlanCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'

                    // +
                    // initialPlansCircles
                    // +
                    // '</div>'
                    // +
                    // '                                <div class="w-10 h-10 image-fit zoom-in -mr-5 rounded-full bg-success attachments addContractDiv divAddContract colorWhite" data-contractType="InitialPlan" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><i class="material-symbols-outlined add contractsIcons">add</i></div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="contractLink"  data-contractType="ConfirmationAgreement" ></a>'
                    +
                    '                            <div data-contractType="ConfirmationAgreement"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right">'
                    +
                    '                                <div class="font-medium TitleOfContract">تاییدیه ها</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex ConfirmationAgreementCircles"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    confirmationAgreementsCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite"  data-contractType="ConfirmationAgreement" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + ConfirmCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    // +
                    // '                    <div class="text-center">'
                    // +
                    // '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal" class="contractLink"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"></a>'
                    // +
                    // '<div  data-contractType="ProgressPicture"   data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    // +
                    // '                            <div class="mr-auto text-right">'
                    // +
                    // '                                <div class="font-medium TitleOfContract">گزارش پیشرفت</div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            <div class="flex">'
                    // +
                    // '<div class="flex ProgressPictureCircles"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    // +
                    // progressPicturesCircles
                    // +
                    // '</div>'
                    // +
                    // '                                <div class="w-10 h-10 image-fit zoom-in -mr-5 rounded-full bg-success attachments addContractDiv divAddContract colorWhite"  data-contractType="ProgressPicture" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><i class="material-symbols-outlined add contractsIcons">add</i></div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                            </div>'
                    // +
                    // '                    </div>'
                    +
                    '                    <div class="text-center">'
                    +
                    '                        <a data-tw-toggle="modal"  style="display:none"  data-tw-target="#contractsModal" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"   class="contractLink"></a>'
                    +
                    '<div data-contractType="PitchDeck"   data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="btn w-full mb-3 px-4 flex items-center zoom-in contractModalButton">'
                    +
                    '                            <div class="mr-auto text-right ">'
                    +
                    '                                <div class="font-medium TitleOfContract">معرفی پروژه</div>'
                    +
                    '                            </div>'
                    +
                    '                            <div class="flex">'
                    +
                    '<div class="flex PitchDeckCircles" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    pitchDecksCircles
                    +
                    '</div>'
                    +
                    '                                <div class="w-9 h-9 image-fit zoom-in rounded-full bg-main attachments addContractDiv divAddContract colorWhite" data-contractType="PitchDeck" data-tooltip="اضافه کردن قرارداد جدید" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"><span class="CountTotalContract">' + introProjectCount + '</span></div>'
                    +
                    '                            </div>'
                    +
                    '                            </div>'
                    +
                    '                    </div>'
                    +
                    '                </div>'
                    +
                    '            </div>'
                    +
                    '        </div>'
                    +
                    '    </div>'
                    +
                    // Project TimeLine - Modal 3
                    ' <div class="col-span-12  xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 growdetails" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '         <div class="report-box-2 intro-y mt-5">'
                    +
                    '             <div class="box p-5 all-pie-chart" id="all-pie-chart" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                 <button class="alert w-full box-shadow-primary alert-primary text-center text-xs cursor-pointer zoom-in chartsTimeLinePanelButton" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" role="alert" data-RepresentativeId="' + projectsVMList[j].ConstructionProjectRepresentativeId + '">'
                    +
                    '                     جزئیات پیشرفت پروژه'
                    +
                    '                 </button>'
                    +
                    // '<p class="PersianDate">'+persianLastProgessUpdateDate +'</p>'
                    //+
                    '                 <div class="relative">'
                    +
                    // '                     <div class="h-[208px]">'
                    // +
                    '                         <div class="Time-chart" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"></div>'
                    +
                    // '                     </div>'
                    // +
                    '                 </div>'
                    +
                    '                 <div class="highcharts-figre" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"></div>'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    ' </div>'
                    +

                    // DELAYS BLOCK

                    `
                                                     <div data-constructionprojectid="${projectsVMList[j].ConstructionProjectId}" class="chartsPanel hidden col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 delaysBlock" dir="ltr"><div class="report-box-2 intro-y mt-5" data-constructionprojectid="${projectsVMList[j].ConstructionProjectId}"> <div>
                        <div class="box p-5 delayBox">
                                <div class="alert box-shadow-primary w-full alert-primary text-center chartsTimeLinePanelButton text-xs chartsPanelButton" data-constructionprojectid="${projectsVMList[j].ConstructionProjectId}" role="alert">لایحه تاخیرات</div>
                                         <div class="loading"></div>

                                </div>
                    </div>
                    </div>
                    </div>
                                            `
                    +
                    // END OF DELAYS BLOCK

                    // Project costs -  Modal 4
                    '<div data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class=" col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 flipCardParent moreFD" dir="ltr">'
                    +
                    '<div class="report-box-2 intro-y mt-5 flipCardAccDetails" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    ' <div class="flip-card-inner1 flip-card-inner">'
                    +
                    '     <div class="box flip-card-front p-5" >'
                    +
                    '         <div class="alert box-shadow-primary w-full alert-primary text-center text-xs chartsPanelButton" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  role="alert">'
                    +
                    '             جزئیات بیشتر مالی'
                    +
                    '         </div>'
                    +

                    '         <div class="tab-content tooltip-container mt-3 mb-1 zoom-in flipButtonAccDetails" data-tooltip-content="accpets-tooltip" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '           <div class="font-normal tooltip-text2">مانده حساب + سقف تنخواه</div>'
                    +
                    '             <div class="tab-pane active">'
                    // +
                    // '<p class="last-update text-sm">آخرین بارگذاری</p>'
                    +
                    '                 <div class="relative  highcharts-Speedometer" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                 </div>'
                    +
                    '             </div>'
                    +

                    '         </div>'
                    +
                    '<div class="more-details-inf flex">'
                    +
                    '         <div class="flex mt-4 mb-1  font-medium   h48Modal">'
                    +
       '             <span style="color:' + colorsumv1 + '" class="font-medium">' +
      ((projectsVMList[j].ProjectRemainingCost != null) ?
        Math.abs(projectsVMList[j].ProjectRemainingCost).toLocaleString().toPersinaDigit() :
        '0'.toPersinaDigit()) +
    '</span> <span style="color:' + colorsumv1 + '" class="truncate mr-auto font-medium"> مانده حساب </span>'                    +
                    '         </div>'
                    +
                    '         <div class="flex font-medium limit-t ">'
                    +
                    '             <span class="font-medium">' + Spliter(fundsCeiling).toPersinaDigit() + '</span> <span class="truncate mr-auto font-medium">سقف تنخواه  </span>'
                    +

                    '         </div>'
                    +
                    '         <div class="flex font-medium limit-o">'
                    +
                    '             <span class="font-medium">' + Spliter(Obligations).toPersinaDigit() + '</span> <span class="truncate mr-auto font-medium">تعهدات  </span>'
                    +
                    '         </div>'
                    +
                    '     </div>'
                    +
                    '</div>'
                    +
                    '     <div class="box flip-card-back p-5">'
                    +
                    '         <div class="tab-content">'
                    +
                    '             <div class="tab-pane active">'
                    +
                    '                 <div class="">'
                    +
                    '                     <div class="alert alert-success  text-white show mb-2 cursor: default form-control mt-2 projectCostModalClass"  role="alert" >'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-bold">' + ((projectsVMList[j].ProjectTotalCost != null) ? projectsVMList[j].ProjectTotalCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) + ' ریال </span> <span class="truncate mr-auto font-bold"> کل هزینه پروژه </span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-success-soft show mb-2 cursor-pointer zoom-in form-control mt-2  projectCostModal TotalPublicCostDiv"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-Type="TotalPublicCost" role="alert" data-tw-toggle="modal" data-tw-target="#Total-Public-Cost">'
                    +
                    '                         <div class="flex items-center ">'
                    +
                    '                             <span class="font-medium"> ' + ((projectsVMList[j].ProjectPublicTotalCost != null) ? projectsVMList[j].ProjectPublicTotalCost.toLocaleString().toPersinaDigit() : '0') + '  </span> <!--<i class="material-symbols-outlined aspect_ratio mx-auto openModalIcons"  >aspect_ratio</i>--> <span class="truncate mr-auto totalPriceTitle font-medium"> کل هزینه عمومی</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-success-soft show mb-2 cursor-pointer zoom-in form-control mt-2 projectCostModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-Type="ShareOfTheGeneralCost" role="alert" data-tw-toggle="modal" data-tw-target="#Share-Of-The-General-Cost">'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-medium"> ' + ((projectsVMList[j].ProjectShareOfGeneralCost != null) ? projectsVMList[j].ProjectShareOfGeneralCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) + '  </span> <span class="font-medium mx-auto"> ' +
                    ((projectsVMList[j].ProjectShareOfGeneralCostPercent != null) ? (projectsVMList[j].ProjectShareOfGeneralCostPercent + '').toPersinaDigit() : '0'.toPersinaDigit())
                    //(projectsVMList[j].ProjectShareOfGeneralCostPercent + '').toPersinaDigit()
                    +
                    ' % </span> <!--<i style="padding-right: 43px;" class="material-symbols-outlined openModalIcons aspect_ratio mx-auto" >aspect_ratio</i>-->  <span class="truncate mr-auto font-medium"> سهم از هزینه عمومی</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-success-soft show  cursor-pointer zoom-in form-control mt-2 totalPriceModal  projectCostModal TotalPublicCostDiv"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" data-Type="TotalPrivateCost" role="alert" data-tw-toggle="modal" data-tw-target="#Total-Public-Cost" >'
                    +
                    '                         <div class="flex items-center  ">'
                    +
                    '                             <span class="font-medium"> ' + ((projectsVMList[j].ProjectPrivateTotalCost != null) ? projectsVMList[j].ProjectPrivateTotalCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) +
                    '  </span> <!--<i style="padding-left: 11px;" class="material-symbols-outlined aspect_ratio mx-auto openModalIcons" >aspect_ratio</i>--> <span class="truncate mr-auto totalPriceTitle font-medium"> کل هزینه اختصاصی</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-pending show mb-2 cursor: default form-control mt-2 projectCostModalClass" role="alert">'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-bold"> ' + ((projectsVMList[j].ProjectRemainingCost != null) ? projectsVMList[j].ProjectRemainingCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) +
                    ' ریال </span> <span class="truncate mr-auto font-bold"> مانده حساب </span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-pending-soft show mb-2 cursor: default; form-control mt-2 projectCostModalClass" role="alert"  >'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-medium "> ' + ((projectsVMList[j].ShareOfTotalProjectCost != null) ? projectsVMList[j].ShareOfTotalProjectCost.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) +
                    '  </span> <span class="font-medium mx-auto" > ' + (shareOfTotalProjectCostPercent + '').toPersinaDigit() + ' % </span>  <span class="truncate mr-auto font-medium">سهم از کل هزینه</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                     <div class="alert alert-pending-soft show mb-2 cursor-pointer zoom-in form-control mt-2 projectCostModal"  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  data-Type="PaidShareOfTheProject" role="alert" data-tw-toggle="modal" data-tw-target="#Paid-Share-Of-The-Project">'
                    +
                    '                         <div class="flex items-center">'
                    +
                    '                             <span class="font-medium">' + ((projectsVMList[j].ProjectPaidShare != null) ? projectsVMList[j].ProjectPaidShare.toLocaleString().toPersinaDigit() : '0'.toPersinaDigit()) +
                    '  </span> <!--<i style="padding-left: 23px;" class="material-symbols-outlined aspect_ratio mx-auto openModalIcons" >aspect_ratio</i>--> <span class="truncate mr-auto font-medium">سهم پرداختی پروژه  </span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                 </div>'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    '         <button class="btn btn-primary mr-1 mb-2 mt-2 flipButtonAccDetailsBack" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '             <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="arrow-left" data-lucide="arrow-left" class="lucide lucide-arrow-left w-5 h-5"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>'
                    +
                    '         </button>'
                    +
                    '     </div>'
                    +
                    ' </div>'
                    +
                    ' </div>'
                    +
                    '     </div>'
                    +
                    '         <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="chartsTimeLinePanel col-span-12 sm:col-span-12 lg:col-span-12 xl:col-span-12 mt-2 lg:mt-12 xl:mt-2 report-box-2">'
                    +
                    '             <div data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="timeLineChart box">'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    '         <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="chartsPanel col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 lg:mt-2 xl:mt-2">'
                    +
                    '         <div class="report-box-2 intro-y mt-5">'
                    +
                    '             <div class="box p-5 payment-bar-chart" id="payment-bar-chart">'
                    +
                    '                 <div class="alert alert-primary box-shadow-primary text-center text-xs mb-3" role="alert">'
                    +
                    '                     هزینه و پرداخت ماهیانه'
                    +
                    '                 </div>'
                    +
                    '                 <div class="mt-2">'
                    +
                    '                     <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="paymentChart"></div>'
                    +
                    '                 </div>'
                    +
                    '                 <div class="" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                    <div class="grid grid-cols-12 costAndPaymentTitles">'
                    +
                    '                        <div class="col-span-3 divide-b-2 divide-t-2 text-right">'
                    +
                    '                             <span class="font-medium">ماه</span>'
                    +
                    '                        </div>'
                    +
                    '                         <div class="col-span-3 divide-b-2 divide-t-2 text-right">'
                    +
                    '                             <span class="font-medium">هزینه</span>'
                    +
                    '                         </div>'
                    +
                    '                         <div class="col-span-3 divide-b-2 divide-t-2 text-right">'
                    +
                    '                             <span class="font-medium">پرداخت</span>'
                    +
                    '                         </div>'
                    +
                    '                         <div class="col-span-3 divide-b-2 divide-t-2 text-right">'
                    +
                    '                             <span class="font-medium">اختلاف</span>'
                    +
                    '                         </div>'
                    +
                    '                     </div>'
                    +
                    '                 </div>'
                    +
                    '                 <div class="costAndPaymentHistory overflow-auto" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                     <div class="grid grid-cols-12 costAndPaymentList">'
                    +
                    '                     </div>'
                    +
                    '                 </div>'
                    +
                    '             </div>'
                    +
                    '         </div>'
                    +
                    '     </div>'
                    +


                    // modal 6

                    '     <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="chartsPanel col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 lg:mt-2 xl:mt-2">'
                    +
                    '         <div class="report-box-2 intro-y mt-5 " data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '             <div class="private-pie-chart">'
                    +
                    '                   <div class="box   p-5 PieChartClass" id="private-pie-chart">'
                    +
                    '                       <div class="box-shadow-primary alert w-full alert-primary text-center text-xs" role="alert" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                           کل هزینه ها'
                    +
                    '                       </div>'
                    +
                    '                       <div class="mt-2">'
                    +
                    '                           <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"  class="privateCostsChart"></div>'
                    +
                    '                       </div>'
                    +
                    '                       <div class="" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                          <div class="grid grid-cols-12 privateCostsTitles">'
                    +
                    '                               <div class="col-span-5 divide-b-2 divide-t-2 text-right">'
                    +
                    '                                   <span class="font-medium">شرح عملیات</span>'
                    +
                    '                              </div>'
                    +
                    '                               <div class="col-span-2 divide-b-2 divide-t-2 text-center">'
                    +
                    '                                   <span class="font-medium">درصد</span>'
                    +
                    '                               </div>'
                    +
                    '                               <div class="col-span-5 divide-b-2 divide-t-2 text-center">'
                    +
                    '                                   <span class="font-medium">هزینه</span>'
                    +
                    '                               </div></div>'
                    +
                    '                       <div class="privateCostsHistory" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                           <div class="grid grid-cols-12 privateCostsList">'
                    +
                    '                           </div>'
                    +
                    '                       </div>'
                    +
                    ' </div>'
                    +
                    '</div>'
                    +
                    '                       </div></div></div>'
                    +
                    // Modal 7
                    '                   <div data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="chartsPanel col-span-12 xxl:col-span-3 xl:col-span-6 llg:col-span-4 lg:col-span-6 mt-2 md:col-span-12 sm:col-span-12 xs:col-span-12 lg:mt-2 xl:mt-2 p-5 PieChartClass" id="share-pie-chart">'
                    +
                    '                <div class="report-box-2 intro-y mt-5 " data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">' +
                    '             <div class="public-pie-chart">' +
                    '                     <div class="box   p-5 PieChartClass" id="public-pie-chart">'
                    +
                    '                       <div class="box-shadow-primary alert w-full alert-primary text-center text-xs" role="alert" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                           جزئیات هزینه عمومی'
                    +
                    '                       </div>'
                    +
                    '                       <div class="mt-2">'
                    +
                    '                           <div  data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '" class="publicCostsChart"></div>'
                    +
                    '                       </div>'
                    +
                    '                       <div class="" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                          <div class="grid grid-cols-12 publicCostsTitles">'
                    +
                    '                               <div class="col-span-5 divide-b-2 divide-t-2 text-right">'
                    +
                    '                                   <span class="font-medium">شرح عملیات</span>'
                    +
                    '                              </div>'
                    +
                    '                               <div class="col-span-2 divide-b-2 divide-t-2 text-center">'
                    +
                    '                                   <span class="font-medium">درصد</span>'
                    +
                    '                               </div>'
                    +
                    '                               <div class="col-span-5 divide-b-2 divide-t-2 text-center">'
                    +
                    '                                   <span class="font-medium">هزینه</span>'
                    +
                    '                               </div>'
                    +
                    '                           </div>'
                    +
                    '                       </div>'
                    +
                    '                       <div class="publicCostsHistory" data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '">'
                    +
                    '                           <div class="grid grid-cols-12 publicCostsList">'
                    +
                    '                          </div>'
                    +
                    '                       </div>'
                    +
                    ' </div>'
                    +
                    '</div>'
                    +
                    '                       </div></div></div>'
                    +
                    '</div>'
                    +
                    '</div>'
                    +
                    '</div>'

                $('#mainDiv').html($('#mainDiv').html() + str);


            }

            document.querySelectorAll('svg.radial-progress').forEach(function (svg) {
                const percentage = parseInt(svg.getAttribute('data-percentage'), 10);
                const completeCircle = svg.querySelector('circle.complete');
                const incompleteCircle = svg.querySelector('circle.incomplete');

                // Determine which range class to apply
                if (percentage === 0 || percentage <= 20) {
                    completeCircle.classList.add('range-0-20');
                } else if (percentage <= 40) {
                    completeCircle.classList.add('range-21-40');
                } else if (percentage <= 60) {
                    completeCircle.classList.add('range-41-60');
                } else if (percentage <= 80) {
                    completeCircle.classList.add('range-61-80');
                } else if (percentage <= 100) {
                    completeCircle.classList.add('range-81-100');
                }

                // Copy stroke color from .complete to .incomplete or set a default for 0%
                const computedStyle = window.getComputedStyle(completeCircle);
                const strokeColor = percentage === 0 ? 'red' : computedStyle.getPropertyValue('stroke');
                incompleteCircle.style.stroke = strokeColor;

                // Update stroke-dashoffset for the complete circle based on the percentage
                const circumference = 2 * Math.PI * 35; // Circumference of the circle (r = 35)
                const offset = circumference - (percentage / 100) * circumference;
                completeCircle.style.strokeDashoffset = offset;
            });

            $(".addContractDiv").each(function () {
                tippy(this, {
                    content: $(this).attr("data-tooltip")
                });
            });
        }
        $('body').on('click', '.clickableAccordian', function (e) {

            var _this = $(this);
            var toggle = _this.attr('data-tw-target');
            if (!toggle) return; // Ensure toggle exists.

            var id = parseInt(toggle.match(/\d+$/)[0]);
            let target1 = $(`#faq-accordion-collapse-${id}`);

            // If the clicked accordion is already open, close it
            if (target1.hasClass('show')) {
                // Close the currently open accordion
                target1.removeClass('show').slideUp(300);

                // Revert the text and radial-progress styles for the clicked accordion
                _this.find('.text-white').removeClass('text-white').addClass('text-slate-600');
                _this.find('svg.radial-progress').css({
                    'stroke': '',
                    'fill': ''
                });

                // Remove the 'bg-primary' class from the clicked element
                _this.removeClass('bg-primary');


            } else {

                // Close all other accordions
                $('.accordion-collapse.show').each(function () {
                    $(this).removeClass('show').slideUp(300);
                });

                // Reset styles for all other clickableAccordians
                $('.clickableAccordian').each(function () {
                    $(this).find('.text-white').removeClass('text-white').addClass('text-slate-600');
                    $(this).find('svg.radial-progress').css({
                        'stroke': '',
                        'fill': ''
                    });
                    $(this).removeClass('bg-primary');
                });

                // Open the clicked accordion
                target1.addClass('show').slideDown(300);

                // Apply styles for the clicked accordion
                _this.find('.text-slate-600').removeClass('text-slate-600').addClass('text-white');
                _this.find('svg.radial-progress').css({
                    'stroke': '#fff',
                    'fill': '#fff'
                });
                _this.addClass('bg-primary');


                //Sina codes to close DelayHighChart
                if ($('.chartsTimeLinePanel[data-ConstructionProjectId=' + id + ']').css('display') != 'none') {
                    $('.chartsTimeLinePanelButton[data-constructionprojectid=' + id + ']').trigger('click');
                }
            }

            // Show the corresponding accordion-body
            $('.accordion-body').css("display", "none"); // Hide all
            var targetBody = $(`.accordion-body[data-body="${id}"]`);
            if (targetBody.length) {
                targetBody.css("display", "contents");
            }

            // Enable scrolling in the scrollbox if needed.
            $('.scrollbox-overflowed').css("overflow", "auto");
        });

        for (var j = 0; j < projectsVMList.length; j++) {

            var contractAddress = $('.Contracts[data-constructionprojectid="' + projectsVMList[j].ConstructionProjectId + '"]')[0];



            var Timechart = $('.Time-chart[data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"]')[0];
            var highchartsfigure = $('.highcharts-figre[data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"]')[0];
            var all_pie_chart = $('.all-pie-chart[data-ConstructionProjectId="' + projectsVMList[j].ConstructionProjectId + '"]')[0];




            // var address = $('#progressProcessChart-' + projectsVMList[j].ConstructionProjectId)[0];
            // Highcharts.chart(address, {
            //     chart: {
            //         type: 'bar'
            //     },
            //     title: {
            //         text: ''
            //     },
            //     xAxis: {
            //         categories: ['2020/21', '2019/20', '2018/19', '2017/18', '2016/17']
            //     },
            //     yAxis: {
            //         min: 0,
            //         title: {
            //             text: 'Goals'
            //         }
            //     },
            //     legend: {
            //         enabled: false
            //     },
            //     //legend: {
            //     //    reversed: false,
            //     //    enabled: true
            //     //},
            //     plotOptions: {
            //         series: {
            //             stacking: 'normal',
            //             dataLabels: {
            //                 enabled: true
            //             }
            //         }
            //     },
            //     series: [{
            //         name: 'Cristiano Ronaldo',
            //         data: [4, 4, 6, 15, 12]
            //     }, {
            //         name: 'Lionel Messi',
            //         data: [5, 3, 12, 6, 11]
            //     }, {
            //         name: 'Robert Lewandowski',
            //         data: [5, 15, 8, 5, 8]
            //     }]
            // });


            var addressCharSpeedometer = $('.highcharts-Speedometer[data-constructionprojectid="' + projectsVMList[j].ConstructionProjectId + '"]')[0];

            var htmlDebtBalance = '';
            //var debts = -625000000;


            var debts = - (((projectsVMList[j].ProjectRemainingCost != null) ? parseFloat(projectsVMList[j].ProjectRemainingCost) : 0) +
                ((projectsVMList[j].FundsCeiling != null) ? parseFloat(projectsVMList[j].FundsCeiling) : 0));

            //var debts = -325000000;
            //var debts = 325000000;
            //var debts = 625000000;
            //var debts = 0;

            if ((debts < -500000000)) {
                htmlDebtBalance = '<div style="font-size:18px; direction: ltr; text-align: center; color: #B91C1C;"> ' + Spliter(-debts).toPersinaDigit() + ' </div>' +
                    '<div style="font-size:18px; direction: ltr; text-align: center; color: #B91C1C;justify-center"> مانده</div>';
            }
            else
                if ((-500000000 <= debts) && (debts < 0)) {
                    htmlDebtBalance = '<div style="font-size:18px; direction: ltr; text-align: center; color: #B91C1C;"> ' + Spliter(-debts).toPersinaDigit() + ' </div>' +
                        '<div style="font-size:18px; direction: ltr; text-align: center; color: #D97706;justify-center"> مانده</div>';
                }
                else
                    if ((0 <= debts) && (debts < 500000000)) {
                        htmlDebtBalance = '<div style="font-size:18px; direction: ltr; text-align: center; color: #0D9488;justify-center"> ' + Spliter(debts).toPersinaDigit() + ' </div>';
                    }
                    else
                        if ((500000000 <= debts)) {
                            htmlDebtBalance = '<div style="font-size:18px; direction: ltr; text-align: center; color: #0D9488;justify-center"> ' + Spliter(debts).toPersinaDigit() + ' </div>';
                        }

            if (debts <= -1000000000)
                debts = -1000000000;
            else
                if (debts >= 1000000000)
                    debts = 1000000000;
            // else
            //     debts = -debts;

            var deviation = 0;
            var htmldeviation = '';
            try {
                if (projectsVMList[j].ProjectProgressDataVM != null)
                    if (projectsVMList[j].ProjectProgressDataVM.Deviation != null) {
                        deviation = parseFloat(projectsVMList[j].ProjectProgressDataVM.Deviation.replace('%', ''));


                        if ((deviation < -15)) {
                            htmldeviation = '<div style="font-size:18px; direction: ltr; text-align: center; color: #B91C1C;"> ' + Spliter(deviation).toPersinaDigit() + '% </div>' +
                                '<div style="font-size:18px; direction: ltr; text-align: center; color: #B91C1C;"> انحراف </div>';
                        }
                        else
                            if ((-15 <= deviation) && (deviation < 0)) {
                                htmldeviation = '<div style="font-size:18px; direction: ltr; text-align: center; color: #D97706;"> ' + Spliter(deviation).toPersinaDigit() + '% </div>' +
                                    '<div style="font-size:18px; direction: ltr; text-align: center; color: #D97706;"> انحراف </div>';
                            }
                            else
                                if ((0 <= deviation) && (deviation < 15)) {
                                    htmldeviation = '<div style="font-size:18px; direction: ltr; text-align: center; color: #F59E0B;"> ' + Spliter(deviation).toPersinaDigit() + '% </div>' +
                                        '<div style="font-size:18px; direction: ltr; text-align: center; color: #F59E0B;"> انحراف </div>';
                                }
                                else
                                    if ((15 <= deviation)) {
                                        htmldeviation = '<div style="font-size:18px; direction: ltr; text-align: center; color: #0D9488;"> ' + Spliter(deviation).toPersinaDigit() + '% </div>' +
                                            '<div style="font-size:18px; direction: ltr; text-align: center; color: #0D9488;"> انحراف </div>';
                                    }
                    }
            }
            catch (exc) { }

            Highcharts.chart(addressCharSpeedometer, {

                chart: {
                    type: 'gauge',
                    plotBackgroundColor: null,
                    plotBackgroundImage: null,
                    plotBorderWidth: 0,
                    plotShadow: false,
                    height: '70%'
                },

                tooltip: {
                    enabled: false
                },

                title: {
                    text: ''
                },

                pane: {
                    startAngle: -90,
                    endAngle: 89.9,
                    background: null,
                    center: ['50%', '75%'],
                    size: '100%'
                },

                // the value axis
                yAxis: {
                    min: -1000000000,
                    max: 1000000000,
                    tickPixelInterval: 100,
                    tickPosition: 'inside',
                    tickColor: Highcharts.defaultOptions.chart.backgroundColor || '#FFFFFF',
                    tickLength: 20,
                    tickWidth: 2,
                    minorTickInterval: null,
                    labels: {
                        distance: 30,
                        style: {
                            fontSize: '14px'
                        },
                        formatter: function () {
                            switch (this.value) {
                                case -1000000000:
                                    return '';
                                    //return '-10 میلیارد';
                                    break;
                                case -500000000:
                                    //return '-5 میلیارد';
                                    return '<div style="text-align: right; direction: rtl; float:right"><span style="float: right;">۵-</span> <span style="float: right;">میلیارد</span></div>';
                                    break;
                                case 0:
                                    return '0';
                                    break;
                                case 500000000:
                                    //return '5 میلیارد';
                                    return '<div style="text-align: right; direction: rtl; float:right"><span style="float: right;">۵</span> <span style="float: right;">میلیارد</span></div>';
                                    break;
                                case 500000000:
                                    return '';
                                    //return '10 میلیارد';
                                    break;
                            }

                            //return this.value;
                        }
                    },
                    lineWidth: 0,
                    plotBands: [{
                        from: -1000000000,
                        to: -500000000,
                        color: '#B91C1C', // red  B91C1C
                        thickness: 20
                    },
                    {
                        from: -500000000,
                        to: 0,
                        color: '#D97706', // orange  D97706
                        thickness: 20
                    },
                    {
                        from: 0,
                        to: 500000000,
                        color: '#F59E0B', // yellow F59E0B
                        thickness: 20
                    }, {
                        from: 500000000,
                        to: 1000000000,
                        color: '#0D9488', // green 0D9488
                        thickness: 20
                    }]
                },

                series: [{
                    name: ' ',
                    //name: '<div style="color: red; direction: ltr;">مانده بدهی</div',
                    //data: [-325000000],
                    data: [debts],
                    // tooltip: {
                    //     //valueSuffix: ' '
                    // },
                    dataLabels: {
                        format: '{y}',
                        borderWidth: 0,
                        color: (
                            Highcharts.defaultOptions.title &&
                            Highcharts.defaultOptions.title.style &&
                            Highcharts.defaultOptions.title.style.color
                        ) || '#333333',
                        style: {
                            fontSize: '20px'
                        },
                        format:
                            htmlDebtBalance
                        //'<div style="text-align:center; direction: rtl; text-align: center;">' +
                        //'<div style="font-size:14px; direction: ltr; text-align: center; color: red;"> {y} </div>' +
                        //'<div style="font-size:14px; direction: ltr; text-align: center;"> مانده بدهی </div>'
                        //'<span style="font-size:25px; direction: ltr; text-align: center;">مانده بدهی</span>' +
                        //'<span style="font-size:12px;opacity:0.4"></span>' +
                        //'</div>'
                    },
                    dial: {
                        radius: '80%',
                        backgroundColor: 'gray',
                        baseWidth: 12,
                        baseLength: '0%',
                        rearLength: '0%'
                    },
                    pivot: {
                        backgroundColor: 'gray',
                        radius: 6
                    }

                }]

            });

            var program = 0;
            var operation = 0;

            try {
                if (projectsVMList[j].ProjectProgressDataVM != null)
                    if (projectsVMList[j].ProjectProgressDataVM.Program != null) {
                        program = parseFloat(projectsVMList[j].ProjectProgressDataVM.Program);
                    }

                if (projectsVMList[j].ProjectProgressDataVM != null)
                    if (projectsVMList[j].ProjectProgressDataVM.Operation != null) {
                        operation = parseFloat(projectsVMList[j].ProjectProgressDataVM.Operation);
                    }
            }
            catch (exc) { }

            var programStart = '';
            var programEnd = '';

            try {
                if (projectsVMList[j].ProjectProgressDataVM != null)
                    if (projectsVMList[j].ProjectProgressDataVM.ProgramStart != null) {
                        programStart = projectsVMList[j].ProjectProgressDataVM.ProgramStart;
                    }

                if (projectsVMList[j].ProjectProgressDataVM != null)
                    if (projectsVMList[j].ProjectProgressDataVM.ProgramEnd != null) {
                        programEnd = projectsVMList[j].ProjectProgressDataVM.ProgramEnd;
                    }
                debugger;
                if (programStart != '') {
                    var start = programStart.split('/');
                    var end = programEnd.split('/');
                    $(all_pie_chart).append('<div class="programStart"><div>شروع برنامه</div><div>' + start[0].toPersinaDigit() + "/" + start[1].toPersinaDigit() + "/" + start[2].toPersinaDigit() + '</div></div>');
                    $(all_pie_chart).append('<div class="programEnd"><div>پایان برنامه</div><div>' + end[0].toPersinaDigit() + "/" + end[1].toPersinaDigit() + "/" + end[2].toPersinaDigit() + '</div></div>');
                }
            }
            catch (exc) { }

            Highcharts.chart(Timechart, {

                chart: {
                    type: 'solidgauge',
                    height: '50%',
                    // events: {
                    //     render: renderIcons
                    // }
                },

                title: {
                    text: '',
                    style: {
                        fontSize: '24px'
                    }
                },

                tooltip: {
                    borderWidth: 0,
                    backgroundColor: 'none',
                    shadow: false,
                    style: {
                        fontSize: '16px'
                    },
                    valueSuffix: '%',
                    pointFormat: '{series.name}<br><span style="font-size:1.4em; color: {point.color}; font-weight: bold">{point.y}</span>',
                    positioner: function (labelWidth) {
                        return {
                            x: (this.chart.chartWidth - labelWidth) / 2,
                            y: (this.chart.plotHeight / 3)
                        };
                    }
                },

                pane: {
                    startAngle: 0,
                    endAngle: 360,
                    background: [{ // Track for Move
                        outerRadius: '112%',
                        innerRadius: '88%',
                        backgroundColor: Highcharts.color(Highcharts.getOptions().colors[0])
                            .setOpacity(0.3)
                            .get(),
                        borderWidth: 0
                    }, { // Track for Exercise
                        outerRadius: '87%',
                        innerRadius: '63%',
                        backgroundColor: Highcharts.color(Highcharts.getOptions().colors[1])
                            .setOpacity(0.3)
                            .get(),
                        borderWidth: 0
                    }/*, { // Track for Stand
                                                                                                                                                                                                                outerRadius: '62%',
                                                                                                                                                                                                                innerRadius: '38%',
                                                                                                                                                                                                                backgroundColor: Highcharts.color(Highcharts.getOptions().colors[2])
                                                                                                                                                                                                                    .setOpacity(0.3)
                                                                                                                                                                                                                    .get(),
                                                                                                                                                                                                                borderWidth: 0
                                                                                                                                                                                                            }*/]
                },

                yAxis: {
                    min: 0,
                    max: 100,
                    lineWidth: 0,
                    tickPositions: []
                },

                plotOptions: {
                    solidgauge: {
                        dataLabels: {
                            enabled: false
                        },
                        linecap: 'round',
                        stickyTracking: false,
                        rounded: true
                    }
                },

                series: [{
                    name: 'برنامه',
                    data: [{
                        color: Highcharts.getOptions().colors[0],
                        radius: '112%',
                        innerRadius: '88%',
                        y: program//(projectsVMList[j].ProjectProgressDataVM.Program != null ? parseFloat(projectsVMList[j].ProjectProgressDataVM.Program) : 0)
                    }]
                }, {
                    name: 'عملکرد',
                    data: [{
                        color: Highcharts.getOptions().colors[1],
                        radius: '87%',
                        innerRadius: '63%',
                        y: operation//(projectsVMList[j].ProjectProgressDataVM.Operation != null ? parseFloat(projectsVMList[j].ProjectProgressDataVM.Operation) : 0)
                    }]
                }/*, {
                                                                                                                                                                                                            name: 'Stand',
                                                                                                                                                                                                            data: [{
                                                                                                                                                                                                                color: Highcharts.getOptions().colors[2],
                                                                                                                                                                                                                radius: '62%',
                                                                                                                                                                                                                innerRadius: '38%',
                                                                                                                                                                                                                y: 50
                                                                                                                                                                                                            }]
                                                                                                                                                                                                        }*/]
            });

            Highcharts.chart(highchartsfigure, {

                chart: {
                    type: 'gauge',
                    plotBackgroundColor: null,
                    plotBackgroundImage: null,
                    plotBorderWidth: 0,
                    plotShadow: false,
                    height: '57%'
                },

                tooltip: {
                    enabled: false
                },

                title: {
                    text: ''
                },

                pane: {
                    startAngle: -90,
                    endAngle: 89.9,
                    background: null,
                    center: ['50%', '75%'],
                    size: '100%'
                },

                // the value axis
                yAxis: {
                    min: -30,
                    max: 30,
                    tickPixelInterval: 15,
                    tickPosition: 'inside',
                    tickColor: Highcharts.defaultOptions.chart.backgroundColor || '#FFFFFF',
                    tickLength: 20,
                    tickWidth: 2,
                    minorTickInterval: null,
                    labels: {
                        distance: 30,
                        style: {
                            fontSize: '14px'
                        },
                        formatter: function () {
                            switch (this.value) {
                                case -30:
                                    return '<div style="text-align: right; direction: rtl; float:right"><span style="float: right;">۳۰-</span> <span style="float: right;">%</span></div>';
                                    //return '-10 میلیارد';
                                    break;
                                case -15:
                                    //return '-5 میلیارد';
                                    return '<div style="text-align: right; direction: rtl; float:right"><span style="float: right;">۱۵-</span> <span style="float: right;">%</span></div>';
                                    break;
                                case 0:
                                    return '0';
                                    break;
                                case 15:
                                    //return '5 میلیارد';
                                    return '<div style="text-align: right; direction: rtl; float:right"><span style="float: right;">۱۵</span> <span style="float: right;">%</span></div>';
                                    break;
                                case 30:
                                    return '<div style="text-align: right; direction: rtl; float:right"><span style="float: right;">۳۰</span> <span style="float: right;">%</span></div>';
                                    //return '10 میلیارد';
                                    break;
                            }

                            //return this.value;
                        }
                    },
                    lineWidth: 0,
                    plotBands: [{
                        from: -30,
                        to: -15,
                        color: '#B91C1C', // red  B91C1C
                        thickness: 20
                    },
                    {
                        from: -15,
                        to: 0,
                        color: '#D97706', // orange  D97706
                        thickness: 20
                    },
                    {
                        from: 0,
                        to: 15,
                        color: '#F59E0B', // yellow F59E0B
                        thickness: 20
                    }, {
                        from: 15,
                        to: 30,
                        color: '#0D9488', // green 0D9488
                        thickness: 20
                    }]
                },

                series: [{
                    name: ' ',
                    //name: '<div style="color: red; direction: ltr;">مانده بدهی</div',
                    //data: [-325000000],
                    data: [deviation],
                    // tooltip: {
                    //     //valueSuffix: ' '
                    // },
                    dataLabels: {
                        format: '{y}',
                        borderWidth: 0,
                        color: (
                            Highcharts.defaultOptions.title &&
                            Highcharts.defaultOptions.title.style &&
                            Highcharts.defaultOptions.title.style.color
                        ) || '#333333',
                        style: {
                            fontSize: '20px'
                        },
                        format:
                            htmldeviation
                        //'<div style="text-align:center; direction: rtl; text-align: center;">' +
                        //'<div style="font-size:14px; direction: ltr; text-align: center; color: red;"> {y} </div>' +
                        //'<div style="font-size:14px; direction: ltr; text-align: center;"> مانده بدهی </div>'
                        //'<span style="font-size:25px; direction: ltr; text-align: center;">مانده بدهی</span>' +
                        //'<span style="font-size:12px;opacity:0.4"></span>' +
                        //'</div>'
                    },
                    dial: {
                        radius: '80%',
                        backgroundColor: 'gray',
                        baseWidth: 12,
                        baseLength: '0%',
                        rearLength: '0%'
                    },
                    pivot: {
                        backgroundColor: 'gray',
                        radius: 6
                    }

                }]

            });
            // Highcharts.chart(highchartsfigure, {
            //     chart: {
            //         type: 'gauge',
            //         plotBackgroundColor: null,
            //         plotBackgroundImage: null,
            //         plotBorderWidth: 0,
            //         plotShadow: false,
            //         height: '40%',
            //     },

            //     title: {
            //         text: ''
            //     },

            //     pane: {
            //         startAngle: -90,
            //         endAngle: 89.9,
            //         background: null,
            //         center: ['50%', '75%'],
            //         size: '110%'
            //     },

            //     // the value axis
            //     yAxis: {
            //         min: 0,
            //         max: 200,
            //         tickPixelInterval: 72,
            //         tickPosition: 'inside',
            //         tickColor: Highcharts.defaultOptions.chart.backgroundColor || '#FFFFFF',
            //         tickLength: 20,
            //         tickWidth: 2,
            //         minorTickInterval: null,
            //         labels: {
            //             distance: 20,
            //             style: {
            //                 fontSize: '14px'
            //             }
            //         },
            //         lineWidth: 0,
            //         plotBands: [{
            //             from: 0,
            //             to: 120,
            //             color: '#55BF3B', // green
            //             thickness: 20
            //         }, {
            //             from: 120,
            //             to: 160,
            //             color: '#DDDF0D', // yellow
            //             thickness: 20
            //         }, {
            //             from: 160,
            //             to: 200,
            //             color: '#DF5353', // red
            //             thickness: 20
            //         }]
            //     },

            //     series: [{
            //         name: 'Speed',
            //         data: [80],
            //         tooltip: {
            //             valueSuffix: ' km/h'
            //         },
            //         dataLabels: {
            //             format: '{y} km/h',
            //             borderWidth: 0,
            //             color: (
            //                 Highcharts.defaultOptions.title &&
            //                 Highcharts.defaultOptions.title.style &&
            //                 Highcharts.defaultOptions.title.style.color
            //             ) || '#333333',
            //             style: {
            //                 fontSize: '16px'
            //             }
            //         },
            //         dial: {
            //             radius: '80%',
            //             backgroundColor: 'gray',
            //             baseWidth: 12,
            //             baseLength: '0%',
            //             rearLength: '0%'
            //         },
            //         pivot: {
            //             backgroundColor: 'gray',
            //             radius: 6
            //         }

            //     }]

            // });
        }


        /*  هزینه عمومی*/
        //$('#General_cost_scroll').scrollbox({

        //});


        /* سهم از هزینه عمومی*/
        // $('#Scroll_share_of_public_expenditure').scrollbox({

        // });


        // /* کل هزینه اختصاصی*/
        // $('#Dedicated_total_cost_scroll').scrollbox({

        // });


        /* پرداخت پروژه*/
        // $('#Project_payment_scroll').scrollbox({

        // });

        var isMobile = false;
        if (window.matchMedia("(max-width: 825px)").matches) {
            // The viewport is less than 825 pixels wide
            isMobile = true
        }

        var groupedIndexData = {};
        var groupedData = {};
        //#region Get project Cost Modal Data
        $('body').on('click', '.projectCostModal', function (e) {
            e.preventDefault();

            $('body').addClass('fixModalPadding');
            $('body').addClass('overflow-y-hidden');

            $('html').addClass('overflow-y-hidden');

            groupedIndexData = {};
            groupedData = {}
            var parsedRightSideContent = '';
            $('#titleTotal').html('');
            $('#publicTotalCost').html('');
            $('#descriptionAndTotalContent').html('');
            $('#MonthContent').html('');

            var _this = $(this);
            var constructionProjectId = _this.attr('data-constructionProjectId');
            var type = _this.attr('data-Type');
            $.ajax({
                cache: false,
                type: "POST",
                url: "/UserProjects/MyProjectsManagement/GetConstructionProjectFinancialDataByConstructionProjectId",
                data: { 'type': type, 'ConstructionProjectId': constructionProjectId },
                success: function (result) {


                    console.log('result->', result)
                    if (result === null || result === '' || result === undefined || result.length <= 0) {
                        $('#my-warning-modal').find('.modal-title').html('خطا');
                        $('#my-warning-modal').find('#error').html('خطا');
                        return $('#warningModal')[0].click();
                    }
                    // modal Number 2 And 4 کل هزینه عمومی یا کل هزینه اختصاصی
                    if (type === 'TotalPublicCost' || type === 'TotalPrivateCost') {
                        //$('#General_cost_scroll').scrollbox('destroy');

                        var rightSideContent = '';
                        var totalRowSum = {};
                        for (var j = 0; j < result.RowsDataVM.length; j++) {
                            var rightItem = result.RowsDataVM[j];
                            if (rightItem.CellIndex == 0) {
                                totalRowSum[rightItem.RowIndex] = 0;
                                rightSideContent +=
                                    '<div class="overflow-x-auto sm:overflow-x-visible bg-slate-100">'
                                    +
                                    '<div class="intro-y inbox">'
                                    +
                                    '<div class="inline-block sm:block text-slate-600 dark:text-slate-500 bg-slate-100 dark:bg-darkmode-400/70 border-b border-slate-200/60 dark:border-darkmode-400">'
                                    +
                                    '<div class="py-3 xs:px-0 bg-slate-100">'
                                    +
                                    '<div class="grid grid-cols-2 gap-4 md:gap-0 sm:gap-0 xs:gap-0">'
                                    +
                                    '<div class="col-span-1 lg:col-span-1 xl:col-span-1 sm:col-span-2 md:col-span-1 md:w-auto text-right overflow-hidden rowForHeight">'
                                    +
                                    (
                                        (rightItem != null && rightItem != undefined && rightItem != '') ?
                                            (
                                                (rightItem.CellData != null && rightItem.CellData !== '' && rightItem.CellData !== undefined) ?
                                                    rightItem.CellData :
                                                    ''
                                            ) :
                                            ''
                                    )
                                    +
                                    '</div>'
                                    +
                                    '<div class="col-span-1 lg:col-span-1 xl:col-span-1 sm:col-span-2 text-center md:col-span-1 md:w-auto text-center whitespace-nowrap totalvaluerowindex" data-TotalValueRowIndex="'
                                    +
                                    (
                                        (rightItem != null && rightItem != undefined && rightItem != '') ?
                                            (
                                                (rightItem.RowIndex != null && rightItem.RowIndex !== '' && rightItem.RowIndex !== undefined) ?
                                                    rightItem.RowIndex :
                                                    ''
                                            ) :
                                            ''
                                    )
                                    +
                                    '">--TotalRowSum--</div>'
                                    +
                                    '</div>'
                                    +
                                    '</div>'
                                    +
                                    '</div>'
                                    +
                                    '</div>'
                                    +
                                    '</div>';
                            }
                            else {
                                totalRowSum[rightItem && rightItem.RowIndex != null && rightItem.CellData != null ? rightItem.RowIndex : ''] =
                                    (totalRowSum[rightItem && rightItem.RowIndex != null ? rightItem.RowIndex : ''] || 0) +
                                    (rightItem && rightItem.CellData != null ? parseFloat(rightItem.CellData.replace(/,/g, '')) : 0);
                            }
                        }

                        var resultOfTotalPublicCost = 0;
                        for (var rowIndex in totalRowSum) {
                            if (!isNaN(totalRowSum[rowIndex])) {
                                resultOfTotalPublicCost += totalRowSum[rowIndex];
                                rightSideContent = rightSideContent.replace('--TotalRowSum--', totalRowSum[rowIndex].toLocaleString().toPersinaDigit());
                            }
                            else {
                                rightSideContent = rightSideContent.replace('--TotalRowSum--', '-');
                            }
                        }
                        $('#publicTotalCost').html(resultOfTotalPublicCost.toLocaleString().toPersinaDigit())

                        groupedIndexData = groupBy(result.RowsDataVM, "RowIndex");
                        var strHeaderDates = '';
                        var leftSideContenet = '';
                        parsedRightSideContent = $(rightSideContent);


                        for (var i = result.HeaderMonthsVM.length; i >= 0; i--) {
                            var item = result.HeaderMonthsVM[i];
                            if (isMobile) {
                                if (i == (result.HeaderMonthsVM.length)) {
                                    strHeaderDates = '<div class="item"><div class="col-span-4 sm:col-span-4 text-center whitespace-nowrap ">مجموع</div></div>';
                                    continue;
                                }
                            } else {
                                if (i == (result.HeaderMonthsVM.length)) {
                                    continue;
                                }
                            }

                            strHeaderDates = strHeaderDates +
                                '<div class="item"  data-CellIndex="'
                                +
                                (
                                    (item != null && item != undefined && item != '') ?
                                        (
                                            (item.CellIndex != null && item.CellIndex !== '' && item.CellIndex !== undefined) ?
                                                item.CellIndex :
                                                ''
                                        ) :
                                        ''
                                )
                                +
                                '">'
                                +
                                '<div id="fixthis-' + i + '" class="col-span-4 sm:col-span-2 text-center whitespace-nowrap " data-CellIndex="'
                                +
                                (
                                    (item != null && item != undefined && item != '') ?
                                        (
                                            (item.CellIndex != null && item.CellIndex !== '' && item.CellIndex !== undefined) ?
                                                item.CellIndex :
                                                ''
                                        ) :
                                        ''
                                )
                                +
                                '">'
                                +
                                (
                                    (item != null && item != undefined && item != '') ?
                                        (
                                            (item.CellTitle != null && item.CellTitle !== '' && item.CellTitle !== undefined) ?
                                                fixDateFormat(item.CellTitle).toPersinaDigit() :
                                                ''
                                        ) :
                                        ''
                                )
                                +
                                '</div>'
                                +
                                '</div>';
                        }

                        // Append HTML to the DOM
                        $('#titleTotal').append(strHeaderDates);

                        // Remove &nbsp; from elements with IDs starting with "fixthis-"
                        $('[id^="fixthis-"]').each(function () {
                            var content = $(this).html();
                            $(this).html(content.replace(/&nbsp;/g, ''));
                        });



                        //
                        // var tmpRows = $('#descriptionAndTotalContent').find('.rowForHeight');
                        // if (tmpRows !== undefined) {
                        //     if (tmpRows.length > 0) {
                        //         for (var j = 0; j < tmp.length; j++) {
                        //             var currentHeight = $(tmpRows).height;
                        //             $(tmpRows).next().height(currentHeight);
                        //             var headOnCell = $('#MonthContent').find('.rowForHeight').eq(j);
                        //             if (headOnCell != undefined) {
                        //                 $(headOnCell).height(currentHeight);
                        //             }
                        //         }
                        //     }
                        // }

                        var sliderTiny = tns({
                            container: '.titleTotal',
                            slideBy: "page",
                            mouseDrag: false,
                            autoplay: false,
                            controls: false,
                            nav: false,
                            loop: false,
                            rewind: true,
                            swipeAngle: false,
                            speed: 500,
                            items: ((isMobile) ? 1 : 3),
                            rewind: false,
                        });
                        $('#titleTotal')[0].tns = sliderTiny;
                        $('#descriptionAndTotalContent').html(parsedRightSideContent);
                        setPublicCostRecords()

                    }
                    // modal Number 3 سهم از هزینه عمومی
                    else if (type === 'ShareOfTheGeneralCost') {



                        $('#share_of_public_expenditure').empty()
                        ////$('body').removeClass('fixModalPadding');
                        var record = '';
                        var rowIndex = 1;
                        var totoalOfPublicCost = 0;
                        var CalculatedAmount = 0;
                        for (var j = 0; j < result.HeaderMonthsVM.length; j++) {
                            var item = result.HeaderMonthsVM[j];
                            var costItem = result.TotalPublicCost[j];
                            var rowsDataItem = result.RowsDataVM[rowIndex];
                            if (rowsDataItem != null && rowsDataItem.CellData != null && costItem.CellData != null) {
                                CalculatedAmount += Math.round((parseFloat(rowsDataItem.CellData) / 100) * parseFloat(costItem.CellData.toString()))
                                totoalOfPublicCost += parseFloat(costItem.CellData);
                            }
                            record +=
                                //'<div class="col-span-12 ">'
                                //+
                                //'<div class="overflow-x-auto sm:overflow-x-visible bg-slate-100">'
                                //+
                                //'<div class=" intro-y inbox box">'
                                //+
                                //'<div class="inbox__item  inline-block sm:block text-slate-600 dark:text-slate-500 bg-slate-100 dark:bg-darkmode-400/70 border-b border-slate-200/60 dark:border-darkmode-400">'
                                //+
                                //'<div class=" px-5 py-3 bg-slate-100">'
                                //+
                                //'<div class="grid grid-cols-12 gap-6 flex" data-cellIndex="'
                                //
                                //+
                                //
                                //(item != null && item !== '' && item !== undefined ?
                                //    (item.CellIndex != null && item.CellIndex !== '' && item.CellIndex !== undefined ?
                                //        item.CellIndex : "")
                                //    : "")
                                //
                                //
                                //+
                                //'">'
                                //+
                                '<div class="publicCostDataItemTitle col-span-12 xxl:col-span-3 xl:col-span-3 llg:col-span-3 lg:col-span-6 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center">ماه</div>'
                                +
                                '<div id="fixthis-' + (rowIndex + 1) + '" class="Fixltr col-span-12 xxl:col-span-3 xxl:text-center xl:col-span-3 xl:text-center llg:col-span-3 llg:text-center lg:col-span-3 lg:text-center md:col-span-3 md:text-center sm:col-span-6 sm:text-left xs:col-span-6 xs:text-left  whitespace-nowrap">' +

                                (item != null && item !== '' && item !== undefined ?
                                    (item.CellTitle != null && item.CellTitle !== '' && item.CellTitle !== undefined ?
                                        fixDateFormat(item.CellTitle).toPersinaDigit() : "")
                                    : "")

                                +


                                '</div>'
                                +
                                '<div class="publicCostDataItemTitle col-span-12 xxl:col-span-3 xl:col-span-3 llg:col-span-3 lg:col-span-6 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center">هزینه کل عمومی</div>'
                                +
                                '<div class="col-span-12 xxl:col-span-3 xxl:text-center xl:col-span-3 xl:text-center llg:col-span-3 llg:text-center lg:col-span-3 lg:text-center md:col-span-3 md:text-center sm:col-span-6 sm:text-left xs:col-span-6 xs:text-left  whitespace-nowrap">'
                                +

                                (costItem != null && costItem !== '' && costItem !== undefined ?
                                    (costItem.CellData != null && costItem.CellData !== '' && costItem.CellData !== undefined ?
                                        costItem.CellData.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",").toPersinaDigit() : "")
                                    : "")


                                +
                                '</div>'
                                +
                                '<div class="publicCostDataItemTitle col-span-12 sm:col-span-6 text-justify whitespace-nowrap justify-center">سهم پروژه</div>'
                                +
                                '<div class="col-span-12 xxl:col-span-3 xxl:text-center xl:col-span-3 xl:text-center llg:col-span-3 llg:text-center lg:col-span-3 lg:text-center md:col-span-3 md:text-center sm:col-span-6 sm:text-left xs:col-span-6 xs:text-left  whitespace-nowrap">'
                                +

                                (rowsDataItem != null && rowsDataItem !== '' && rowsDataItem !== undefined ?
                                    (
                                        rowsDataItem.CellData != null && rowsDataItem.CellData !== '' && rowsDataItem.CellData !== undefined ?
                                            rowsDataItem.CellData.toPersinaDigit() : "")
                                    : ""
                                )

                                +
                                '</div>'
                                +
                                '<div class="publicCostDataItemTitle col-span-12 sm:col-span-6 text-justify whitespace-nowrap justify-center">سهم پروژه</div>'
                                +
                                '<div class="col-span-12 xxl:col-span-3 xxl:text-center xl:col-span-3 xl:text-center llg:col-span-3 llg:text-center lg:col-span-3 lg:text-center md:col-span-3 md:text-center sm:col-span-6 sm:text-left xs:col-span-6 xs:text-left  whitespace-nowrap">'
                                +
                                (
                                    rowsDataItem != null && rowsDataItem.CellData != null &&
                                        costItem != null && costItem.CellData != null &&
                                        costItem.CellData !== '' && costItem.CellData !== undefined ?
                                        Math.round((parseFloat(rowsDataItem.CellData) / 100) * parseFloat(costItem.CellData.toString())).toLocaleString().toPersinaDigit()
                                        : ""
                                )
                                +
                                '</div>'
                                +
                                '<div class="publicCostShareOfProjectTitleBorder col-span-12 xxl:col-span-12 xl:col-span-12 llg:col-span-12 lg:col-span-12 md:col-span-12 sm:col-span-12 xs:col-span-12 text-center whitespace-nowrap"></div>'

                            //+
                            //'</div>'
                            //+
                            //'</div>'
                            //+
                            //'</div>'
                            //+
                            //'</div>'
                            //+
                            //'</div>'
                            //+
                            //'</div>';
                            rowIndex++;
                        }

                        // Append the generated content to the target element
                        $('#share_of_public_expenditure').append(record);

                        // Remove &nbsp; from all dynamically assigned IDs
                        $('[id^="fixthis-"]').each(function () {
                            var content = $(this).html();
                            $(this).html(content.replace(/&nbsp;/g, ''));
                        });

                        $('#CalculatedAmount').html(CalculatedAmount.toLocaleString().toPersinaDigit());
                        $('#publicTotalCostVlaue').html(totoalOfPublicCost.toLocaleString().toPersinaDigit());

                        if (!isNaN(Math.round((CalculatedAmount / totoalOfPublicCost) * 100)))
                            $('#publicTotalCostPrecentVlaue').html((Math.round((CalculatedAmount / totoalOfPublicCost) * 100) + '').toPersinaDigit() + '%');
                        else
                            $('#publicTotalCostPrecentVlaue').html('0%'.toPersinaDigit());


                    }
                    // modal Number 7 سهم پرداختی پروژه
                    else if (type === 'PaidShareOfTheProject') {
                        ////$('body').removeClass('fixModalPadding');

                        //$('#Project_payment_scroll').scrollbox('destroy');

                        //$('#Project_payment_scroll').empty()

                        var record = '';
                        // '<div class="col-span-12 ">'
                        // +

                        // '<div class="overflow-x-auto sm:overflow-x-visible">'
                        // +

                        // '<div class="intro-y inbox box">'
                        // +

                        // '<div class="inbox\_\_item inline-block sm:block text-slate-600 dark:text-slate-500 bg-slate-100 dark:bg-darkmode-400/70 border-b border-slate-200/60 dark:border-darkmode-400">'
                        // +

                        // '<div class="px-5 py-3">'
                        // +
                        // '<div class="grid grid-cols-12 gap-6 flex">';



                        // var groupedIndexData = {};
                        // groupedIndexData = groupBy(result.RowsDataVM, "RowIndex");
                        //groupedIndexData = groupBy(result.RowsDataVM, "CellIndex");

                        var totalPaidShareOfProejct = 0;
                        for (var j = 0; j < result.RowsDataVM.length; j++) {
                            var item = result.RowsDataVM[j];
                            //for (var j = 0; j < groupedIndexData.length; j++) {

                            //for (var i in groupedIndexData)
                            //var item = groupedIndexData[j];
                            //var item = groupedIndexData[j];

                            if ((j + 1) % 3 === 0) {//مجموع
                                totalPaidShareOfProejct += parseFloat(item.CellData.replace(/,/g, '')) || 0;
                            }

                            if ((j + 1) % 3 === 2) {//شرح عملیات

                                record += /*'<div class="paidShareCostDataItemTitle col-span-12 xxl:col-span-3 xl:col-span-3 llg:col-span-3 lg:col-span-6 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center">شرح عملیات</div>'*/
                                    //    +
                                    '<div class="col-span-6 xxl:col-span-6 xl:col-span-6 llg:col-span-6 lg:col-span-6 mt-3 md:col-span-3 sm:col-span-12 xs:col-span-12 text-justify">';

                            }
                            else
                                if ((j + 1) % 3 === 1) {//تاریخ

                                    record += /*'<div class="paidShareCostDataItemTitle col-span-12 xxl:col-span-3 xl:col-span-3 xl:text-center llg:col-span-3 lg:col-span-6 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center">تاریخ</div>'*/
                                        //+
                                        '<div class="date-c col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 mt-3 md:col-span-1 md:text-center sm:col-span-12 xs:col-span-12 xs:text-left text-center">';

                                } else {//پرداختی

                                    record += '<div class="paidShareCostDataItemTitle col-span-12 xxl:col-span-3 xl:col-span-3 llg:col-span-3 lg:col-span-6 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center">پرداختی</div>'
                                        +
                                        '<div class="col-span-2 xxl:col-span-2 xl:col-span-2 xl:text-center llg:col-span-2 lg:col-span-2 mt-3 md:col-span-1 md:text-center sm:col-span-6 xs:col-span-6 xs:text-left text-center ">';

                                }

                            record += (item != null && item !== '' && item !== undefined && item.CellData != null && item.CellData !== '' && item.CellData !== undefined) ?

                                item.CellData.toPersinaDigit() :

                                '';

                            record += '</div>';


                            if ((j + 1) % 3 === 0 && j) {//مجموع
                                record += '<div class="paidShareCostDataItemTitle col-span-12 xxl:col-span-3 xl:col-span-3 llg:col-span-3 lg:col-span-6 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center">مجموع</div>'
                                    +
                                    '<div class="col-span-2 xxl:col-span-2 xl:col-span-2 xl:text-center llg:col-span-2 lg:col-span-2 mt-3 md:col-span-1 md:text-center sm:col-span-6  xs:col-span-6 xs:text-left text-center">'
                                    + totalPaidShareOfProejct.toLocaleString().toPersinaDigit()
                                    + '</div><div class="paidShareOfProjectTitle col-span-12 xxl:col-span-12 xl:col-span-12 llg:col-span-12 lg:col-span-12 md:col-span-12 sm:col-span-12 xs:col-span-12 text-center whitespace-nowrap">&nbsp;</div>';
                            }
                            // if ((j + 1) % 3 === 0 && j !== item.length - 1) {
                            //     '</div></div></div></div></div></div>'
                            //         +
                            //         '<div class="col-span-12 ">'
                            //         +
                            //         '<div class="overflow-x-auto sm:overflow-x-visible">'
                            //         +
                            //         '<div class="intro-y inbox box">'
                            //         +
                            //         '<div class="inbox\_\_item inline-block sm:block text-slate-600 dark:text-slate-500 bg-slate-100 dark:bg-darkmode-400/70 border-b border-slate-200/60 dark:border-darkmode-400">'
                            //         +
                            //         '<div class="px-5 py-3">'
                            //         +
                            //         '<div class="grid grid-cols-12 gap-6 flex">';

                            // }
                        }


                        // record +=

                        //     '</div>' +

                        //     '</div>' +

                        //     '</div>' +

                        //     '</div>' +

                        //     '</div>';

                        $('#totalPaid-Share').html(totalPaidShareOfProejct.toLocaleString().toPersinaDigit())
                        $('#Project_payment_scroll').append(record);

                    }

                }

            });
        });
        //#endregion

        var chartsPanelButtons = $('.chartsPanelButton');
        if (chartsPanelButtons != undefined)
            if (chartsPanelButtons != null)
                if (chartsPanelButtons.length > 0) {
                    for (var i = 0; i < chartsPanelButtons.length; i++) {
                        var chartsPanelButton = chartsPanelButtons[i];

                        //var $chartsPanelButton = $(chartsPanelButton);


                        var constructionProjectId = $(chartsPanelButton).attr('data-ConstructionProjectId');

                        // $('.chartsTimeLinePanel[data-ConstructionProjectId="' + constructionProjectId + '"]').hide();
                        // $('.chartsPanel[data-ConstructionProjectId="' + constructionProjectId + '"]').toggle();

                        showLoading = false;

                        //#region PaymentsAndCosts
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: "/UserProjects/MyProjectsManagement/GetPaymentsAndCostsList",
                            data: {
                                'ConstructionProjectId': constructionProjectId
                            },
                            success: function (result) {


                                if (result === null || result === '' || result === undefined || result.length <= 0) {
                                    $('#my-warning-modal').find('.modal-title').html('خطا');
                                    $('#my-warning-modal').find('#error').html('خطا');
                                    return $('#warningModal')[0].click();
                                }

                                var constructionProjectId = this.data.split("=")[1];

                                var $chartsPanelButton = $('.chartsPanelButton[data-ConstructionProjectId="' + constructionProjectId + '"]');

                                var records = result.Records;

                                var dates = [];
                                var costs = [];
                                var payments = [];

                                var strCostAndPayment = '';

                                if (records != null) {
                                    if (records.length > 0) {
                                        for (var i = 0; i < records.length; i++) {
                                            var record = records[i];

                                            var date = '';
                                            date = (record.Date + '').substring(0, 4) + '/' + (record.Date + '').substring(4, (record.Date + '').length);
                                            //dates.push(record.Date);
                                            dates.push(date.toPersinaDigit());


                                            payments.push(parseFloat(record.Payment.toFixed(0)));
                                            costs.push(parseFloat(record.Cost.toFixed(0)));

                                            var costFix = record.Cost.toFixed(0);
                                            var paymentFix = record.Payment.toFixed(0);
                                            var subtract = parseFloat(paymentFix) - parseFloat(costFix);

                                            var subtractFix = 0;

                                            if (subtract < 0) {
                                                if ((-subtract).toFixed(0).length > 7)
                                                    subtractFix = '-' + ((-subtract).toFixed(0) + '').substring(0, (-subtract).toFixed(0).length - 7);
                                                else
                                                    subtractFix = '--';
                                            }
                                            else {
                                                if (subtract.toFixed(0).length > 7)
                                                    subtractFix = (subtract.toFixed(0) + '').substring(0, subtract.toFixed(0).length - 7);
                                                else
                                                    subtractFix = '--';
                                            }

                                            strCostAndPayment += `<div class="col-span-3 text-right">
                                                                                                                                      ` + date.toPersinaDigit() + `
                                                                                                                                 </div>
                                                                                                                                        <div class="col-span-3 text-right tooltip" data-tooltip="` + costFix + `">
                                                                                                                                                ` + ((costFix.length > 7) ? costFix.substring(0, costFix.length - 7).toPersinaDigit() : '--') + `
                                                                                                                                 </div>
                                                                                                                                        <div class="col-span-3 text-right tooltip" data-tooltip="` + paymentFix + `">
                                                                                                                                            ` + ((paymentFix.length > 7) ? paymentFix.substring(0, paymentFix.length - 7).toPersinaDigit() : '--') + `
                                                                                                                                        </div>
                                                                                                                                    <div class="col-span-3 text-right font-medium tooltip" data-tooltip="` + subtract.toFixed(0) + `">
                                                                                                                                            ` + subtractFix.toPersinaDigit()/*(parseFloat(record.Payment.toFixed(0)) - parseFloat(record.Cost.toFixed(0)) + '')*/ + `
                                                                                                                                    </div>`;



                                        }


                                        var costAndPaymentList = $('.costAndPaymentHistory[data-ConstructionProjectId="' + constructionProjectId + '"]').find('.costAndPaymentList').html(strCostAndPayment);

                                        var tooltip = costAndPaymentList.find('.tooltip');

                                        tooltip.each(function () {
                                            tippy(this, {
                                                interactive: true,
                                                content: Spliter($(this).attr("data-tooltip")).toPersinaDigit() + ' ریال '
                                            });
                                        });

                                        var paymentChart = $('.paymentChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];
                                        Highcharts.chart(paymentChart, {
                                            chart: {
                                                type: 'column',
                                                height: '70%'
                                            },
                                            title: {
                                                text: '',
                                                align: 'left'
                                            },
                                            // subtitle: {
                                            //     text:
                                            //         'Source: <a target="_blank" ' +
                                            //         'href="https://www.indexmundi.com/agriculture/?commodity=corn">indexmundi</a>',
                                            //     align: 'left'
                                            // },
                                            xAxis: {
                                                //categories: ['USA', 'China', 'Brazil', 'EU', 'India', 'Russia'],
                                                categories: dates,
                                                crosshair: true,
                                                accessibility: {
                                                    description: 'Countries'
                                                }
                                            },
                                            yAxis: {
                                                labels: {
                                                    enabled: false
                                                },
                                                min: 0,
                                                title: {
                                                    text: ''
                                                    //text: '1000 metric tons (MT)'
                                                }
                                            },
                                            tooltip: {
                                                valueSuffix: ' ریال',
                                                useHTML: true,
                                                formatter: function (e) {
                                                    var val = this.value;
                                                    return '<div style=""> <div style="font-size: 14px;">' + this.x + '</div> <div style="font-size: 16px;">' + this.series.name + ':' + Spliter(this.y).toPersinaDigit() + ' ریال </div> </div>';
                                                }
                                            },
                                            plotOptions: {
                                                column: {
                                                    pointPadding: 0.2,
                                                    borderWidth: 0
                                                }
                                            },
                                            series: [
                                                {
                                                    name: 'هزینه',
                                                    data: costs
                                                    //data: [500000000, 1500000000, 2000000000, 2700000000, 3100000000, 1900000000, 1900000000]
                                                },
                                                {
                                                    name: 'پرداخت',
                                                    data: payments
                                                    //data: [1900000000, 3100000000, 2700000000, 2000000000, 1500000000, 1000000000]
                                                }
                                            ]
                                        });

                                        var costAndPaymentHistory = $('.costAndPaymentHistory[data-constructionprojectid="' + constructionProjectId + '"]')[0];
                                        /*var highchartsfigure = */

                                    }
                                }

                            }
                        });
                        //#endregion

                        //#region SumOfPrivateCosts
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: "/UserProjects/MyProjectsManagement/GetSumOfPrivateCostsList",
                            data: {
                                'ConstructionProjectId': constructionProjectId
                            },
                            success: function (result) {
                                if (result === null || result === '' || result === undefined || result.length <= 0) {
                                    $('#my-warning-modal').find('.modal-title').html('خطا');
                                    $('#my-warning-modal').find('#error').html('خطا');
                                    return $('#warningModal')[0].click();
                                }

                                var constructionProjectId = this.data.split("=")[1];

                                var $chartsPanelButton = $('.chartsPanelButton[data-ConstructionProjectId="' + constructionProjectId + '"]');

                                var records = result.Records;

                                var dates = [];
                                var costs = [];
                                var payments = [];

                                var strSumOfPrivateCosts = '';

                                if (records != null) {
                                    if (records.length > 0) {

                                        var sumOfPrivateCost = 0;

                                        var data = [];

                                        for (var i = 0; i < records.length; i++) {
                                            var record = records[i];


                                            strSumOfPrivateCosts += `<div class="col-span-5 text-right">
                                                                                                                        ` + record.CellData + `
                                                                                                                            </div>
                                                                                                                             <div class="col-span-2 text-center percentOfPrivateCost" data-privateCost="` + record.SumOfPrivateCost + `">
                                                                                                                        </div>
                                                                                                                            <div class="col-span-5 text-left ml-4 text-align-dynamic">
                                                                                                                            ` + Spliter(record.SumOfPrivateCost).toPersinaDigit() + `
                                                                                                                            </div>
                                                                                                                           `;
                                            sumOfPrivateCost += parseFloat(record.SumOfPrivateCost);

                                            data.push({
                                                name: record.CellData,
                                                y: record.SumOfPrivateCost
                                            });
                                        }

                                        $('.privateCostsHistory[data-ConstructionProjectId="' + constructionProjectId + '"]').find('.privateCostsList').html(strSumOfPrivateCosts);

                                        var percentOfPrivateCosts = $('.privateCostsHistory[data-ConstructionProjectId="' + constructionProjectId + '"]').find('.percentOfPrivateCost');

                                        if (percentOfPrivateCosts != null) {

                                            if (percentOfPrivateCosts.length > 0) {

                                                for (var i = 0; i < percentOfPrivateCosts.length; i++) {
                                                    var percentOfPrivateCost = percentOfPrivateCosts[i];

                                                    var privateCost = parseFloat($(percentOfPrivateCost).attr('data-privateCost'));

                                                    // Calculate percentage and round to the nearest integer
                                                    var percent = Math.round((privateCost / sumOfPrivateCost) * 100);

                                                    // Convert to Persian digits and append '%'
                                                    var percentText = percent.toString().toPersinaDigit() + '%';

                                                    // Update the HTML
                                                    $(percentOfPrivateCost).html(percentText);
                                                }
                                            }
                                        }
                                        function setChartHeight() {
                                            // Get the current window width
                                            const windowWidth = window.innerWidth;

                                            // Return height based on screen size
                                            return windowWidth <= 825 ? 300 : '70%'; // 300px for small screens, 70% for desktop
                                        }
                                        var privateCostsChart = $('.privateCostsChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];
                                        if (typeof String.prototype.toPersinaDigit !== 'function') {
                                            String.prototype.toPersinaDigit = function () {
                                                return this.replace(/\d/g, d => '۰۱۲۳۴۵۶۷۸۹'[d]);
                                            };
                                        }

                                        const privateCostsChartInstance = Highcharts.chart(privateCostsChart, {

                                            chart: {
                                                plotBackgroundColor: null,
                                                plotBorderWidth: null,
                                                plotShadow: false,
                                                type: 'pie',
                                                height: setChartHeight(),
                                            },
                                            title: {
                                                text: '',
                                                align: 'left'
                                            },
                                            tooltip: {
                                                useHTML: true,
                                                formatter: function (e) {
                                                    return '<div style=""> <div style="font-size: 14px;">' + this.key + '</div> <div style="font-size: 16px;">' + Spliter(this.y).toPersinaDigit() + ' ریال </div> </div>';
                                                }
                                            },
                                            accessibility: {
                                                point: {
                                                    valueSuffix: '%'
                                                }
                                            },
                                            plotOptions: {
                                                pie: {
                                                    allowPointSelect: true,
                                                    cursor: 'pointer',
                                                    borderRadius: 5,
                                                    dataLabels: {
                                                        enabled: true,
                                                        distance: -50,
                                                        formatter: function () {
                                                            return Math.round(this.percentage).toString().toPersinaDigit() + '%';
                                                        },
                                                        filter: {
                                                            property: 'percentage',
                                                            operator: '>',
                                                            value: 4
                                                        }
                                                    }
                                                }
                                            },
                                            colors: [
                                                '#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9',
                                                '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1'
                                            ], // Custom color palette
                                            series: [{
                                                name: '',
                                                data: data
                                            }]
                                        });


                                        var privateCostsHistory = $('.privateCostsHistory[data-constructionprojectid="' + constructionProjectId + '"]')[0];
                                        /*var highchartsfigure = */
                                    }
                                }

                            }
                        });
                        //#endregion

                        //#region SumOfpublicCosts
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: "/UserProjects/MyProjectsManagement/GetSumOfPublicCostsList",
                            data: {
                                'ConstructionProjectId': constructionProjectId
                            },
                            success: function (result) {
                                if (result === null || result === '' || result === undefined || result.length <= 0) {
                                    $('#my-warning-modal').find('.modal-title').html('خطا');
                                    $('#my-warning-modal').find('#error').html('خطا');
                                    return $('#warningModal')[0].click();
                                }
                                debugger;
                                var constructionProjectId = this.data.split("=")[1];

                                var $chartsPanelButton = $('.chartsPanelButton[data-ConstructionProjectId="' + constructionProjectId + '"]');

                                var records = result.Records;

                                var dates = [];
                                var costs = [];
                                var payments = [];

                                var strSumOfPublicCosts = '';

                                if (records != null) {
                                    if (records.length > 0) {

                                        var sumOfPublicCost = 0;

                                        var data = [];

                                        for (var i = 0; i < records.length; i++) {
                                            var record = records[i];


                                            strSumOfPublicCosts += `<div class="col-span-5 text-right">
                                                                                                                   ` + record.CellData + `
                                                                                                                   </div>
                                                                                                                       <div class="col-span-2 text-center percentOfPublicCost" data-PublicCost="` + record.SumOfPublicCost + `">
                                                                                                                       </div>
                                                                                                                   <div class="col-span-5 text-left ml-4 text-align-dynamic">
                                                                                                                   ` + Spliter(record.SumOfPublicCost).toPersinaDigit() + `
                                                                                                                   </div>
                                                                                                                   `;

                                            sumOfPublicCost += parseFloat(record.SumOfPublicCost);
                                            $(document).ready(function () {
                                                $('.text-align-dynamic').each(function () {
                                                    var content = $(this).text().trim();  // Remove extra whitespace
                                                    var contentLength = content.length;



                                                    if (contentLength > 5) {
                                                        $(this).css('text-align', 'left');
                                                    } else {
                                                        $(this).css('text-align', 'center');
                                                    }
                                                });
                                            });
                                            data.push({
                                                name: record.CellData,
                                                y: record.SumOfPublicCost
                                            });


                                        }

                                        $('.publicCostsHistory[data-ConstructionProjectId="' + constructionProjectId + '"]').find('.publicCostsList').html(strSumOfPublicCosts);

                                        var percentOfPublicCosts = $('.publicCostsHistory[data-ConstructionProjectId="' + constructionProjectId + '"]').find('.percentOfPublicCost');

                                        if (percentOfPublicCosts != null) {

                                            if (percentOfPublicCosts.length > 0) {

                                                for (var i = 0; i < percentOfPublicCosts.length; i++) {
                                                    var percentOfPublicCost = percentOfPublicCosts[i];

                                                    var publicCost = parseFloat($(percentOfPublicCost).attr('data-PublicCost'));

                                                    // Calculate percentage and round it
                                                    var percent = Math.round((publicCost / sumOfPublicCost) * 100);

                                                    // Convert to Persian digits and set the value
                                                    $(percentOfPublicCost).html(percent.toString().toPersinaDigit() + ' %');
                                                }
                                            }
                                        }

                                        var publicCostsChart = $('.publicCostsChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];

                                        if (typeof String.prototype.toPersinaDigit !== 'function') {
                                            String.prototype.toPersinaDigit = function () {
                                                return this.replace(/\d/g, d => '۰۱۲۳۴۵۶۷۸۹'[d]);
                                            };
                                        }
                                        function setChartHeight() {
                                            // Get the current window width
                                            const windowWidth = window.innerWidth;

                                            // Return height based on screen size
                                            return windowWidth <= 825 ? 300 : '70%'; // 300px for small screens, 70% for desktop
                                        }
                                        const publicCostsChartInstance = Highcharts.chart(publicCostsChart, {

                                            chart: {
                                                plotBackgroundColor: null,
                                                plotBorderWidth: null,
                                                plotShadow: false,
                                                type: 'pie',
                                                height: setChartHeight(),
                                            },
                                            title: {
                                                text: '',
                                                align: 'left'
                                            },
                                            tooltip: {
                                                pointFormat: '<b>{point.percentage:.1f}%</b>'
                                            },
                                            accessibility: {
                                                point: {
                                                    valueSuffix: '%'
                                                }
                                            },
                                            plotOptions: {
                                                pie: {
                                                    allowPointSelect: true,
                                                    cursor: 'pointer',
                                                    borderRadius: 5,
                                                    dataLabels: {
                                                        enabled: true,
                                                        distance: -50,
                                                        formatter: function () {
                                                            // Round the percentage and convert it to Persian digits
                                                            return Math.round(this.percentage).toString().toPersinaDigit() + ' %';
                                                        },
                                                        filter: {
                                                            property: 'percentage',
                                                            operator: '>',
                                                            value: 4
                                                        }
                                                    }
                                                }
                                            },
                                            colors: [
                                                '#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9',
                                                '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1'
                                            ], // Custom color palette
                                            series: [{
                                                name: '',
                                                data: data
                                            }]
                                        });

                                       
                                        var publicCostsHistory = $('.publicCostsHistory[data-constructionprojectid="' + constructionProjectId + '"]')[0];
                                        /*var highchartsfigure = */
                                    }
                                }

                            }
                        });
                        //#endregion
                    }
                }
        $(document).ready(function () {

        });

        //region comment
        // $('body').on('click', '.chartsPanelButton', function (e) {
        //     var _this = $(this);
        //     var constructionProjectId = _this.attr('data-ConstructionProjectId');

        //     $('.chartsTimeLinePanel[data-ConstructionProjectId="' + constructionProjectId + '"]').hide();
        //     $('.chartsPanel[data-ConstructionProjectId="' + constructionProjectId + '"]').toggle();

        //     //var exclusivePieChart = $('.exclusivePieChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];
        //     //var workshopPieChart = $('.workshopPieChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];
        //     // var Timechart = $('.Time-chart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];
        //     // var highchartsfigure = $('.highcharts-figre[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];

        //     //alert();

        //     if ($('.chartsPanel[data-ConstructionProjectId="' + constructionProjectId + '"]').is(":visible")) {

        //         //#region PaymentsAndCosts
        //         $.ajax({
        //             cache: false,
        //             type: "POST",
        //             url: "/UserProjects/MyProjectsManagement/GetPaymentsAndCostsList",
        //             data: {
        //                 'ConstructionProjectId': constructionProjectId
        //             },
        //             success: function (result) {
        //                 if (result === null || result === '' || result === undefined || result.length <= 0) {
        //                     $('#my-warning-modal').find('.modal-title').html('خطا');
        //                     $('#my-warning-modal').find('#error').html('خطا');
        //                     return $('#warningModal')[0].click();
        //                 }

        //                 var records = result.Records;

        //                 var dates = [];
        //                 var costs = [];
        //                 var payments = [];

        //                 var strCostAndPayment = '';

        //                 if (records != null) {
        //                     if (records.length > 0) {
        //                         for (var i = 0; i < records.length; i++) {
        //                             var record = records[i];

        //                             var date = '';
        //                             date = (record.Date + '').substring(0, 4) + '/' + (record.Date + '').substring(4, (record.Date + '').length);
        //                             //dates.push(record.Date);
        //                             dates.push(date.toPersinaDigit());


        //                             payments.push(parseFloat(record.Payment.toFixed(0)));
        //                             costs.push(parseFloat(record.Cost.toFixed(0)));

        //                             var costFix = record.Cost.toFixed(0);
        //                             var paymentFix = record.Payment.toFixed(0);
        //                             var subtract = parseFloat(paymentFix) - parseFloat(costFix);

        //                             var subtractFix = 0;

        //                             if (subtract < 0) {
        //                                 if ((-subtract).toFixed(0).length > 7)
        //                                     subtractFix = '-' + ((-subtract).toFixed(0) + '').substring(0, (-subtract).toFixed(0).length - 7);
        //                                 else
        //                                     subtractFix = '--';
        //                             }
        //                             else {
        //                                 if (subtract.toFixed(0).length > 7)
        //                                     subtractFix = (subtract.toFixed(0) + '').substring(0, subtract.toFixed(0).length - 7);
        //                                 else
        //                                     subtractFix = '--';
        //                             }

        //                             strCostAndPayment += `<div class="col-span-3 text-right">
        //                                                                                                                                                 ` + date.toPersinaDigit() + `
        //                                                                                                                                 </div>
        //                                                                                                                                     <div class="col-span-3 text-right tooltip" data-tooltip="` + costFix + `">
        //                                                                                                                                             ` + ((costFix.length > 7) ? costFix.substring(0, costFix.length - 7).toPersinaDigit() : '--') + `
        //                                                                                                                                 </div>
        //                                                                                                                                         <div class="col-span-3 text-right tooltip" data-tooltip="` + paymentFix + `">
        //                                                                                                                                         ` + ((paymentFix.length > 7) ? paymentFix.substring(0, paymentFix.length - 7).toPersinaDigit() : '--') + `
        //                                                                                                                                     </div>
        //                                                                                                                                 <div class="col-span-3 text-right font-medium tooltip" data-tooltip="` + subtract.toFixed(0) + `">
        //                                                                                                                                         ` + subtractFix.toPersinaDigit()/*(parseFloat(record.Payment.toFixed(0)) - parseFloat(record.Cost.toFixed(0)) + '')*/ + `
        //                                                                                                                                 </div>`;
        //                         }

        //                         $('.costAndPaymentList').html(strCostAndPayment);

        //                         var tooltip = $('.costAndPaymentList').find('.tooltip');

        //                         tooltip.each(function () {
        //                             tippy(this, {
        //                                 interactive: true,
        //                                 content: Spliter($(this).attr("data-tooltip")).toPersinaDigit() + ' ریال '
        //                             });
        //                         });

        //                         var paymentChart = $('.paymentChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];
        //                         Highcharts.chart(paymentChart, {
        //                             chart: {
        //                                 type: 'column',
        //                                 height: '70%'
        //                             },
        //                             title: {
        //                                 text: '',
        //                                 align: 'left'
        //                             },
        //                             // subtitle: {
        //                             //     text:
        //                             //         'Source: <a target="_blank" ' +
        //                             //         'href="https://www.indexmundi.com/agriculture/?commodity=corn">indexmundi</a>',
        //                             //     align: 'left'
        //                             // },
        //                             xAxis: {
        //                                 //categories: ['USA', 'China', 'Brazil', 'EU', 'India', 'Russia'],
        //                                 categories: dates,
        //                                 crosshair: true,
        //                                 accessibility: {
        //                                     description: 'Countries'
        //                                 }
        //                             },
        //                             yAxis: {
        //                                 labels: {
        //                                     enabled: false
        //                                 },
        //                                 min: 0,
        //                                 title: {
        //                                     text: ''
        //                                     //text: '1000 metric tons (MT)'
        //                                 }
        //                             },
        //                             tooltip: {
        //                                 valueSuffix: ' ریال',
        //                                 useHTML: true,
        //                                 formatter: function (e) {
        //                                     var val = this.value;
        //                                     return '<div style=""> <div style="font-size: 14px;">' + this.x + '</div> <div style="font-size: 16px;">' + this.series.name + ':' + Spliter(this.y).toPersinaDigit() + ' ریال </div> </div>';
        //                                 }
        //                             },
        //                             plotOptions: {
        //                                 column: {
        //                                     pointPadding: 0.2,
        //                                     borderWidth: 0
        //                                 }
        //                             },
        //                             series: [
        //                                 {
        //                                     name: 'هزینه',
        //                                     data: costs
        //                                     //data: [500000000, 1500000000, 2000000000, 2700000000, 3100000000, 1900000000, 1900000000]
        //                                 },
        //                                 {
        //                                     name: 'پرداخت',
        //                                     data: payments
        //                                     //data: [1900000000, 3100000000, 2700000000, 2000000000, 1500000000, 1000000000]
        //                                 }
        //                             ]
        //                         });

        //                         var costAndPaymentHistory = $('.costAndPaymentHistory[data-constructionprojectid="' + constructionProjectId + '"]')[0];
        //                                                                                                                                 /*var highchartsfigure = */$(costAndPaymentHistory).scrollbox({
        //                             // buffer: 150,
        //                             // horizontal: false
        //                         });
        //                     }
        //                 }

        //             }
        //         });
        //         //#endregion

        //         //#region SumOfPrivateCosts
        //         $.ajax({
        //             cache: false,
        //             type: "POST",
        //             url: "/UserProjects/MyProjectsManagement/GetSumOfPrivateCostsList",
        //             data: {
        //                 'ConstructionProjectId': constructionProjectId
        //             },
        //             success: function (result) {
        //                 if (result === null || result === '' || result === undefined || result.length <= 0) {
        //                     $('#my-warning-modal').find('.modal-title').html('خطا');
        //                     $('#my-warning-modal').find('#error').html('خطا');
        //                     return $('#warningModal')[0].click();
        //                 }

        //                 var records = result.Records;

        //                 var dates = [];
        //                 var costs = [];
        //                 var payments = [];

        //                 var strSumOfPrivateCosts = '';

        //                 if (records != null) {
        //                     if (records.length > 0) {

        //                         var sumOfPrivateCost = 0;

        //                         var data = [];

        //                         for (var i = 0; i < records.length; i++) {
        //                             var record = records[i];


        //                             strSumOfPrivateCosts += `<div class="col-span-5 text-right">
        //                                                                                                                                                         ` + record.CellData + `
        //                                                                                                                                     </div>
        //                                                                                                                                         <div class="col-span-5 text-right">
        //                                                                                                                                                             ` + Spliter(record.SumOfPrivateCost).toPersinaDigit() + `
        //                                                                                                                                     </div>
        //                                                                                                                                                 <div class="col-span-2 text-right percentOfPrivateCost" data-privateCost="` + record.SumOfPrivateCost + `">

        //                                                                                                                                         </div>`;

        //                             sumOfPrivateCost += parseFloat(record.SumOfPrivateCost);

        //                             data.push({
        //                                 name: record.CellData,
        //                                 y: record.SumOfPrivateCost
        //                             });
        //                         }

        //                         $('.privateCostsList').html(strSumOfPrivateCosts);

        //                         var percentOfPrivateCosts = $('.privateCostsHistory[data-ConstructionProjectId="' + constructionProjectId + '"]').find('.percentOfPrivateCost');

        //                         if (percentOfPrivateCosts != null) {

        //                             if (percentOfPrivateCosts.length > 0) {

        //                                 for (var i = 0; i < percentOfPrivateCosts.length; i++) {
        //                                     var percentOfPrivateCost = percentOfPrivateCosts[i];

        //                                     var privateCost = parseFloat($(percentOfPrivateCost).attr('data-privateCost'));

        //                                     var percent = ((privateCost / sumOfPrivateCost) * 100).toFixed(2);
        //                                     $(percentOfPrivateCost).html(percent.toPersinaDigit() + '%');
        //                                 }
        //                             }
        //                         }

        //                         var privateCostsChart = $('.privateCostsChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];



        //                         Highcharts.chart(privateCostsChart, {
        //                             chart: {
        //                                 plotBackgroundColor: null,
        //                                 plotBorderWidth: null,
        //                                 plotShadow: false,
        //                                 type: 'pie',
        //                                 height: '68%'
        //                             },
        //                             title: {
        //                                 text: '',
        //                                 align: 'left'
        //                             },
        //                             tooltip: {
        //                                 //pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        //                                 //pointFormat: '<b>{point.percentage:.1f}%</b><br />{point.}'
        //                                 useHTML: true,
        //                                 formatter: function (e) {
        //                                     //var val = this.value;
        //                                     return '<div style=""> <div style="font-size: 14px;">' + this.key + '</div> <div style="font-size: 16px;">' + Spliter(this.y).toPersinaDigit() + ' ریال </div> </div>';
        //                                 }
        //                             },
        //                             accessibility: {
        //                                 point: {
        //                                     valueSuffix: '%'
        //                                 }
        //                             },
        //                             plotOptions: {
        //                                 pie: {
        //                                     allowPointSelect: true,
        //                                     cursor: 'pointer',
        //                                     colors,
        //                                     borderRadius: 5,
        //                                     dataLabels: {
        //                                         enabled: true,
        //                                         format: '<b>{point.name}</b><br>{point.percentage:.1f} %',
        //                                         distance: -50,
        //                                         filter: {
        //                                             property: 'percentage',
        //                                             operator: '>',
        //                                             value: 4
        //                                         }
        //                                     }
        //                                 }
        //                             },
        //                             series: [{
        //                                 name: '',
        //                                 data: data/*[
        //                                                                                                                         { name: 'Chrome', y: 74.03 },
        //                                                                                                                         { name: 'Edge', y: 12.66 },
        //                                                                                                                         { name: 'Firefox', y: 4.96 },
        //                                                                                                                         { name: 'Safari', y: 2.49 },
        //                                                                                                                         { name: 'Internet Explorer', y: 2.31 },
        //                                                                                                                         { name: 'Other', y: 3.398 }
        //                                                                                                                     ]*/
        //                             }]
        //                         });

        //                         var privateCostsHistory = $('.privateCostsHistory[data-constructionprojectid="' + constructionProjectId + '"]')[0];
        //                                                                                                                                         /*var highchartsfigure = */$(privateCostsHistory).scrollbox({
        //                             // buffer: 150,
        //                             // horizontal: false
        //                         });
        //                     }
        //                 }

        //             }
        //         });
        //         //#endregion

        //         //#region SumOfpublicCosts
        //         $.ajax({
        //             cache: false,
        //             type: "POST",
        //             url: "/UserProjects/MyProjectsManagement/GetSumOfPublicCostsList",
        //             data: {
        //                 'ConstructionProjectId': constructionProjectId
        //             },
        //             success: function (result) {
        //                 if (result === null || result === '' || result === undefined || result.length <= 0) {
        //                     $('#my-warning-modal').find('.modal-title').html('خطا');
        //                     $('#my-warning-modal').find('#error').html('خطا');
        //                     return $('#warningModal')[0].click();
        //                 }

        //                 var records = result.Records;

        //                 var dates = [];
        //                 var costs = [];
        //                 var payments = [];

        //                 var strSumOfPublicCosts = '';

        //                 if (records != null) {
        //                     if (records.length > 0) {

        //                         var sumOfPublicCost = 0;

        //                         var data = [];

        //                         for (var i = 0; i < records.length; i++) {
        //                             var record = records[i];


        //                             strSumOfPublicCosts += `<div class="col-span-5 text-right">
        //                                                                                                                                                         ` + record.CellData + `
        //                                                                                                                                     </div>
        //                                                                                                                                         <div class="col-span-5 text-right">
        //                                                                                                                                                             ` + Spliter(record.SumOfPublicCost).toPersinaDigit() + `
        //                                                                                                                                     </div>
        //                                                                                                                                                 <div class="col-span-2 text-right percentOfPublicCost" data-PublicCost="` + record.SumOfPublicCost + `">

        //                                                                                                                                         </div>`;

        //                             sumOfPublicCost += parseFloat(record.SumOfPublicCost);

        //                             data.push({
        //                                 name: record.CellData,
        //                                 y: record.SumOfPublicCost
        //                             });
        //                         }

        //                         $('.publicCostsList').html(strSumOfPublicCosts);

        //                         var percentOfPublicCosts = $('.publicCostsHistory[data-ConstructionProjectId="' + constructionProjectId + '"]').find('.percentOfPublicCost');

        //                         if (percentOfPublicCosts != null) {

        //                             if (percentOfPublicCosts.length > 0) {

        //                                 for (var i = 0; i < percentOfPublicCosts.length; i++) {
        //                                     var percentOfPublicCost = percentOfPublicCosts[i];

        //                                     var publicCost = parseFloat($(percentOfPublicCost).attr('data-PublicCost'));

        //                                     var percent = ((publicCost / sumOfPublicCost) * 100).toFixed(2);
        //                                     $(percentOfPublicCost).html(percent.toPersinaDigit() + '%');
        //                                 }
        //                             }
        //                         }

        //                         var publicCostsChart = $('.publicCostsChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];



        //                         Highcharts.chart(publicCostsChart, {
        //                             chart: {
        //                                 plotBackgroundColor: null,
        //                                 plotBorderWidth: null,
        //                                 plotShadow: false,
        //                                 type: 'pie',
        //                                 height: '70%'
        //                             },
        //                             title: {
        //                                 text: '',
        //                                 align: 'left'
        //                             },
        //                             tooltip: {
        //                                 //pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        //                                 pointFormat: '<b>{point.percentage:.1f}%</b>'
        //                             },
        //                             accessibility: {
        //                                 point: {
        //                                     valueSuffix: '%'
        //                                 }
        //                             },
        //                             plotOptions: {
        //                                 pie: {
        //                                     allowPointSelect: true,
        //                                     cursor: 'pointer',
        //                                     colors,
        //                                     borderRadius: 5,
        //                                     dataLabels: {
        //                                         enabled: true,
        //                                         format: '<b>{point.name}</b><br>{point.percentage:.1f} %',
        //                                         distance: -50,
        //                                         filter: {
        //                                             property: 'percentage',
        //                                             operator: '>',
        //                                             value: 4
        //                                         }
        //                                     }
        //                                 }
        //                             },
        //                             series: [{
        //                                 name: '',
        //                                 data: data/*[
        //                                                                                                                         { name: 'Chrome', y: 74.03 },
        //                                                                                                                         { name: 'Edge', y: 12.66 },
        //                                                                                                                         { name: 'Firefox', y: 4.96 },
        //                                                                                                                         { name: 'Safari', y: 2.49 },
        //                                                                                                                         { name: 'Internet Explorer', y: 2.31 },
        //                                                                                                                         { name: 'Other', y: 3.398 }
        //                                                                                                                     ]*/
        //                             }]
        //                         });

        //                         var publicCostsHistory = $('.publicCostsHistory[data-constructionprojectid="' + constructionProjectId + '"]')[0];
        //                                                                                                                                         /*var highchartsfigure = */$(publicCostsHistory).scrollbox({
        //                             // buffer: 150,
        //                             // horizontal: false
        //                         });
        //                     }
        //                 }

        //             }
        //         });
        //         //#endregion
        //     }

        //     // Highcharts.chart(paymentChart, {
        //     //     chart: {
        //     //         type: 'column'
        //     //     },
        //     //     title: {
        //     //         text: ''
        //     //     },
        //     //     subtitle: {
        //     //         text: ''
        //     //     },
        //     //     legend: {
        //     //         enabled: false
        //     //     },
        //     //     xAxis: {
        //     //         categories: [
        //     //             'فروردین',
        //     //             'اردیبهشت',
        //     //             'خرداد',
        //     //             'تیر',
        //     //             'مرداد',
        //     //             'شهریور',
        //     //             'مهر',
        //     //             'آبان',
        //     //             'آذر',
        //     //             'دی',
        //     //             'بهمن',
        //     //             'اسفند'
        //     //         ],
        //     //         crosshair: true
        //     //     },
        //     //     yAxis: {
        //     //         min: 0,
        //     //         title: {
        //     //             text: ''
        //     //         }
        //     //     },
        //     //     tooltip: {
        //     //         headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        //     //         pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
        //     //             '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
        //     //         footerFormat: '</table>',
        //     //         shared: true,
        //     //         useHTML: true
        //     //     },

        //     //     series: [{
        //     //         name: 'پرداختی',
        //     //         data: [49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4,
        //     //             194.1, 95.6, 54.4]

        //     //     }]
        //     // });

        //     // Highcharts.chart(exclusivePieChart, {
        //     //     chart: {
        //     //         plotBackgroundColor: null,
        //     //         plotBorderWidth: null,
        //     //         plotShadow: false,
        //     //         type: 'pie'
        //     //     },
        //     //     title: {
        //     //         text: '',
        //     //         align: 'left'
        //     //     },
        //     //     tooltip: {
        //     //         pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        //     //     },
        //     //     accessibility: {
        //     //         point: {
        //     //             valueSuffix: '%'
        //     //         }
        //     //     },
        //     //     plotOptions: {
        //     //         pie: {
        //     //             allowPointSelect: true,
        //     //             cursor: 'pointer',
        //     //             colors,
        //     //             borderRadius: 5,
        //     //             dataLabels: {
        //     //                 enabled: true,
        //     //                 format: '<b>{point.name}</b><br>{point.percentage:.1f} %',
        //     //                 distance: -50,
        //     //                 filter: {
        //     //                     property: 'percentage',
        //     //                     operator: '>',
        //     //                     value: 4
        //     //                 }
        //     //             }
        //     //         }
        //     //     },
        //     //     series: [{
        //     //         name: 'Share',
        //     //         data: [
        //     //             { name: 'Chrome', y: 74.03 },
        //     //             { name: 'Edge', y: 12.66 },
        //     //             { name: 'Firefox', y: 4.96 },
        //     //             { name: 'Safari', y: 2.49 },
        //     //             { name: 'Internet Explorer', y: 2.31 },
        //     //             { name: 'Other', y: 3.398 }
        //     //         ]
        //     //     }]
        //     // });

        //     // Highcharts.chart(workshopPieChart, {
        //     //     chart: {
        //     //         plotBackgroundColor: null,
        //     //         plotBorderWidth: null,
        //     //         plotShadow: false,
        //     //         type: 'pie'
        //     //     },
        //     //     title: {
        //     //         text: '',
        //     //         align: 'left'
        //     //     },
        //     //     tooltip: {
        //     //         pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        //     //     },
        //     //     accessibility: {
        //     //         point: {
        //     //             valueSuffix: '%'
        //     //         }
        //     //     },
        //     //     plotOptions: {
        //     //         pie: {
        //     //             allowPointSelect: true,
        //     //             cursor: 'pointer',
        //     //             colors,
        //     //             borderRadius: 5,
        //     //             dataLabels: {
        //     //                 enabled: true,
        //     //                 format: '<b>{point.name}</b><br>{point.percentage:.1f} %',
        //     //                 distance: -50,
        //     //                 filter: {
        //     //                     property: 'percentage',
        //     //                     operator: '>',
        //     //                     value: 4
        //     //                 }
        //     //             }
        //     //         }
        //     //     },
        //     //     series: [{
        //     //         name: 'Share',
        //     //         data: [
        //     //             { name: 'Chrome', y: 74.03 },
        //     //             { name: 'Edge', y: 12.66 },
        //     //             { name: 'Firefox', y: 4.96 },
        //     //             { name: 'Safari', y: 2.49 },
        //     //             { name: 'Internet Explorer', y: 2.31 },
        //     //             { name: 'Other', y: 3.398 }
        //     //         ]
        //     //     }]
        //     // });


        //     // Highcharts.chart(Timechart, {

        //     //     chart: {
        //     //         type: 'solidgauge',
        //     //         height: '60%',
        //     //         events: {
        //     //             render: renderIcons
        //     //         }
        //     //     },

        //     //     title: {
        //     //         text: '',
        //     //         style: {
        //     //             fontSize: '24px'
        //     //         }
        //     //     },

        //     //     tooltip: {
        //     //         borderWidth: 0,
        //     //         backgroundColor: 'none',
        //     //         shadow: false,
        //     //         style: {
        //     //             fontSize: '16px'
        //     //         },
        //     //         valueSuffix: '%',
        //     //         pointFormat: '{series.name}<br><span style="font-size:2em; color: {point.color}; font-weight: bold">{point.y}</span>',
        //     //         positioner: function (labelWidth) {
        //     //             return {
        //     //                 x: (this.chart.chartWidth - labelWidth) / 2,
        //     //                 y: (this.chart.plotHeight / 2) + 15
        //     //             };
        //     //         }
        //     //     },

        //     //     pane: {
        //     //         startAngle: 0,
        //     //         endAngle: 360,
        //     //         background: [{ // Track for Move
        //     //             outerRadius: '112%',
        //     //             innerRadius: '88%',
        //     //             backgroundColor: Highcharts.color(Highcharts.getOptions().colors[0])
        //     //                 .setOpacity(0.3)
        //     //                 .get(),
        //     //             borderWidth: 0
        //     //         }, { // Track for Exercise
        //     //             outerRadius: '87%',
        //     //             innerRadius: '63%',
        //     //             backgroundColor: Highcharts.color(Highcharts.getOptions().colors[1])
        //     //                 .setOpacity(0.3)
        //     //                 .get(),
        //     //             borderWidth: 0
        //     //         }, { // Track for Stand
        //     //             outerRadius: '62%',
        //     //             innerRadius: '38%',
        //     //             backgroundColor: Highcharts.color(Highcharts.getOptions().colors[2])
        //     //                 .setOpacity(0.3)
        //     //                 .get(),
        //     //             borderWidth: 0
        //     //         }]
        //     //     },

        //     //     yAxis: {
        //     //         min: 0,
        //     //         max: 100,
        //     //         lineWidth: 0,
        //     //         tickPositions: []
        //     //     },

        //     //     plotOptions: {
        //     //         solidgauge: {
        //     //             dataLabels: {
        //     //                 enabled: false
        //     //             },
        //     //             linecap: 'round',
        //     //             stickyTracking: false,
        //     //             rounded: true
        //     //         }
        //     //     },

        //     //     series: [{
        //     //         name: 'Move',
        //     //         data: [{
        //     //             color: Highcharts.getOptions().colors[0],
        //     //             radius: '112%',
        //     //             innerRadius: '88%',
        //     //             y: 80
        //     //         }]
        //     //     }, {
        //     //         name: 'Exercise',
        //     //         data: [{
        //     //             color: Highcharts.getOptions().colors[1],
        //     //             radius: '87%',
        //     //             innerRadius: '63%',
        //     //             y: 65
        //     //         }]
        //     //     }, {
        //     //         name: 'Stand',
        //     //         data: [{
        //     //             color: Highcharts.getOptions().colors[2],
        //     //             radius: '62%',
        //     //             innerRadius: '38%',
        //     //             y: 50
        //     //         }]
        //     //     }]
        //     // });
        //     // Highcharts.chart(highchartsfigure, {
        //     //     chart: {
        //     //         type: 'gauge',
        //     //         plotBackgroundColor: null,
        //     //         plotBackgroundImage: null,
        //     //         plotBorderWidth: 0,
        //     //         plotShadow: false,
        //     //         height: '60%',
        //     //     },

        //     //     title: {
        //     //         text: ''
        //     //     },

        //     //     pane: {
        //     //         startAngle: -90,
        //     //         endAngle: 89.9,
        //     //         background: null,
        //     //         center: ['50%', '75%'],
        //     //         size: '110%'
        //     //     },

        //     //     // the value axis
        //     //     yAxis: {
        //     //         min: 0,
        //     //         max: 200,
        //     //         tickPixelInterval: 72,
        //     //         tickPosition: 'inside',
        //     //         tickColor: Highcharts.defaultOptions.chart.backgroundColor || '#FFFFFF',
        //     //         tickLength: 20,
        //     //         tickWidth: 2,
        //     //         minorTickInterval: null,
        //     //         labels: {
        //     //             distance: 20,
        //     //             style: {
        //     //                 fontSize: '14px'
        //     //             }
        //     //         },
        //     //         lineWidth: 0,
        //     //         plotBands: [{
        //     //             from: 0,
        //     //             to: 120,
        //     //             color: '#55BF3B', // green
        //     //             thickness: 20
        //     //         }, {
        //     //             from: 120,
        //     //             to: 160,
        //     //             color: '#DDDF0D', // yellow
        //     //             thickness: 20
        //     //         }, {
        //     //             from: 160,
        //     //             to: 200,
        //     //             color: '#DF5353', // red
        //     //             thickness: 20
        //     //         }]
        //     //     },

        //     //     series: [{
        //     //         name: 'Speed',
        //     //         data: [80],
        //     //         tooltip: {
        //     //             valueSuffix: ' km/h'
        //     //         },
        //     //         dataLabels: {
        //     //             format: '{y} km/h',
        //     //             borderWidth: 0,
        //     //             color: (
        //     //                 Highcharts.defaultOptions.title &&
        //     //                 Highcharts.defaultOptions.title.style &&
        //     //                 Highcharts.defaultOptions.title.style.color
        //     //             ) || '#333333',
        //     //             style: {
        //     //                 fontSize: '16px'
        //     //             }
        //     //         },
        //     //         dial: {
        //     //             radius: '80%',
        //     //             backgroundColor: 'gray',
        //     //             baseWidth: 12,
        //     //             baseLength: '0%',
        //     //             rearLength: '0%'
        //     //         },
        //     //         pivot: {
        //     //             backgroundColor: 'gray',
        //     //             radius: 6
        //     //         }

        //     //     }]

        //     // });
        //     //var highchartsfigure = $('.paymentHistory[data-ConstructionProjectId="' + constructionProjectId + '"]').scrollbox({
        //     //});
        // });
        //#endregion

               $(document).ready(function() {
        $(".chartsTimeLinePanelButton").on("click", function() {
            let projectId = $(this).attr("data-constructionprojectid"); // دریافت مقدار داینامیک

            // پیدا کردن عنصر moreFD با همان data-constructionprojectid
            let targetElement = $('.moreFD[data-constructionprojectid="' + projectId + '"]');

            // بررسی اندازه صفحه
            let screenWidth = $(window).width();

            if (screenWidth >= 1446 && screenWidth <= 1700) {
                targetElement.removeClass("moreFD").addClass("chartsPanel"); // تغییر کلاس
            }
              if (screenWidth >= 1024 && screenWidth <= 1440) {
                   targetElement.addClass("moreFD").removeClass("chartsPanel"); // تغییر کلاس
               }
               if (screenWidth <= 825) {
                   targetElement.removeClass("moreFD").addClass("chartsPanel"); // تغییر کلاس
               }
            // مخفی/نمایش کردن growdetails
            $('.growdetails[data-constructionprojectid="' + projectId + '"]').toggle();
        });
    });


        $('body').on('click', '.chartsTimeLinePanelButton', function (e) {
               

            var _this = $(this);
            var constructionProjectId = _this.attr('data-ConstructionProjectId');

            $('.chartsPanel[data-ConstructionProjectId="' + constructionProjectId + '"]').toggle();

            $('.chartsTimeLinePanel[data-ConstructionProjectId="' + constructionProjectId + '"]').toggle();

            $('.billDelaysDiv[projectId=' + constructionProjectId + ']').remove();

            $('.loading').removeClass('hidden');
              
            if ($('.chartsTimeLinePanel[data-ConstructionProjectId="' + constructionProjectId + '"]').is(":visible")) {

                //Bill delay colors

                const colorArray = [
                    { number: 1, color: 'rgba(255, 0, 0,0.40)', alg: 'M 0 0 L 10 10 M -1 9 L 1 11 M 9 -1 L 11 1', name: 'red', shadow: '2px -2px 0px 2px #ffe0f4, 1px 1px 5px rgb(179 192 209)' },   // Red
                    { number: 2, color: 'rgba(0, 162, 255,0.40)', alg: 'M 0 10 L 10 0 M -1 1 L 1 -1 M 9 11 L 11 9', name: 'blue', shadow: '2px -2px 0px 2px #dceaff, 1px 1px 5px rgb(179 192 209)' },  //Blue
                    { number: 3, color: 'rgba(0, 255, 55,0.40)', alg: 'M 0 0 L 10 10 M -1 9 L 1 11 M 9 -1 L 11 1', name: 'green', shadow: '2px -2px 0px 2px #d9f9e0, 1px 1px 5px rgb(179 192 209)' },   //Green
                    { number: 4, color: 'rgba(115, 81, 20,0.40)', alg: 'M 0 10 L 10 0 M -1 1 L 1 -1 M 9 11 L 11 9', name: 'brown', shadow: '2px -2px 0px 2px #e9e0d1, 1px 1px 5px rgb(179 192 209)' },   // Brown
                    { number: 5, color: 'rgba(255, 136, 0,0.40)', alg: 'M 0 0 L 10 10 M -1 9 L 1 11 M 9 -1 L 11 1', name: 'orange', shadow: '2px -2px 0px 2px #ffe5c8d1, 1px 1px 5px rgb(179 192 209)' },  // Orange
                    { number: 6, color: 'rgba(184, 184, 184,0.40)', alg: 'M 0 10 L 10 0 M -1 1 L 1 -1 M 9 11 L 11 9', name: 'gray', shadow: '2px -2px 0px 2px #ededed, 1px 1px 5px rgb(179 192 209)' },   // Gray
                    { number: 7, color: 'rgba(248 0 255 / 40%)', alg: 'M 0 10 L 10 0 M -1 1 L 1 -1 M 9 11 L 11 9', name: 'purple', shadow: '2px -2px 0px 2px #fed9ff, 1px 1px 5px rgb(179 192 209)' }, // Purple
                    { number: 8, color: 'rgb(238 251 0 / 46%)', alg: 'M 0 0 L 10 10 M -1 9 L 1 11 M 9 -1 L 11 1', name: 'yellow', shadow: '2px -2px 0px 2px #fcffca, 1px 1px 5px rgb(179 192 209)' }, // Yellow
                    { number: 9, color: 'rgb(18 255 241 / 68%)', alg: 'M 0 0 L 10 10 M -1 9 L 1 11 M 9 -1 L 11 1', name: 'cyan', shadow: '2px -2px 0px 2px #d2f9ff, 1px 1px 5px rgb(179 192 209)' }, // Cyan
                    { number: 10, color: 'rgb(88 102 255 / 52%)', alg: 'M 0 10 L 10 0 M -1 1 L 1 -1 M 9 11 L 11 9', name: 'LightPurple', shadow: '2px -2px 0px 2px #e1e4ff, 1px 1px 5px rgb(179 192 209)' } // Light purple
                ];

                // Load bill delays
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "/UserProjects/MyProjectsManagement/GetListOfBillDelaysForOuterDashboard",
                    data: {
                        'ConstructionProjectId': constructionProjectId
                    },
                    success: function (result) {
                        console.log(result);

                        let htmlResult = `<div projectId=${constructionProjectId} class="mt-5 billDelaysDiv" dir="rtl" style="overflow: auto;overflow-x: hidden;height: 358px; padding-left:8px;">`;

                        let billDelays = result.Records;

                        for (let i = 0; i < billDelays.length; i++) {
                            htmlResult += `
                                             <div style="cursor:pointer;" billId=${billDelays[i].ConstructionProjectBillDelayId} class="text-center billDelay">
                                            <div class="btn w-full mb-3 px-4 flex items-center">
                                            <div class="mr-auto">
                                                <div style="width:240px;" class="font-medium text-right TitleOfContract">${billDelays[i].ConstructionProjectBillDelayTitle}</div>
                                            </div>
                                                                <div style="width:50px; box-shadow:`+ colorArray.find(c => c.number === i + 1).shadow + `; background-color:` + colorArray.find(c => c.number === i + 1).color + `" class="w-9 h-9 image-fit rounded-full bg-main flex justify-center items-center">` + toPersianDigits(billDelays[i].DelaysCount) + `</div>
                                            </div>
                                            </div>
                                    `;
                        }
                        htmlResult += `</div>`


                        $('.loading').addClass('hidden');
                        $('.chartsPanelButton[data-constructionprojectId="' + constructionProjectId + '"]').each(function () {
                            $(this).parent().append(htmlResult);
                        })
                    }
                });







                //#region PaymentsAndCosts
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "/UserProjects/MyProjectsManagement/GetHierarchyOfAllProgressItemsList",
                    data: {
                        'ConstructionProjectId': constructionProjectId
                    },
                    success: function (result) {
                        if (result === null || result === '' || result === undefined || result.length <= 0) {
                            $('#my-warning-modal').find('.modal-title').html('خطا');
                            $('#my-warning-modal').find('#error').html('خطا');
                            return $('#warningModal')[0].click();
                        }


                        var today = Date.parse(result.Today);
                        var dateFrom = Date.parse(result.DateFrom);
                        var dateTo = Date.parse(result.DateTo);
                        var records = result.Records;
                        var delays = result.Delays;

                        if (records != null) {
                            if (records.length > 0) {

                                var a = records[0].data[0].start;
                                var b = records[records.length - 1].data[records[records.length - 1].data.length - 1].end;

                                var timeLineChart = $('.timeLineChart[data-ConstructionProjectId="' + constructionProjectId + '"]')[0];

                                const day = 24 * 365;

                                for (var i = 0; i < records.length; i++) {
                                    var record = records[i];

                                    for (var j = 0; j < record.data.length; j++) {
                                        var data = record.data[j];

                                        var elevenDays = 11 * 24 * 60 * 60 * 1000;
                                        data.faStart = Date.parse(data.start);
                                        data.faEnd = Date.parse(data.end);
                                        data.start = Date.parse(data.start) + elevenDays;
                                        data.end = Date.parse(data.end) + elevenDays;
                                        data.completed.amount.toFixed(3);
                                        data.completed.fill = '#f4f8ff66';
                                    }
                                }



                                // Process delays and add plot bands
                                const plotBands = [];
                                if (delays && delays.length > 0) {
                                    delays.forEach(delay => {
                                        const delayDates = delay.ConstructionProjectsDelayDates.split(',').map(d => d.trim());

                                        delayDates.forEach(persianDate => {
                                            const timestamp = moment(persianDate, 'jYYYY/jMM/jDD').valueOf() + elevenDays; // Convert Persian date to timestamp
                                            plotBands.push({
                                                billId: delay.ConstructionProjectBillDelayId,
                                                from: timestamp,
                                                to: timestamp + 24 * 60 * 60 * 1000, // One day duration
                                                color: { // Customize the color
                                                    pattern: {
                                                        path: colorArray.find(item => item.number === delay.ConstructionProjectBillDelayId).alg,
                                                        width: 10,
                                                        height: 10,
                                                        color: colorArray.find(item => item.number === delay.ConstructionProjectBillDelayId).color
                                                    }
                                                }

                                            });
                                        });
                                    });
                                }

                                moment.locale('fa');

                                Highcharts.dateFormats = {
                                    'a': function (ts) {
                                        return moment(ts).format('dddd')
                                    },
                                    'A': function (ts) {
                                        return moment(ts).format('dddd')
                                    },
                                    'd': function (ts) {
                                        return moment(ts).format('DD')
                                    },
                                    'e': function (ts) {
                                        return moment(ts).format('D')
                                    },
                                    'b': function (ts) {
                                        return moment(ts).format('MMMM')
                                    },
                                    'B': function (ts) {
                                        return moment(ts).format('MMMM')
                                    },
                                    'm': function (ts) {
                                        return moment(ts).format('MM')
                                    },
                                    'y': function (ts) {
                                        return moment(ts).format('YY')
                                    },
                                    'Y': function (ts) {
                                        return moment(ts).format('YYYY')
                                    },
                                    'W': function (ts) {
                                        return moment(ts).format('ww').toPersinaDigit()
                                    }
                                };


                                Highcharts.ganttChart(timeLineChart, {

                                    plotOptions: {

                                        series: {


                                            connectors: {
                                                dashStyle: 'ShortDot',
                                                lineWidth: 2,
                                                radius: 1,

                                                startMarker: {
                                                    enabled: false
                                                }
                                            },
                                            groupPadding: 0,
                                            dataLabels: [
                                                {

                                                    useHTML: true,

                                                    enabled: true,
                                                    align: 'center',
                                                    formatter: function (e) {
                                                        return '<div style=""><div style="font-size: 1em;line-height:20px"> ' + (this.point.completed.amount * 100).toFixed(2).toPersinaDigit() + '%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +
                                                            '' + this.key + ' </div>';
                                                    },
                                                    style: {
                                                        fontWeight: 'bold',
                                                        textOutline: 'none',

                                                        opacity: 1,
                                                    }

                                                },
                                            ]
                                        }
                                    },

                                    title: {

                                    },



                                    xAxis: [{
                                        type: 'datetime',
                                        labels: {
                                            formatter: function () {
                                                let label = this.axis.defaultLabelFormatter.call(this); // Get default label

                                                // If the label is "Week 44", replace it with "هفته ۴۴"
                                                if (label.includes('Week')) {
                                                    return label.replace('Week', 'هفته');
                                                }

                                                // If the label is just "W 44", replace it with "ه ۴۴" (shorter format)
                                                if (label.includes('W')) {
                                                    return label.replace('W', 'ه');
                                                }

                                                return label;
                                            }
                                        },
                                        currentDateIndicator: {
                                            color: '#000',
                                            dashStyle: 'ShortDot',
                                            width: 2,
                                            label: {
                                                format: ''
                                            }
                                        },
                                        dateTimeLabelFormats: {
                                            day: '%e<br><span style="opacity: 0.5; font-size: 0.7em">%a</span>'
                                        },
                                        grid: {
                                            borderWidth: 0.1
                                        },
                                        gridLineWidth: 1,
                                        custom: {
                                            today,
                                            weekendPlotBands: true
                                        },
                                        plotBands: plotBands // Add the calculated plotBands here
                                    }],

                                    yAxis: {
                                        title: {
                                            text: 'دسته بندی ها',
                                            style: {
                                                backgroundColor: 'blue',  // Blue background color
                                                color: 'white',            // White text color to contrast with blue background
                                                width: '100%',             // Title width set to 100%
                                                textAlign: 'center',       // Align text to the center
                                                padding: '10px'            // Add some padding for better appearance
                                            },
                                            align: 'center',               // Center align the title
                                            margin: 40                      // Space between the chart and the title
                                        },
                                        grid: {
                                            borderWidth: 0.1
                                        },
                                        gridLineWidth: 0.1,
                                        labels: {
                                            style: {
                                                plotBackgroundColor: 'blue',
                                            },
                                            symbol: {
                                                width: 8,
                                                height: 6,
                                                x: -4,
                                                y: -2
                                            }
                                        },
                                        staticScale: 40,
                                        plotBackgroundColor: 'blue',

                                    },


                                    tooltip: {
                                        outside: true,
                                        useHTML: true,
                                        formatter: function (e) {

                                            var a = moment(this.point.start);

                                            var html = '<div style="">';

                                            html += '<div style="font-size: 14px;">' + this.key + '</div>';
                                            html += '<div style="font-size: 14px;">' + (this.point.completed.amount * 100).toFixed(2).toPersinaDigit() + '%</div>';
                                            html += '<div style="font-size: 14px;">شروع ' + moment(this.point.faStart).format('YYYY/MM/DD').toPersinaDigit() + '</div>';
                                            html += '<div style="font-size: 14px;">پایان ' + moment(this.point.faEnd).format('YYYY/MM/DD').toPersinaDigit() + '</div>';

                                            html += '</div>';

                                            return html;
                                        }
                                    },

                                    navigator: {
                                        enabled: true,
                                        liveRedraw: true,
                                        series: {
                                            type: 'gantt',
                                            pointPlacement: 0.5,
                                            pointPadding: 0.25,
                                            accessibility: {
                                                enabled: false
                                            }
                                        },
                                        yAxis: {
                                            min: 0,
                                            max: 5,
                                            reversed: true,
                                            categories: []
                                        }
                                    },

                                    scrollbar: {
                                        enabled: true
                                    },

                                    rangeSelector: {
                                        enabled: true,
                                        inputEnabled: false,
                                    },

                                    accessibility: {
                                        point: {
                                            descriptionFormat: '{yCategory}. ' +
                                                '{#if completed}Task {(multiply completed.amount 100):.1f}% completed. {/if}' +
                                                'Start {x:%Y-%m-%d}, end {x2:%Y-%m-%d}.'
                                        },
                                        series: {
                                            descriptionFormat: '{name}'
                                        }
                                    },

                                    lang: {
                                        accessibility: {
                                            axis: {
                                                xAxisDescriptionPlural: 'The chart has a two-part X axis showing time in both week numbers and days.',
                                                yAxisDescriptionPlural: 'The chart has one Y axis showing task categories.'
                                            },
                                        },
                                    },

                                    series: records,
                                    chart: {
                                        events: {
                                            load: function () {
                                                let chart = this;
                                                let appliedIndices = new Set(); // Track applied indices to avoid duplication
                                                chart.xAxis[0].plotLinesAndBands.forEach((band, index) => {
                                                    if (band.svgElem) {
                                                        let matchingIndex = plotBands.findIndex((pb, i) =>
                                                            pb.from === band.options.from && pb.to === band.options.to && !appliedIndices.has(i)
                                                        );
                                                        if (matchingIndex !== -1) {
                                                            let billId = plotBands[matchingIndex].billId;
                                                            //console.log(`Setting billId ${billId} for plotBand index ${index}`);
                                                            band.svgElem.element.setAttribute('billId', billId);
                                                            appliedIndices.add(matchingIndex); // Mark as assigned
                                                        } else {
                                                            //console.warn(`No unique plotBand found for from=${band.options.from}, to=${band.options.to}`);
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                    }
                                });
                            }
                        }
                    }
                });

                //#endregion
            }
            // else {
            //     $('.chartsTimeLinePanel[data-ConstructionProjectId="' + constructionProjectId + '"]').hide();
            //     _this.parent().parent().parent().next().show();
            // }
        });



        //Handling bill delays clicking
        $('body').on('click', '.billDelay', function () {
            let billId = $(this).attr('billId');
            $(this).toggleClass('unselectedColor');
            $('path[billId=' + billId + ']').each(function () {
                $(this).toggleClass('hidden');
            })
        })

        //#region For modal 4  flipCardAccDetails Toggle
        $('body').on('click', '.flipButtonAccDetails', function (e) {
            var _this = $(this);
            var constructionProjectId = _this.attr('data-ConstructionProjectId');
            var flipCardElement = $(".flipCardAccDetails[data-ConstructionProjectId='" + constructionProjectId + "']");
            flipCardElement.addClass('flipped');
        });

        $('body').on('click', '.flipButtonAccDetailsBack', function (e) {
            var _this = $(this);
            var constructionProjectId = _this.attr('data-ConstructionProjectId');
            var flipCardElement = $(".flipCardAccDetails[data-ConstructionProjectId='" + constructionProjectId + "']");
            flipCardElement.removeClass('flipped');
        });
        //#endregion

        //#region For modal 4  flipCardAccDetails Toggle
        $('body').on('click', '.flipButtonAllCost', function (e) {

            var _this = $(this);
            var constructionProjectId = _this.attr('data-ConstructionProjectId');
            var flipCardElement = $(".flipCardAllCost[data-ConstructionProjectId='" + constructionProjectId + "']");
            flipCardElement.addClass('flipped');
        });

        $('body').on('click', '.flipButtonAllCostBack', function (e) {

            var _this = $(this);
            var constructionProjectId = _this.attr('data-ConstructionProjectId');
            var flipCardElement = $(".flipCardAllCost[data-ConstructionProjectId='" + constructionProjectId + "']");
            flipCardElement.removeClass('flipped');
        });
        //#endregion


        const colors = Highcharts.getOptions().colors.map((c, i) =>
            // Start out with a darkened base color (negative brighten), and end
            // up with a much brighter color
            Highcharts.color(Highcharts.getOptions().colors[0])
                .brighten((i - 3) / 7)
                .get()
        );


        $("[unique-script-id='w-w-dm-id'] .btn-box").click(function () {
            $(this).parent().children(".overlay").css('display', 'flex');

        });


        $("[unique-script-id='w-w-dm-id'] .close").click(function () {
            $("[unique-script-id='w-w-dm-id'] .overlay").hide();
        });

        $("[unique-script-id='w-w-dm-id'] .list").click(function () {
            const value = $(this).attr('data-filter');
            if (value == 'all') {
                $("[unique-script-id='w-w-dm-id'] .project-image").show('1000');
            } else {
                $("[unique-script-id='w-w-dm-id'] .project-image").not('.' + value).hide('1000');
                $("[unique-script-id='w-w-dm-id'] .project-image").filter('.' + value).show('1000');
            }
        })
        $("[unique-script-id='w-w-dm-id'] .list").click(function () {
            $(this).addClass('active').siblings().removeClass('active');
        })


        $('body').on('click', '.my-slider-navigator', function () {

            //var carousel = $("#" + $(this).data("carousel"))[0].tns;
            //var currentPosition = carousel.getInfo().index + 1; // Adding 1 to make the index 1-based
            //var totalSlides = carousel.getInfo().slideCount;

            if ($(this).data("target") == "prev") {
                $("#" + $(this).data("carousel"))[0].tns.goTo("prev");
            } else {
                $("#" + $(this).data("carousel"))[0].tns.goTo("next");
            }
            setPublicCostRecords();
        });

        function setPublicCostRecords() {

            ////$('body').removeClass('fixModalPadding');
            //$('#MonthContent').empty();
            $('#MonthContent').html('');
            var DeactiveTnsItemsList = $('.item.tns-item.tns-slide-active ');
            var dataCellIndexs = [];
            DeactiveTnsItemsList.each(function (index, item) {
                var dataCellIndex = $(item).attr('data-CellIndex');
                dataCellIndexs.push(parseInt(dataCellIndex));

            });

            console.log('dataCellIndexs->', dataCellIndexs)

            var rows = [];
            for (var item in groupedIndexData) {
                var itm = groupedIndexData[item];

                var itm2 = itm.filter(function (e) {
                    return dataCellIndexs.includes(e.CellIndex);
                })

                if (itm2.length > 0)
                    rows.push(itm2);
            }

            console.log('rows->', rows)
            console.log('groupedIndexData->', groupedIndexData)

            var leftSideContenet = '';
            if (rows != null) {
                if (rows.length > 0) {

                    var sumByCellIndex = {};
                    for (var row = 0; row < rows.length; row++) {
                        var totalPerMonth = 0;
                        var cellCount = 3;
                        if (isMobile)
                            cellCount = 1
                        for (var cell = 0; cell < cellCount; cell++) {

                            if (rows[row][cell] != null && rows[row][cell] != undefined && rows[row][cell] != '') {
                                leftSideContenet = leftSideContenet
                                    +
                                    '<div class="col-span-3 lg:col-span-1 xl:col-span-1 md:col-span-1 sm:col-span-3 item text-center">'
                                    + '<div class="overflow-x-auto sm:overflow-x-visible bg-slate-100">'
                                    + '<div class="intro-y inbox">'
                                    + '<div class="inline-block sm:block text-slate-600 dark:text-slate-500 bg-slate-100 dark:bg-darkmode-400/70 border-b border-slate-200/60 dark:border-darkmode-400">'
                                    + '<div class="py-3 bg-slate-100">'
                                    //+ '<div class="sm:col-span-1 text-center whitespace-nowrap flex text-center pr-5 " data-CellIndex="' + rows[row][cell].CellIndex + '">'
                                    + '<div class="text-center whitespace-nowrap text-center rowForHeight" data-CellIndex="' + rows[row][cell].CellIndex + '">'
                                    +
                                    (
                                        (rows[row][cell] != null && rows[row][cell] != undefined && rows[row][cell] != '') ?
                                            (
                                                (rows[row][cell].CellData != null && rows[row][cell].CellData !== '' && rows[row][cell].CellData !== undefined) ?
                                                    (rows[row][cell].CellData === "0" ? "&nbsp" : rows[row][cell].CellData.toPersinaDigit()) :
                                                    ''
                                            ) :
                                            ''
                                    )
                                    +
                                    '</div>'
                                    + '</div>'
                                    + '</div>'
                                    + '</div>'
                                    + '</div>'
                                    + '</div>';
                                var currentCellIndex = rows[row][cell].CellIndex;

                                if (currentCellIndex !== 0) {
                                    var cellDataValue = parseFloat(rows[row][cell].CellData.replace(/,/g, '')) || 0;
                                    sumByCellIndex[currentCellIndex] = (sumByCellIndex[currentCellIndex] || 0) + cellDataValue;
                                }
                            }
                            else {
                                leftSideContenet = leftSideContenet
                                    +
                                    '<div class="col-span-3 lg:col-span-1 xl:col-span-1 md:col-span-1 sm:col-span-3 item text-center">'
                                    + '<div class="overflow-x-auto sm:overflow-x-visible bg-slate-100">'
                                    + '<div class="intro-y inbox">'
                                    + '<div class="inline-block sm:block text-slate-600 dark:text-slate-500 bg-slate-100 dark:bg-darkmode-400/70 border-b border-slate-200/60 dark:border-darkmode-400">'
                                    + '<div class="py-3 bg-slate-100">'
                                    //+ '<div class="sm:col-span-1 text-center whitespace-nowrap flex text-center pr-5 " data-CellIndex="' + rows[row][cell].CellIndex + '">'
                                    + '<div class="text-center whitespace-nowrap text-center  rowForHeight" data-CellIndex="">'
                                    + '</div>'
                                    + '</div>'
                                    + '</div>'
                                    + '</div>'
                                    + '</div>'
                                    + '</div>';
                            }

                        }
                    }
                    // Sum Per Month

                    var sumArray = Object.values(sumByCellIndex);

                    if (sumArray.length > 0) {
                        document.getElementById('totalFirstMonth').innerText = sumArray[0].toLocaleString().toPersinaDigit();
                    }

                    for (var i = 0; i < sumArray.length; i++) {
                        if (i === 1) {
                            document.getElementById('totalSecondtMonth').innerText = sumArray[i].toLocaleString().toPersinaDigit();
                        } else if (i === 2) {
                            document.getElementById('totalThirdMonth').innerText = sumArray[i].toLocaleString().toPersinaDigit();
                        }
                    }
                }
                else
                    if (rows.length == 0) {
                        //var allSum = $('#descriptionAndTotalContent').find('[data-totalvaluerowindex!=""]');
                        var allSum = $('#descriptionAndTotalContent').find('.totalvaluerowindex');

                        if (allSum != null)
                            if (allSum.length > 0) {

                                var totalSum = 0;

                                for (var i = 0; i < allSum.length; i++) {
                                    var sum = allSum[i];
                                    leftSideContenet = leftSideContenet
                                        +
                                        '<div class="col-span-3 item">'
                                        + '<div class="overflow-x-auto sm:overflow-x-visible bg-slate-100">'
                                        + '<div class="intro-y inbox">'
                                        + '<div class="inline-block sm:block text-slate-600 dark:text-slate-500 bg-slate-100 dark:bg-darkmode-400/70 border-b border-slate-200/60 dark:border-darkmode-400">'
                                        + '<div class="py-3 bg-slate-100">'
                                        //+ '<div class="sm:col-span-3 text-center whitespace-nowrap flex text-center pr-5 " data-CellIndex="' + $(sum).attr('data-totalvaluerowindex') + '">'
                                        + '<div class="text-center whitespace-nowrap text-center  rowForHeight" data-CellIndex="' + $(sum).attr('data-totalvaluerowindex') + '">'
                                        +
                                        $(sum).html()
                                        +
                                        '</div>'
                                        + '</div>'
                                        + '</div>'
                                        + '</div>'
                                        + '</div>'
                                        + '</div>';

                                    totalSum += parseFloat($(sum).html().replace(/,/g, '').toEnglishDigit()) || 0
                                }

                                $('#totalFirstMonth').html(Spliter((totalSum + '').toPersinaDigit()));
                            }
                    }
            }
            $('#MonthContent').html(leftSideContenet);
            // Fix number eng to persian
            function convertToPersianNumbers() {
                const persianNumbers = ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'];

                // Select all elements with the class 'rowForHeight'
                document.querySelectorAll('.rowForHeight').forEach(element => {
                    // Replace numbers with Persian equivalents
                    element.innerHTML = element.innerHTML.replace(/\d/g, match => persianNumbers[parseInt(match)]);
                });
            }

            // Call the function to convert numbers
            convertToPersianNumbers();

            if (isMobile) {
                var tmpRows = $('#descriptionAndTotalContent').find('.rowForHeight');
                if (tmpRows !== undefined) {
                    if (tmpRows.length > 0) {
                        for (var j = 0; j < tmpRows.length; j++) {
                            var row = tmpRows[j];
                            var currentHeight = $(row).height();
                            $(row).next().height(currentHeight);
                            var headOnCell = $('#MonthContent').find('.rowForHeight').eq(j);
                            if (headOnCell != undefined) {
                                $(headOnCell).height(currentHeight);
                            }
                        }
                    }
                }
            }
            else {
                var tmpRows = $('#descriptionAndTotalContent').find('.rowForHeight');
                if (tmpRows !== undefined) {
                    if (tmpRows.length > 0) {
                        for (var j = 0; j < tmpRows.length * 3; j++) {
                            var row = tmpRows[Math.round(j / 3)];
                            var currentHeight = $(row).height();
                            $(row).next().height(currentHeight);
                            var headOnCell = $('#MonthContent').find('.rowForHeight').eq(j);
                            if (headOnCell != undefined) {
                                $(headOnCell).height(currentHeight);
                            }
                            j++;
                            headOnCell = $('#MonthContent').find('.rowForHeight').eq(j);
                            if (headOnCell != undefined) {
                                $(headOnCell).height(currentHeight);
                            }
                            j++;
                            headOnCell = $('#MonthContent').find('.rowForHeight').eq(j);
                            if (headOnCell != undefined) {
                                $(headOnCell).height(currentHeight);
                            }
                        }
                    }
                }
            }


            //$('#General_cost_scroll').scrollbox({
            //    horizontal: false
            //});


        }


        // function renderIcons() {
        //     // Move icon
        //     if (!this.series[0].icon) {
        //         this.series[0].icon = this.renderer.path(['M', -8, 0, 'L', 8, 0, 'M', 0, -8, 'L', 8, 0, 0, 8])
        //             .attr({
        //                 stroke: '#303030',
        //                 'stroke-linecap': 'round',
        //                 'stroke-linejoin': 'round',
        //                 'stroke-width': 2,
        //                 zIndex: 10
        //             })
        //             .add(this.series[2].group);
        //     }
        //     this.series[0].icon.translate(
        //         this.chartWidth / 2 - 10,
        //         this.plotHeight / 2 - this.series[0].points[0].shapeArgs.innerR -
        //         (this.series[0].points[0].shapeArgs.r - this.series[0].points[0].shapeArgs.innerR) / 2
        //     );

        //     // Exercise icon
        //     if (!this.series[1].icon) {
        //         this.series[1].icon = this.renderer.path(
        //             ['M', -8, 0, 'L', 8, 0, 'M', 0, -8, 'L', 8, 0, 0, 8,
        //                 'M', 8, -8, 'L', 16, 0, 8, 8]
        //         )
        //             .attr({
        //                 stroke: '#ffffff',
        //                 'stroke-linecap': 'round',
        //                 'stroke-linejoin': 'round',
        //                 'stroke-width': 2,
        //                 zIndex: 10
        //             })
        //             .add(this.series[2].group);
        //     }
        //     this.series[1].icon.translate(
        //         this.chartWidth / 2 - 10,
        //         this.plotHeight / 2 - this.series[1].points[0].shapeArgs.innerR -
        //         (this.series[1].points[0].shapeArgs.r - this.series[1].points[0].shapeArgs.innerR) / 2
        //     );

        //     // Stand icon
        //     if (!this.series[2].icon) {
        //         this.series[2].icon = this.renderer.path(['M', 0, 8, 'L', 0, -8, 'M', -8, 0, 'L', 0, -8, 8, 0])
        //             .attr({
        //                 stroke: '#303030',
        //                 'stroke-linecap': 'round',
        //                 'stroke-linejoin': 'round',
        //                 'stroke-width': 2,
        //                 zIndex: 10
        //             })
        //             .add(this.series[2].group);
        //     }

        //     this.series[2].icon.translate(
        //         this.chartWidth / 2 - 10,
        //         this.plotHeight / 2 - this.series[2].points[0].shapeArgs.innerR -
        //         (this.series[2].points[0].shapeArgs.r - this.series[2].points[0].shapeArgs.innerR) / 2
        //     );
        // }


        $('div.contractModalButton').click(function (e) {
            e.preventDefault();

            var _this = $(this);

            // Retrieve the title from '.TitleOfContract' and update modal titles
            var title = _this.find('.TitleOfContract').html();
            $('#Contracts-ModalDiv').find('.contractsModalTitle').html(title);
            $('.createContractmodal').html(title);

            // Find the specific 'divAddContract' within the context of the clicked button
            let divAddContract = _this.find('.divAddContract');

            if (divAddContract.length > 0) {
                let attributes = divAddContract[0].attributes;
                let attributeString = '';

                // Initialize mynewdata
                let mynewdata = '';

                // Check for the data-contracttype attribute
                for (let i = 0; i < attributes.length; i++) {
                    let attr = attributes[i];
                    attributeString += `${attr.name}="${attr.value}" `;
                    if (attr.name === 'data-contracttype' && attr.value === 'PartnershipAgreement') {
                        mynewdata = 'درخواست جدید';
                    }
                    else if (attr.value === 'ContractAgreement') {
                        mynewdata = 'قرارداد جدید';
                    }
                    else if (attr.value === 'InitialPlan') {
                        mynewdata = 'نقشه جدید';
                    }
                    else if (attr.value === 'MeetingBoard') {
                        mynewdata = 'صورتجلسه جدید';
                    }
                    else if (attr.value === 'ConfirmationAgreement') {
                        mynewdata = 'تاییدیه جدید';
                    }
                    else if (attr.value === 'PitchDeck') {
                        mynewdata = 'معرفی جدید';
                    }

                }

                // Create new HTML content for 'wtf' using retrieved attributes
                let addContractBtn = `<button class="addContractDiv divAddContract add btn btn-primary shadow-md mr-2 create-request-modal" ${attributeString}><i id="togglecreate" class="material-symbols-outlined">add</i><span class="createContractmodal">${mynewdata}</span></button>`;
                $('#Contracts-ModalDiv').data('mynewdata', mynewdata);
                // Set innerHTML of the 'wtf' element
                $('#AddContractBtn').html(addContractBtn);

            }

        });




        $('div[data-tw-target="#Financial-Report"]').click(function (e) {
            e.preventDefault();
            var _this = $(this);
            var title = _this.find('.spnTitle').html();

            $('#financialProjectReport').find('.financialProjectReportTitle').html(title);
        });
        $('.TotalPublicCostDiv').click(function (e) {
            e.preventDefault();
            var _this = $(this);
            var title = _this.find('.totalPriceTitle').html();
            $('#Total-Public-Cost').find('.TotalPublicCostTitle').html(title);
        });

        // var chartsTimeLinePanelButton = $('.chartsTimeLinePanelButton')[0];
        // if (chartsTimeLinePanelButton != null) {
        //     $(chartsTimeLinePanelButton).click();
        // }
    })




    //#region Pagintation Toggle
    $('body').on('click', '.setDailyReportModal', function () {
        var _this = $(this);

        $('body').addClass('fixModalPadding');
        $('body').addClass('overflow-y-hidden');

        $('html').addClass('overflow-y-hidden');

        var projectIdValue = _this.attr('data-constructionProjectId');
        setProjectDailytModalPagination(1, projectIdValue);
        ////$('body').removeClass('fixModalPadding');
    });

    //#endregion

    // Tiny Slider
    //if ($(".tiny-slider").length) {
    //    $(".tiny-slider").each(function () {
    //        this.tns = tns({
    //            container: this,
    //            slideBy: "page",
    //            mouseDrag: true,
    //            autoplay: true,
    //            controls: false,
    //            nav: false,
    //            speed: 500,
    //        });
    //    });
    //}


    //               var a = tns({
    //               container: '.MonthContent',
    //               slideBy: "page",
    //               mouseDrag: true,
    //               autoplay: false,
    //               controls: false,
    //               nav: false,
    //               speed: 500,
    //                   items: 3,
    //               });

    //$('#MonthContent')[0].tns = a;

    //  $('body').on('click', '.my-slider2-navigator', function() {
    //        if ($(this).data("target") == "prev") {
    //          $("#" + $(this).data("carousel"))[0].tns.goTo("prev");
    //        } else {
    //          $("#" + $(this).data("carousel"))[0].tns.goTo("next");
    //        }
    //      });






    //if ($(".tiny-slider-navigator").length) {
    //  $(".tiny-slider-navigator").each(function () {

    //  });
    //} // Slider widget page


    //$('body').on('click', '.tiny-slider-navigator', function() {
    //      if ($(this).data("target") == "prev") {
    //        $("#" + $(this).data("carousel"))[0].tns.goTo("prev");
    //      } else {
    //        $("#" + $(this).data("carousel"))[0].tns.goTo("next");
    //      }
    //    });

    //#region Pagintation For Daily Report

    function setProjectDailytModalPagination(pageNum, projectIdValue) {
        $('#elementData').html('');

        try {

        }
        catch (e) {
        }
        $.ajax({
      
            cache: false,
            type: "POST",
            url: "/UserProjects/RepresentativesProjectsManagement/GetConstructionProjectsDailyDataByConstructionProjectId",
            data: { 'projectId': projectIdValue, 'pageNum': pageNum },
             
            success: function (result) {
                if (result === null || result === '' || result === undefined || result.length <= 0) {
                    $('#my-warning-modal').find('.modal-title').html('خطا');
                    $('#my-warning-modal').find('#error').html('خطا');
                    return $('#warningModal')[0].click();
                }
                 debugger;

                if (result.Records != null)
                    if (result.Records.length > 0) {
                        for (var j = 0; j < result.Records.length; j++) {
                            function toPersianNumber(number) {
                                const persianDigits = '۰۱۲۳۴۵۶۷۸۹';
                                return number.toString().replace(/\d/g, (digit) => persianDigits[digit]);
                            }
                            const progressValue = parseInt(result.Records[j].Progress).toFixed(0);
                            const progressPercentage =
                                isNaN(progressValue) || progressValue > 100 || progressValue < 0
                                    ? '0%'
                                    : `${progressValue}%`;
                            const progressPercentagePersian = toPersianNumber(progressPercentage);

                            const isZeroProgress = progressPercentage === '0%';



                            if (window.innerWidth <= 825) {
                                var str = '<div class="dailyDataItemDate col-span-12 font-normal " id="datedivId">' +
                                    ' <div class="py-3 px-3 col-span-6 dailyDataItemTitleDateM">تاریخ</div>' +
                                    ' <div class="py-3 px-3 col-span-6 dailyDataItemTitleDateM">' + (result.Records[j].PersianRecordDate === null || result.Records[j].PersianRecordDate === '' || result.Records[j].PersianRecordDate === undefined ? '-' : result.Records[j].PersianRecordDate.toPersinaDigit()) + '</div>' +

                                    '</div> <div class="dailyDataItemDesc col-span-12 sm:col-span-12 lg:col-span-5 xl:col-span-5 font-normal py-3 px-3 text-right" id="operationDescriptionDivId"><div class="dailyDataItemTitleDesc">شرح عملیات</div><div class="dailyDataDesc">' +
                                    (result.Records[j].DescriptionOfOperation === null || result.Records[j].DescriptionOfOperation === '' || result.Records[j].DescriptionOfOperation === undefined ? '-' : result.Records[j].DescriptionOfOperation) +
                                    '</div></div> <div class="dailyDataItemProgress col-span-8 font-normal py-3 px-3" id="progressDivId"><div class="dailyDataItemTitleProgress font-medium py-3">درصد پیشرفت</div>' +
                                    '<div class="progress w-48 h-4">' +
                                    `
                                        <div class="progress-bar"
                                         style="
                                                background-color: ${isZeroProgress ? 'rgb(200 200 200)' : 'rgb(40, 167, 69)'};
                                                color: ${isZeroProgress ? 'black' : '#fff'};
                                                width: ${isZeroProgress ? 'unset' : progressPercentage};
                                                display: ${isZeroProgress ? 'flex' : 'block'};
                                                justify-content: ${isZeroProgress ? 'center' : 'flex-start'};
                                                align-items: ${isZeroProgress ? 'center' : 'flex-start'};"
                                         role="progressbar"
                                         aria-valuenow="${progressValue}"
                                         aria-valuemin="0"
                                         aria-valuemax="100">
                                        ${isZeroProgress ? '0%' : progressPercentagePersian}
                                    </div>
                                </div>
                                </div>`+

                                    '<div class="dailyDataItemConfirm col-span-4 font-normal py-3 px-3" id="approvesDivId"><div class="dailyDataItemTitleConfirm font-medium py-3">تاییده ها</div>' +
                                    '<a data-theme="light" data-tooltip-content="#accpets-tooltip" class="tooltip btn btn-secondary">' +
                                    '<div class="flex items-center justify-center">' +
                                    '<div class="flex items-center myButtonindex justify-center ' +
                                    (result.Records[j].OperatorApprove === 'TRUE' ? 'text-success' : 'text-danger') +
                                    '"  id="verifyStatus-OperatorApprove-' + projectIdValue + '" >' +
                                    (result.Records[j].OperatorApprove === "TRUE" ?
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="check" data-lucide="check" class="lucide lucide-check w-4 h-4"><polyline points="20 6 9 17 4 12"></polyline></svg>' :
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="x" data-lucide="x" class="lucide lucide-x w-4 h-4"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>'
                                    ) +
                                    '</div><div class="flex items-center myButtonindex justify-center ' +
                                    (result.Records[j].WorkshopSupervisorSignatureApprove === 'TRUE' ? 'text-success' : 'text-danger') +
                                    '"  id="verifyStatus-WorkshopSupervisorSignatureApprove-' + projectIdValue + '" >' +
                                    (result.Records[j].WorkshopSupervisorSignatureApprove === "TRUE" ?
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="check" data-lucide="check" class="lucide lucide-check w-4 h-4"><polyline points="20 6 9 17 4 12"></polyline></svg>' :
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="x" data-lucide="x" class="lucide lucide-x w-4 h-4"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>'
                                    ) +
                                    '</div><div class="flex items-center myButtonindex justify-center ' +
                                    (result.Records[j].ProjectControlAndRegistrationApprove === "TRUE" ? 'text-success' : 'text-danger') +
                                    '"  id="verifyStatus-ProjectControlAndRegistrationApprove-' + projectIdValue + '" >' +
                                    (result.Records[j].ProjectControlAndRegistrationApprove === "TRUE" ?
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="check" data-lucide="check" class="lucide lucide-check w-4 h-4"><polyline points="20 6 9 17 4 12"></polyline></svg>' :
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="x" data-lucide="x" class="lucide lucide-x w-4 h-4"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>'
                                    ) +
                                    '</div></div></a></div>';

                            }
                            else {
                                var str = '<div class="dailyDataItemDate col-span-5 sm:col-span-5 lg:col-span-2 xl:col-span-2 font-normal py-3 px-3" id="datedivId"><div class="dailyDataItemTitleDate">تاریخ</div>' +
                                    (result.Records[j].PersianRecordDate === null || result.Records[j].PersianRecordDate === '' || result.Records[j].PersianRecordDate === undefined ? '-' : result.Records[j].PersianRecordDate.toPersinaDigit()) +
                                    '</div> <div class="dailyDataItemDesc col-span-5 sm:col-span-5 lg:col-span-5 xl:col-span-5 font-normal py-3 px-3 text-right" id="operationDescriptionDivId"><div class="dailyDataItemTitleDesc">شرح عملیات</div><div class="dailyDataDesc">' +
                                    (result.Records[j].DescriptionOfOperation === null || result.Records[j].DescriptionOfOperation === '' || result.Records[j].DescriptionOfOperation === undefined ? '-' : result.Records[j].DescriptionOfOperation) +
                                    '</div></div> <div class="dailyDataItemProgress col-span-5 sm:col-span-5 lg:col-span-3 xl:col-span-3 font-normal py-3 px-3" id="progressDivId"><div class="dailyDataItemTitleProgress font-medium py-3">درصد پیشرفت</div>' +
                                    '<div class="progress w-48 h-4">' +
                                    `
                                <div class="progress-bar"
                                     style="
                                            background-color: ${isZeroProgress ? 'rgb(200 200 200)' : 'rgb(40, 167, 69)'};
                                            color: ${isZeroProgress ? 'black' : '#fff'};
                                            width: ${isZeroProgress ? 'unset' : progressPercentage};
                                            display: ${isZeroProgress ? 'flex' : 'block'};
                                            justify-content: ${isZeroProgress ? 'center' : 'flex-start'};
                                            align-items: ${isZeroProgress ? 'center' : 'flex-start'};"
                                     role="progressbar"
                                     aria-valuenow="${progressValue}"
                                     aria-valuemin="0"
                                     aria-valuemax="100">
                                    ${isZeroProgress ? '0%' : progressPercentagePersian}
                                </div>
                            </div>
                            </div>`+

                                    //21: سرپرست => OperatorApprove
                                    //22 : pmo => WorkshopSupervisorSignatureApprove
                                    // 23: کنترل پروژه = > ProjectControlAndRegistrationApprove

                                    '<div class="dailyDataItemConfirm col-span-12 sm:col-span-12 lg:col-span-2 xl:col-span-2 font-normal py-3 px-3" id="approvesDivId"><div class="dailyDataItemTitleConfirm font-medium py-3">تاییده ها</div>' +
                                    '<a data-theme="light" class=" btn btn-secondary" >' +
                                    '<div class="flex items-center justify-center">' +

                                    '<div class="flex tooltip2 items-center myButtonindex justify-center ' +
                                    (result.Records[j].OperatorApprove === 'TRUE' ? 'text-success' : 'text-danger') +
                                    '"  id="verifyStatus-WorkshopSupervisorSignatureApprove-' + projectIdValue + '" data-tooltip="تایید سرپرست" >' +
                                    (result.Records[j].OperatorApprove === "TRUE" ?
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="check" data-lucide="check" class="lucide lucide-check w-4 h-4"><polyline points="20 6 9 17 4 12"></polyline></svg>' :
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="x" data-lucide="x" class="lucide lucide-x w-4 h-4"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>'
                                    ) +
                                    '</div>' +

                                    '<div class="flex tooltip2 items-center myButtonindex justify-center ' +
                                    (result.Records[j].WorkshopSupervisorSignatureApprove === 'TRUE' ? 'text-success' : 'text-danger') +
                                    '"  id="verifyStatus-OperatorApprove-' + projectIdValue + '"  data-tooltip="تایید PMO" >' +
                                    (result.Records[j].WorkshopSupervisorSignatureApprove === "TRUE" ?
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="check" data-lucide="check" class="lucide lucide-check w-4 h-4"><polyline points="20 6 9 17 4 12"></polyline></svg>' :
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="x" data-lucide="x" class="lucide lucide-x w-4 h-4"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>'
                                    ) +
                                    '</div>' +

                                    '<div class="flex tooltip2 items-center myButtonindex justify-center ' +
                                    (result.Records[j].ProjectControlAndRegistrationApprove === "TRUE" ? 'text-success' : 'text-danger') +
                                    '"  id="verifyStatus-ProjectControlAndRegistrationApprove-' + projectIdValue + '" data-tooltip="تایید کنترل پروژه">' +
                                    (result.Records[j].ProjectControlAndRegistrationApprove === "TRUE" ?
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="check" data-lucide="check" class="lucide lucide-check w-4 h-4"><polyline points="20 6 9 17 4 12"></polyline></svg>' :
                                        '<svg  width="36" height="36" viewBox="0 0 24 24" fill="none"  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="x" data-lucide="x" class="lucide lucide-x w-4 h-4"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>'
                                    ) +
                                    '</div></div></a></div>';

                                console.log(result);
                            }




                            $('#elementData').html($('#elementData').html() + str);


                            $(".tooltip2").each(function () {
                                tippy(this, {
                                    interactive: true,
                                    content: $(this).attr("data-tooltip"),
                                    theme: "big" // Apply custom theme
                                });
                            });



                        }



                        $('#elementData').animate({ scrollTop: 0 }, 'slow');


                        const container = $('#elementData'); // Container for your data
                        const items = container.children('div'); // Get all divs inside #elementData


                        if ((items.length / 4) >= 21) {
                    
                            container.css('margin-left', '-12px');
                        } else {
                           
                            container.css('margin-left', ''); // حذف margin-left اگر کمتر از ۲۱ آیتم باشد
                        }





                       
        setTimeout(function () {
         
        // تاخیر کوچک برای اطمینان از بارگیری کامل داده‌ها
  

    var paginationDiv = $("#paginationDiv");
        if (result.TotalRecordCount !== null && result.TotalRecordCount !== 0 && result.TotalRecordCount > 30) {
            var pageNumber = parseInt(pageNum);
            var pageSize = 30;
            var count = Math.ceil(result.TotalRecordCount / pageSize);
            window.pagObj = $('#paginationDiv').twbsPagination({
                totalPages: count,
                activeClass: "activePage",
                visiblePages: 3,
                last: ">>",
                first: "<<",
                prev: "<",
                next: ">",
                onPageClick: function (event, pageNumber) {
                    setProjectDailytModalPagination(pageNumber, projectIdValue);
                }
            }).on('page', function (event) {

            });
        }
        
        }, 2500);





                        //$(".Daily-Report-Link[data-ConstructionProjectId='" + projectIdValue + "']")[0].click();
                    }
            }
        });
    }



    //#endregion


    //#region Reset Pagintation For Daily Report On First Modal
    $('body').on('click', '#Daily-Report', function () {
        var modal = $('#Daily-Report').hasClass('show');
        if (!modal) {
            $('body').removeClass('fixModalPadding');
            $('body').removeClass('overflow-y-hidden');

            $('html').removeClass('overflow-y-hidden');
            $('#paginationDiv').twbsPagination('destroy');
            if (window.pagObj != undefined)
                window.pagObj.off("page").removeData("twbs-pagination").empty()
        }
        else {
            $('body').addClass('fixModalPadding');
            $('body').addClass('overflow-y-hidden');

            $('html').addClass('overflow-y-hidden');
        }
    });
    //#endregion

    //#region Toggle For Contract Attachment Modals



    // ---------------------------



    $('body').on('click', '.AttachmentCreate, .contractAttachmentModalsButton', function (event) {


        var _this = $(this);
        var AgreementId = _this.attr('data-AgreementId');

        if (!$(event.target).closest(".related-group, .related-child").length) {
            $(".related-child").removeClass("active"); // Hide all related-child rows smoothly
            $(".blur").removeClass("blur"); // Remove blur smoothly from unrelated-group elements
            $(".non-blur").removeClass("non-blur"); // Remove non-blur class
        }

        var $relatedGroup = $(this).closest('.related-group');
        var $relatedChild = $relatedGroup.find('.related-child');

        // Toggle the 'active' class to apply the transition effect for related-child visibility
        $relatedChild.toggleClass("active");

        // Apply blur effect to unrelated-group elements with a smooth transition
        $(".unrelated-group").toggleClass("blur");

        // Toggle blur for .related-group elements that do not match the current AgreementId
        $(".related-group").not($relatedGroup).toggleClass("blur");

        // Ensure the clicked related-group and related-child stay non-blurred
        $relatedGroup.add($relatedChild).toggleClass("non-blur");

        // Apply the blur effect specifically to the .unrelated-group elements with the matching AgreementId
        $('tr[data-agreementid="' + AgreementId + '"]').toggleClass('non-blur');

        var ContractType = _this.attr('data-ContractType');
        var ConstructionProjectId = _this.attr('data-ConstructionProjectId');
        var checkXbutton = $('.CloseAttachment[data-AgreementId="' + AgreementId + '"]');

        if (!checkXbutton.hasClass('d-none')) {
            $('.AddAttachment[data-AgreementId="' + AgreementId + '"] i').css('transform', 'rotate(45deg)');
        }

        if ($('.contractConversationModal[data-AgreementId="' + AgreementId + '"]').css("display") === "block") {
            $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').hide();
            $('.contractAttachmentsClass').remove();
            $('.contractConversationModalButton[data-AgreementId="' + AgreementId + '"]')[0].click();
        }

        if ($('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').is(':visible')) {
            $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').slideUp(500, function () {

                $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').hide();
                $('.contractAttachmentsClass').remove();
                $('.AddAttachment[data-AgreementId="' + AgreementId + '"] i').css('transform', 'rotate(0deg)');
            });
        } else {
            getAttachments(AgreementId, ContractType, ConstructionProjectId, true);
        }
    });

    $('body').on('click', '.AttachmentCreate', function (event) {

        var _this = $(this);
        var AgreementId = _this.attr('data-AgreementId');

        // If the clicked target is not inside related-group or related-child, close the last one
        if (!$(event.target).closest(".related-group, .related-child").length) {
            $(".related-child").removeClass("active"); // Hide all related-child rows smoothly
            $(".blur").removeClass("blur"); // Remove blur smoothly from unrelated-group elements
            $(".non-blur").removeClass("non-blur"); // Remove non-blur class
        }

        // Close any previously opened AddAttachmentForm
        $(".AddAttachmentForm").addClass("d-none");

        $('.contractAttachmentsModal').addClass("d-none");

        // Show the new AddAttachmentForm for the clicked AgreementId
        $('.AddAttachmentForm[data-AgreementId="' + AgreementId + '"]').removeClass("d-none");

        $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').removeClass("d-none");





    });


    //#region Toggle For Attachment Contract Conversation Modal
    $('body').on('click', '.AttachmentcontractConversationModalButton', function () {
        var _this = $(this);
        var AttachmentId = _this.attr('data-AttachmentId');

        if ($('.AttachmentcontractConversationModal[data-AttachmentId="' + AttachmentId + '"]').is(':visible')) {
            $('.agreementAttachments[data-AttachmentId="' + AttachmentId + '"]').toggleClass('backgroundToggle');
            $('.AttachmentcontractConversationModal[data-AttachmentId="' + AttachmentId + '"]').slideUp(500, function () {
                $(this).hide();

            });
        } else {
            $('.agreementAttachments[data-AttachmentId="' + AttachmentId + '"]').toggleClass('backgroundToggle');



            // Show modal and slide it down
            $('.AttachmentcontractConversationModal[data-AttachmentId="' + AttachmentId + '"]').stop(true, true).slideDown(500, function () {

            });

            // Remove old modal content if any and fetch new content
            $('.AttachmentcontractConversationModal[data-AttachmentId="' + AttachmentId + '"]').remove();
            getConversation(AttachmentId, "Attachments");
        }
    });
    //#endregion

    //#region getContract Conversation For Contract ConversationModal
    $('body').on('click', '.contractConversationModalButton', function () {

        //const modalDiv = document.getElementById("Contracts-ModalDiv");
        //modalDiv.style.overflowY = "auto"; // Enable scroll when hovering

        //modalDiv.addEventListener("mouseenter", () => {
        //    modalDiv.style.overflowY = "auto"; // Enable scroll when hovering
        //});

        //modalDiv.addEventListener("mouseleave", () => {
        //    modalDiv.style.overflowY = "auto"; // Maintain scroll
        //});
        //modalDiv.querySelectorAll("*").forEach((element) => {
        //    element.addEventListener("wheel", (event) => {
        //        event.stopPropagation();
        //    });
        //});
        var _this = $(this);
        var AgreementId = _this.attr('data-AgreementId');
        var Type = _this.attr('data-ContractType');

        // Kia We have Issue when Clicked on all object on Actions not gonna showing the Messages.
        if ($('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').css("display") === "block") {
            var button = $('.contractAttachmentModalsButton[data-AgreementId="' + AgreementId + '"]')[0];
            if (button) {
                button.click();
            } else {
                console.log("Button not found for AgreementId: " + AgreementId);
            }
        }
        if ($('.contractConversationModal[data-AgreementId="' + AgreementId + '"]').is(':visible')) {

            $('.contractConversationModal[data-AgreementId="' + AgreementId + '"]').slideUp(500, function () {
                $('.contractConversationModal[data-AgreementId="' + AgreementId + '"]').hide();
            });
            $('.contractConversationModal[data-AgreementId="' + AgreementId + '"]').remove()
        } else {
            getConversation(AgreementId, Type)
        }
    });

    //#endregion


    var addContractToggle = false;
    //#region Add Contract
    //$('body').on('click', '.addContractDiv', function (event) {
    //    const addContract = $('#addContract');




    //    if ($('#addContract').length) {
    //        $('#addContract').remove();

    //    }



    //    var _this = $(this);
    //    var ConstructionProjectId = _this.attr('data-ConstructionProjectId');
    //    var contractType = _this.attr('data-contractType');
    //$('#titelAndRecords').height('650px');

    //$('.contractLink[data-ConstructionProjectId="' + ConstructionProjectId + '"]')[0].click();




    //#region Get Contracts Data
    $('body').on('click', '.contractModalButton', function (event) {



        $('body').removeClass('fixModalPadding ');
        $('#addContract').remove();

        $('body').addClass('overflow-y-hidden');

        $('html').addClass('overflow-y-hidden');


        if (addContractToggle) {
            addContractToggle = false; // Set to false immediately to prevent multiple calls

            if ($('#addContract').length === 0) {
                // Create the #addContract element if it doesn't exist

                $('body').append('<div id="addContract">Your Content Here</div>');
            }

            $('#addContract').hide(0).fadeIn(0);
        } else {
            if ($('#addContract').length) {
                $('#addContract').remove(); // Remove if it exists
                addContractToggle = true; // Reset toggle
            }

        }
        var _this = $(this);

        var hasFile = true;
        if (typeof $(_this).data('hasfile') !== 'undefined') {
            if ($(_this).data('hasfile') == false) {
                hasFile = false;
            }
        }

        //$('#titelAndRecords').height('750px');

        var constructionProjectId = _this.attr('data-ConstructionProjectId');
        var contractType = _this.attr('data-contractType');
        getContracts(constructionProjectId, contractType, hasFile)
        $('.contractLink[data-ConstructionProjectId="' + constructionProjectId + '"]')[0].click();

    });
    //#endregion

    //#region DownloadFile ACtion
    $('body').on('click', '.downloadFile', function (e) {

        var _this = $(this);
        var FileId = _this.attr('data-FileId');
        var FileName = _this.attr('data-filename');
        var ConstructionProjectId = _this.attr('data-constructionProjectId');
        var ContractType = '';
        var Type = _this.attr('data-Type');
        if (Type === "Attachments") {
            ContractType += _this.attr('data-ContractType')
        }
        else {
            ContractType += Type;
        }
        var url = '/UserProjects/MyProjectsManagement/Download?fileName=' + FileName +
            '&constructionProjectId=' + ConstructionProjectId +
            '&fileId=' + FileId +
            '&type=' + Type;
        window.open(url, '_parent');



        if ($(window).width() < 825) {
            // This is gonna get icons and style to var
            var meye = '<span class="flex items-center justify-center status_accept text-success">' +
                '<svg width="22.2" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" -="" linecap="round" linejoin="round" icon="" name="eye" data="" lucide="eye" class="lucide lucide-eye"> <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"> </path><circle cx="12" cy="12" r="3"></circle> </svg>' +
                '</span>';
            // For smaller screens, find .m_status_project inside the closest tr
            _this.closest('.tr').find('.m_status_project .agreementIco').html(meye);
        } else {
            var eye = '<span class="flex items-center justify-center status_accept text-success">' +
                '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="eye" data-lucide="eye" class="lucide lucide-eye">' +
                '<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>' +
                '<circle cx="12" cy="12" r="3"></circle>' +
                '</svg>' +
                '</span>';
            // For larger screens, find .status_project inside the closest tr
            _this.closest('tr').find('.cl1 .status_project').html(eye);
        }




    });
    //#endregion

    //#region Toggle For Confirmation of Agreements And Attachments
    $('body').on('click', '.isConfirmToggle', function (e) {



        var _this = $(this);
        var targetId = _this.attr('data-TargetId');

        var baseContractType = _this.attr('data-ContractType')
        var contractType = '';
        var constructionProjectId = _this.attr('data-ConstructionProjectId');
        if (_this.hasClass('isAttachment')) {
            contractType += 'Attachments';
        }
        else {
            contractType += _this.attr('data-ContractType')
        }

        $('.confirmButton').off('click').on('click', function (e) {

            _this.closest('.isConfirmToggle').hide();
            const modal = document.querySelector('.popup-modal');

            // Check if the screen width is less than 825px
            if ($(window).width() < 825) {
                var mcheck = '<span class="m_isconfirm flex tooltip-container items-center justify-center text-success" href="javascript:;"><a class="font-medium  tooltip-text">تایید شده</a><i class="material-symbols-outlined">priority</i></span>';

                // For smaller screens, find .m_status_project inside the closest tr
                _this.closest('.tr').find('.m_status_project .m_isconfirm').html(mcheck);
            } else {
                var check = '<span class="m_isconfirm flex tooltip-container items-center justify-center text-success" href="javascript:;"><a class="font-medium  tooltip-text">تایید شده</a><i class="material-symbols-outlined ">priority</i></span>';

                // For larger screens, find .status_project inside the closest tr
                _this.closest('tr').find('.cl2 .status_project').html(check);
            }


            e.preventDefault();
            $.ajax({
                cache: false,
                type: "POST",
                url: "/UserProjects/MyProjectsManagement/ConfirmAgreementsAndAttachmentsByAggreementIdAndAttachmentId",
                data: { 'contractType': contractType, 'targetId': targetId },
                success: function (result) {
                    if (result === null || result === '' || result === undefined || result.length <= 0) {
                        $('#my-warning-modal').find('.modal-title').html('خطا');
                        $('#my-warning-modal').find('#error').html('خطا');
                        return $('#warningModal')[0].click();
                    }
                    $("button[data-tw-dismiss='modal']").click();

                    if (contractType === "Attachments") {
                        var target = $('.attachmentIsConfirmToggle[data-AttachmentId="' + targetId + '"]');
                        target.addClass('text-success');
                    }
                    else {
                        var target = $('.isConfirmToggle[data-TargetId="' + targetId + '"]');
                        target.addClass('text-success');
                    }
                }
            });

        });
    });
    // #endregion

    //#region upload Image In Submit New Contract
    //$('body').on('change', '#AddContractimageUpload', function () {
    //    var filePath = $(this).val();
    //    var fileName = filePath.replace(/^.*[\\\/]/, '');
    //    $('#AddContractSelected').remove()
    //    var str = ' <i class="material-symbols-outlined upload contractsIcons blackColor"  id="AddContractSelected">upload</i>';
    //    $('#addContractLable').append(str)
    //    tippy("#AddContractSelected",
    //        {
    //            interactive: true,
    //            content: fileName
    //        });
    //});
    ////#endregion

    //#region upload Image In Submit New Attachment

    let agreementIdAtt; // Global variable to store agreementId
    let xhr1; // Change to xhr1 for access in both functions

    document.addEventListener('change', function (event) {
        if (event.target.classList.contains('addAttachmentImageUpload')) {
            const fileInput = event.target;
            const file = fileInput.files[0];
            const counter = document.getElementById('counter'); // Define counter here

            // Retrieve agreementId from the data attribute of the input
            const _this = $(event.target);
            agreementIdAtt = _this.data('agreementid'); // Store agreementId globally
            const removeButton = document.getElementById('remove-button');
            const fileName = fileInput.value.replace(/^.*[\\\/]/, '');

            if (!isValidFileType(fileName)) {
                $('.attach_icon').removeClass('d-none');
                counter.textContent = 'این فرمت پشتیبانی نمیشود'; // Unsupported format message in Persian
                fileInput.value = ''; // Clear the input
                $('.addAttachmentLable[data-agreementid="' + agreementIdAtt + '"]').addClass('has-erorr-bg');
                if (removeButton) {
                    removeButton.style.display = 'none'; // Hide remove button immediately on error
                }
                return;
            }

            if (file) {
                const maxSizeInBytes = 2147483648; // 2GB in bytes
                if (file.size > maxSizeInBytes) {
                    counter.textContent = 'فایل انتخاب شده باید کوچکتر از 2GB باشد.'; // Error message in Persian
                    fileInput.value = '';
                    $('.attach_icon').removeClass('d-none');
                    $('.addAttachmentLable[data-agreementid="' + agreementIdAtt + '"]').addClass('has-erorr-bg');
                    if (removeButton) {
                        removeButton.style.display = 'none'; // Hide remove button immediately on size error
                    }
                    return;
                }

                if (removeButton) {
                    document.getElementById('fileNameuploaded').textContent = file.name;
                    removeButton.style.display = 'inline-block';
                }

                const formData = new FormData();
                formData.append('file', file);
                counter.textContent = 'در حال بارگذاری...';

                xhr1 = new XMLHttpRequest(); // Initialize xhr1 globally
                xhr1.open('POST', 'YOUR_UPLOAD_URL', true);

                xhr1.upload.addEventListener('progress', function (e) {
                    if (e.lengthComputable) {
                        const percentComplete = (e.loaded / e.total) * 100;
                        counter.textContent = `بارگذاری ${Math.round(percentComplete)}%`;
                        if (percentComplete === 100) counter.textContent = "فایل آپلود شد";
                        $('.attach_icon').addClass('d-none');
                        $('.addAttachmentLable[data-agreementid="' + agreementIdAtt + '"]').addClass('has-success-bg');
                        $('.addAttachmentLable[data-agreementid="' + agreementIdAtt + '"]').removeClass('has-erorr-bg');
                    }
                });

                xhr1.onerror = function () {
                    console.error('Upload Error:', xhr1.statusText);
                    counter.textContent = 'بارگذاری ناموفق';
                    $('.attach_icon').removeClass('d-none');

                    $('.addAttachmentLable[data-agreementid="' + agreementIdAtt + '"]').removeClass('has-erorr-bg');
                };

                xhr1.send(formData);
            }
        }
    });

    document.addEventListener('click', function (event) {
        if (event.target.id === 'remove-button') {
            event.preventDefault();
            $('.attach_icon').removeClass('d-none');
            const counter = document.getElementById('counter');
            const fileInput = document.querySelector('.addAttachmentImageUpload');

            if (xhr1) {
                xhr1.abort(); // Stop the ongoing upload
                counter.textContent = 'بارگذاری متوقف شد';
            }

            if (fileInput) {
                fileInput.value = ''; // Clear file input
                counter.textContent = 'انتخاب فایل';
                $('.addAttachmentLable[data-agreementid="' + agreementIdAtt + '"]').css('background-color', '#858585');
                $('.addAttachmentLable[data-agreementid="' + agreementIdAtt + '"]').removeClass('has-success-bg');

                document.getElementById('fileNameuploaded').textContent = ''; // Clear tooltip
                event.target.style.display = 'none'; // Hide remove button
            }
        }
    });


    //#endregion

    //#region Submit New Contract

    //#endregion
    $('body').on('click', '#SubmitNewContract', function (e) {

        e.preventDefault();
        const counter = document.getElementById('counter1');
        var filesElm = $('#AddContractimageUpload');
        var file = filesElm[0];
        var _this = $(this);
        var constructionProjectId = _this.attr('data-ConstructionProjectId');
        var contractType = _this.attr('data-contractType');
        var missingField = false;
        var AgreementId = _this.attr('data-AgreementId');
        var agreemetnTitle = $('#contracTitle').val();
        var agreemetnDescription = $('#contracDescrption').val();
        var hasFile = true;
        if (typeof $(_this).data('hasfile') !== 'undefined') {
            if ($(_this).data('hasfile') == false) {
                hasFile = false;
            }
        }

        if (hasFile == false)
            if (
                (agreemetnTitle == undefined) ||
                (agreemetnTitle == null) ||
                (agreemetnTitle.length == "") ||
                (agreemetnTitle.length < 1)
            ) {
                $('#contracTitle').addClass('has-error')
                $('#check-input').addClass('has-error-text')
                missingField = true;
                return;
            }

        var missingField = false;
        if (
            (agreemetnTitle == undefined) ||
            (agreemetnTitle == null) ||
            (agreemetnTitle.length == "") ||
            (agreemetnTitle.length < 1)
        ) {

            $('#contracTitle').addClass('has-error')
            $('#check-input').addClass('has-error-text')

            missingField = true;
        }
        else {
            $('#contracTitle').removeClass('has-error')
            $('#check-input').removeClass('has-error-text')

        }


        //if (hasFile == true)
        //     if(
        //    (agreemetnTitle == undefined) ||
        //    (agreemetnTitle == null) ||
        //    (agreemetnTitle.length == "") ||
        //    (agreemetnTitle.length < 1)
        //) {
        //    $('#contracTitle').addClass('has-error')
        //    $('#check-input').addClass('has-error-text')
        //    counter.textContent = 'عنوان قرارداد اجباریست'; // Error message for missing title
        //    $('#upload-button-text').addClass('has-erorr-bg'); // Set red background to indicate error
        //    missingField = true;
        //} else {
        //    $('#contracTitle').removeClass('has-error');
        //    $('#check-input').removeClass('has-error-text');
        //    $('#upload-button-text').removeClass('has-erorr-bg');
        //    counter.textContent = ''; // Clear the title error message if valid
        //}

        //var hasFile = true;
        //if (typeof $(_this).data('hasfile') !== 'undefined') {
        //    if ($(_this).data('hasfile') == false) {
        //        hasFile = false;
        //    }
        //}


        if (hasFile == true) {
            if (
                (file == null) ||
                (file.files[0] == null) ||
                (file.files[0].size == 0)
            ) {
                $('#AddContractLabel').addClass('has-erorr-bg');
                counter.textContent = 'آپلود فایل اجباریست'; // File upload is required

                missingField = true;

            } else if (file.files[0].size > 500 * 1024 * 1024) { // Check if file size is greater than 500 MB
                $('#AddContractLabel').addClass('has-erorr-bg');
                counter.textContent = 'حجم فایل باید کمتر از 500 مگابایت باشد.'; // File size restriction message
                isValid = false; // Mark as invalid
            } else if (!isValidFileType(file.files[0].name)) {
                $('#AddContractLabel').addClass('has-erorr-bg');
                $('#counter1').html("فرمت فایل مشکل داره:"); // Show invalid file type message
                missingField = true;
            }
            else if (!isValidFileType(file.files[0].name)) { // Check file type
                counter.textContent = 'فرمت این فایل پشتیبانی نمیشود.'; // Invalid file type message
                $('#AddContractLabel').addClass('has-erorr-bg');
                missingField = true;
            }
            else {
                counter.textContent = 'فایل آپلود شد'; // File upload success message
                $('#AddContractLabel').removeClass('has-erorr-bg');



            }
        }
        if (missingField === true) {
            return;
        }



        var formData = new FormData();

        if (hasFile == true) {
            if (file != null) {
                if (file.files[0] != null) {

                    if (file.files[0].size > 0) {
                        formData.append('File', file.files[0]);
                    }
                }
            }
        }

        formData.append('AgreementTitle', agreemetnTitle);
        formData.append('AgreementDescription', agreemetnDescription);
        formData.append('ConstructionProjectId', constructionProjectId);
        formData.append('ContractType', contractType);




        $.ajax({
            cache: false,
            type: "POST",
            url: "/UserProjects/MyProjectsManagement/AddAgreement",
            data: formData,
            processData: false,
            contentType: false,
            success: function (result) {

                const addContract = $('#addContract');


                // If screen width is 825px or less, render the responsive DOM
                if (window.innerWidth <= 825) {

                    const addContract = $('#addContract');
                    $('#togglecreate').css('transform', 'rotate(0deg)');
                    if (result === null || result === '' || result === undefined || result.length <= 0) {
                        $('#my-warning-modal').find('.modal-title').html('خطا');
                        $('#my-warning-modal').find('#error').html('خطا');
                        return $('#warningModal')[0].click();
                    }
                    addContract.fadeOut(500).hide();

                    // Todo For Change Agreement Circle

                    var CircleLocation = $('.' + contractType + 'Circles' + '[data-constructionprojectid="' + constructionProjectId + '"]');
                    var circleCount = CircleLocation.find('.attachments').length;
                    $(CircleLocation).html('')
                    var circles = generateAgreementCircles(circleCount + 1);
                    $(CircleLocation).append(circles)
                    //

                    let contractsAttachmentsCircles = '';
                    var recordsStr =



                        '<div class="unrelated-group Contract grid grid-cols-12 gap-x-6 flex bg-slate-100 scrollbox-overflowed tr" data-AgreementId="' + result.Record.AgreementId + '">'
                        +
                        //'<div class="ContractTitle col-span-12 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center"></div>'

                        '<div class="cl1 cl1_value tooltip-container1 col-span-9 mt-3 mb-3 sm:col-span-9 xs:col-span-9 text-right">' +
                        '<a class="font-normal tooltip-text1">'
                        +
                        (result.Record.AgreementTitle === null ||
                            result.Record.AgreementTitle === undefined ||
                            result.Record.AgreementTitle === ''
                            ? '' :
                            result.Record.AgreementTitle)
                        +

                        '</a></div>'

                        +

                        '<div class="m_status_project col-span-3 mt-3 sm:col-span-3 sm:text-left xs:col-span-3 xs:text-left text-center">'
                        +

                        ((result.Record.IsView === null ||
                            result.Record.IsView === false ||
                            result.Record.IsView === '' ||
                            result.Record.IsView === undefined
                        )
                            ? '<span class="flex items-center justify-center  status_accept text-danger agreementIco" data-AgreementId="' + result.Record.AgreementId + '">' + '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" icon-name="eye-off" data-lucide="eye-off" class="lucide lucide-eye-off block"><path d="M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>' + '</span>'
                            : '<span class="flex items-center justify-center  status_accept text-success">' + '<svg width = "22.2" height = "24" viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke-width="2" stroke - linecap="round" stroke - linejoin="round" icon - name="eye" data - lucide="eye" class="lucide lucide-eye" > <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" > </path><circle cx="12" cy="12" r="3"></circle > </svg>' + '</span>'
                        )
                        +


                        ((result.Record.IsConfirm === null ||
                            result.Record.IsConfirm === false ||
                            result.Record.IsConfirm === '' ||
                            result.Record.IsConfirm === undefined
                        )
                            ? '<span class="m_isconfirm flex tooltip-container items-center justify-center text-deactive" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '"  data-ContractType="' + result.Record.AgreementType + '"  data-TargetId="' + result.Record.AgreementId + '"><a class="font-medium tooltip-text">تایید نشده</a><i class="material-symbols-outlined w-5 h-5 contractsIcons"> priority </i></span></td>'
                            : '<span class="m_isconfirm flex tooltip-container items-center justify-center text-success" href="javascript:;"><a class="font-medium  tooltip-text">تایید شده</a><i class="material-symbols-outlined">priority</i>'
                        )
                        +
                        '</div>'

                        +


                        //'<div id="mdescription" class="mcl4 mcl4_value tooltip-container1 ContractTitle col-span-12 sm:col-span-7 xs:col-span-5 text-right whitespace-nowrap justify-center">توضیحات</div>'

                        '<div id="mdescription" class="font-light tooltip-text1 tooltip-container1  col-span-12 mt-1  sm:col-span-12 xs:col-span-12 text-right whitespace-nowrap justify-right">' +
                        '<a class="font-light tooltip-text1">' +
                        (result.Record.AgreementDescription === null ||
                            result.Record.AgreementDescription === undefined ||
                            result.Record.AgreementDescription === ''
                            ? '' :
                            result.Record.AgreementDescription)
                        +


                        '</a></div>'
                        +


                        '<div id="maction" class="mcl5  mcl5_value col-span-2 sm:col-span-12 sm:text-left xs:col-span-12 xs:text-left text-center" id="action">' +
                        '<a class="intro-x w-8 h-8 contractConversationModalButton flex items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-ContractType="' + result.Record.AgreementType + '"  data-AgreementId="' + result.Record.AgreementId + '">' +
                        '<i class="material-symbols-outlined action_icons">chat</i>' +
                        '<span class="tooltip-text">مکاتبه</span>' +
                        ((result.Record.ConversationIsReadCount > 0)

                            ? '<div data-AgreementId="' + result.Record.AgreementId + '"  class="Viewcount"> ' + result.Record.ConversationIsReadCount + ' </div>'
                            : ''

                        )
                        +
                        '</a>'
                        +
                        ((result.Record.IsConfirm === null ||
                            result.Record.IsConfirm === false ||
                            result.Record.IsConfirm === '' ||
                            result.Record.IsConfirm === undefined
                        )
                            ? '<a class="m_isconfirm intro-x w-8 h-8 flex popup-btn isConfirmToggle items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '"  data-ContractType="' + result.Record.AgreementType + '"  data-TargetId="' + result.Record.AgreementId + '">' +
                            '<i class="material-symbols-outlined action_icons">check</i>' +
                            '<span class="tooltip-text">تاییدیه</span>' +
                            '</a>'
                            : ''
                        )
                        +
                        '<a class="intro-x w-8 h-8 flex items-center downloadFile justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-AgreementId="' + result.Record.AgreementId + '" data-fileName="' + result.Record.AgreementFilePath + '" data-FileId="' + result.Record.AgreementId + '" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '" data-Type="' + result.Record.AgreementType + '" >' +
                        '<i class="material-symbols-outlined action_icons">download</i>' +
                        '<span class="tooltip-text">' + result.Record.AgreementTitle + '</span>' +
                        '</a>' +

                        '<a class="AttachmentCreate AddAttachment intro-x w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '" data-ContractType="' + result.Record.AgreementType + '"  data-AgreementId="' + result.Record.AgreementId + '" data-AgreementId="' + result.Record.AgreementId + '">' +
                        '<i class="material-symbols-outlined action_icons">add</i>' +
                        '<span class="tooltip-text">اضافه کردن الحاقیه</span></a>' +


                        //'<div class="requestItemFileTitle col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 pr-5 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >عنوان</div></div></div>'
                        //+
                        '</a>';
                    $('#Records').prepend(recordsStr);
                    currentPage = 1; // Reset the page to the first
                    setupPagination();


                    if (hasFile == false) {
                        $('.m_status_project').remove();
                        $('.downloadFile').remove();
                        $('.AddAttachment').remove();
                        $('.isConfirmToggle').remove();
                        $('#mdescription').remove();
                        $('.cl1_value').removeClass('sm:col-span-9').addClass('sm:col-span-9');
                        $('.mcl5_value').removeClass('sm:col-span-12').addClass('sm:col-span-3');
                        $('.cl1_value').removeClass('mb-3');
                        $('.cl1_value').removeClass('mt-3');
                        $('.tr').css('padding-top', '0.75rem!important');
                        $('.unrelated-group').css('min-height', 'unset');
                        $('.unrelated-group').css('align-items', 'center');
                    }
                    else {
                        $('.m_status_project').show();
                        $('.downloadFile').show();
                        $('.AddAttachment').show();
                        $('.isConfirmToggle').show()
                        $('#mdescription').show();

                    }
                    var tooltipElements = document.querySelectorAll('.tooltip-container1 .tooltip-text1');

                    tooltipElements.forEach(function (el) {
                        var text = el.textContent.trim(); // Get the text content
                        var container = el.closest('.tooltip-container1'); // Parent container

                        var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                        var maxHeight = lineHeight * 2; // Maximum height for 1 line

                        // Check if text is overflowing or exceeds 85 characters
                        var cl1ValueElement = container.querySelector('.cl1_value a');
                        var cl1ValueText = cl1ValueElement ? cl1ValueElement.textContent.trim() : '';

                        if (el.scrollHeight > maxHeight || text.length > 85 || (cl1ValueElement && cl1ValueText.length > 29)) {
                            // Set z-index only for the current container
                            container.style.zIndex = '1000';

                            // Add a custom tooltip dynamically on hover
                            container.addEventListener('mouseenter', function () {
                                var tooltip = document.createElement('div');
                                tooltip.className = 'custom-tooltip'; $('.mcl5_value').css('z-index', '1');

                                tooltip.textContent = text.length > 85 ? text : cl1ValueText; // Use the appropriate text
                                container.appendChild(tooltip);
                            });

                            container.addEventListener('mouseleave', function () {

                                // Remove the tooltip when the mouse leaves
                                var tooltip = container.querySelector('.custom-tooltip'); $('.mcl5_value').css('z-index', '9999');

                                if (tooltip) {
                                    tooltip.remove();
                                }
                            });
                        } else {
                            // Reset z-index for non-overflowing containers
                            container.style.zIndex = '';
                        }
                    });

                }
                else {






                    $('#togglecreate').css('transform', 'rotate(0deg)');




                    if (result === null || result === '' || result === undefined || result.length <= 0) {
                        $('#my-warning-modal').find('.modal-title').html('خطا');
                        $('#my-warning-modal').find('#error').html('خطا');
                        return $('#warningModal')[0].click();
                    }
                    addContract.fadeOut(500).hide();

                    // Todo For Change Agreement Circle

                    var CircleLocation = $('.' + contractType + 'Circles' + '[data-constructionprojectid="' + constructionProjectId + '"]');
                    var circleCount = CircleLocation.find('.attachments').length;
                    $(CircleLocation).html('')
                    var circles = generateAgreementCircles(circleCount + 1);
                    $(CircleLocation).append(circles)
                    //

                    let contractsAttachmentsCircles = '';

                    var recordsStr =

                        '<tr class="unrelated-group Contract"  data-AgreementId="' + result.Record.AgreementId + '" >' +
                        ' <td class="cl1 cl1_value">' +
                        '<div class="status_project">'
                        +
                        ((result.Record.IsView === null ||
                            result.Record.IsView === false ||
                            result.Record.IsView === '' ||
                            result.Record.IsView === undefined
                        )
                            ? '<span class="flex items-center justify-center  status_accept text-danger agreementIco" data-AgreementId="' + result.Record.AgreementId + '">' + '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" icon-name="eye-off" data-lucide="eye-off" class="lucide lucide-eye-off block mx-auto"><path d="M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>' + '</span></div>'
                            : '<span class="flex items-center justify-center  status_accept text-success">' + '<svg width = "22.2" height = "22.5" viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke-width="2" stroke - linecap="round" stroke - linejoin="round" icon - name="eye" data - lucide="eye" class="lucide lucide-eye" > <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" > </path><circle cx="12" cy="12" r="3"></circle > </svg>' + '</span>'
                        )
                        +
                        ' </td>' +
                        '<td class="cl2 cl2_value">' +
                        '<div class="status_project">'
                        +
                        ((result.Record.IsConfirm === null ||
                            result.Record.IsConfirm === false ||
                            result.Record.IsConfirm === '' ||
                            result.Record.IsConfirm === undefined
                        )
                            ? '<span class="flex tooltip-container items-center justify-center text-deactive" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '"  data-ContractType="' + result.Record.AgreementType + '"  data-TargetId="' + result.Record.AgreementId + '""><a class="font-medium tooltip-text">تایید نشده</a><i class="material-symbols-outlined w-5 h-5 contractsIcons"> priority </i></span></td>'
                            : '<span class="flex tooltip-container items-center justify-center text-success"><a class="font-medium tooltip-text">تایید شده</a><i class="material-symbols-outlined">priority</i>'
                        )
                        +
                        '<td class="cl3 cl3_value tooltip-container1">' +
                        '<a class="font-normal tooltip-text1">'
                        +
                        (result.Record.AgreementTitle === null ||
                            result.Record.AgreementTitle === undefined ||
                            result.Record.AgreementTitle === ''
                            ? '-' :
                            result.Record.AgreementTitle)
                        +
                        '</a>' +
                        '</td>' +
                        '<td class="cl4 cl4_value tooltip-container1" id="description">' +
                        '<a class="font-light tooltip-text1">' +
                        (result.Record.AgreementDescription === null ||
                            result.Record.AgreementDescription === undefined ||
                            result.Record.AgreementDescription === ''
                            ? '-' :
                            result.Record.AgreementDescription)
                        +
                        '</a>' +
                        '</td>' +
                        ' <td class="cl5  cl5_value" id="action">' +
                        '<a class="intro-x w-8 h-8 contractConversationModalButton flex items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container" data-ContractType="' + result.Record.AgreementType + '"  data-AgreementId="' + result.Record.AgreementId + '">' +
                        '<i class="material-symbols-outlined action_icons">chat</i>' +
                        '<span class="tooltip-text">مکاتبه</span>' +
                        ((result.Record.ConversationIsReadCount > 0)

                            ? '<div data-AgreementId="' + result.Record.AgreementId + '"  class="Viewcount"> ' + result.Record.ConversationIsReadCount + ' </div>'
                            : ''

                        )
                        +
                        '</a>'
                        +
                        ((result.Record.IsConfirm === null ||
                            result.Record.IsConfirm === false ||
                            result.Record.IsConfirm === '' ||
                            result.Record.IsConfirm === undefined
                        )
                            ? '<a class="intro-x w-8 h-8 flex popup-btn isConfirmToggle items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '"  data-ContractType="' + result.Record.AgreementType + '"  data-TargetId="' + result.Record.AgreementId + '">' +
                            '<i class="material-symbols-outlined action_icons">check</i>' +
                            '<span class="tooltip-text">تاییدیه</span>' +
                            '</a>'
                            : ''
                        )
                        +
                        '<a class="intro-x w-8 h-8 flex items-center downloadFile justify-center rounded-full bg-primary text-white ml-2 tooltip-container" data-AgreementId="' + result.Record.AgreementId + '" data-fileName="' + result.Record.AgreementFilePath + '" data-FileId="' + result.Record.AgreementId + '" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '" data-Type="' + result.Record.AgreementType + '" >' +
                        '<i class="material-symbols-outlined action_icons">download</i>' +
                        '<span class="tooltip-text">' + result.Record.AgreementTitle + '</span>' +
                        '</a>' +
                        '<a class="AttachmentCreate AddAttachment intro-x w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '" data-ContractType="' + result.Record.AgreementType + '"  data-AgreementId="' + result.Record.AgreementId + '" data-AgreementId="' + result.Record.AgreementId + '">' +
                        '<i class="material-symbols-outlined action_icons">add</i>' +
                        '<span class="tooltip-text">اضافه کردن الحاقیه</span>' +

                        '</div>'
                        +
                        //'<div class="requestItemFileTitle col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 pr-5 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >عنوان</div></div></div>'
                        //+
                        '</a>' +
                        '</td>' +
                        '</tr>';
                    $('#Records').prepend(recordsStr);
                    currentPage = 1; // Reset the page to the first
                    setupPagination();
                    if (hasFile == false) {




                        $('#titelAndRecords th:nth-child(1)').hide();
                        $('#titelAndRecords th:nth-child(2)').hide();
                        $('#titelAndRecords th:nth-child(4)').hide();
                        $('.cl5_value a:nth-child(2)').hide();
                        $('.cl5_value a:nth-child(3)').hide();
                        $('.cl1_value').hide();
                        $('.cl2_value').hide();
                        $('.cl4_value').hide();
                        $('.AttachmentCreate').hide();
                        $('.tablerecord tr').addClass('hasfilefalsetr');
                        $('#titelAndRecords tr').addClass('hasfilefalseth');


                        //$('#titelAndRecords').find('.grid').find(':nth-child(4)').html('');
                        $('#titelAndRecords').find('cl5');
                    }
                    else {


                        $('#titelAndRecords th:nth-child(1)').show();
                        $('#titelAndRecords th:nth-child(2)').show();
                        $('#titelAndRecords th:nth-child(4)').show();
                        $('.cl5_value a:nth-child(2)').show();
                        $('.cl5_value a:nth-child(3)').show();
                        $('.cl1_value').show();
                        $('.cl2_value').show();
                        $('.cl4_value').show();
                        $('.tablerecord tr').removeClass('hasfilefalsetr');
                        $('#titelAndRecords tr').removeClass('hasfilefalseth');
                        //$('#titelAndRecords').find('.grid').find(':nth-child(4)').html('');

                        $('#titelAndRecords').find('cl5');
                    }

                    var cl1ValueElement = document.querySelectorAll('.cl3_value a');

                    cl1ValueElement.forEach(function (el) {
                        var text = el.textContent.trim(); // Get the text content
                        var container = el.closest('.tooltip-container1'); // Parent container

                        var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                        var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                        // Only show tooltip if text is overflowing or exceeds specific character limits
                        if (text.length > 60) {
                            container.style.zIndex = '1000'; // Set z-index for overflowing content

                            container.addEventListener('mouseenter', function () {
                                var tooltip = document.createElement('div');
                                tooltip.className = 'custom-tooltip';

                                tooltip.textContent = text; // Add the text content to the tooltip
                                container.appendChild(tooltip);
                            });

                            container.addEventListener('mouseleave', function () {
                                var tooltip = container.querySelector('.custom-tooltip');
                                if (tooltip) {
                                    tooltip.remove();
                                }
                            });
                        } else {
                            container.style.zIndex = ''; // Reset z-index for non-overflowing containers
                        }
                    });

                    var tooltipElements = document.querySelectorAll('.cl4_value a');

                    tooltipElements.forEach(function (el) {
                        var text = el.textContent.trim(); // Get the text content
                        var container = el.closest('.tooltip-container1'); // Parent container

                        var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                        var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                        // Only show tooltip if text is overflowing or exceeds specific character limits
                        if (text.length > 85) {
                            container.style.zIndex = '1000'; // Set z-index for overflowing content

                            container.addEventListener('mouseenter', function () {
                                var tooltip = document.createElement('div');
                                tooltip.className = 'custom-tooltip';
                                tooltip.textContent = text; // Add the text content to the tooltip
                                container.appendChild(tooltip);
                            });

                            container.addEventListener('mouseleave', function () {

                                var tooltip = container.querySelector('.custom-tooltip');
                                if (tooltip) {
                                    tooltip.remove();
                                }
                            });
                        } else {
                            container.style.zIndex = ''; // Reset z-index for non-overflowing containers
                        }
                    });


                }





                //$(".tooltip").each(function () {
                //    tippy(this, {
                //        interactive: true,
                //        content: $(this).attr("data-tooltip")
                //    });





                $('.addContractDiv').off('click').on('click', function () {



                    const togglecreate = $('#togglecreate');
                    const _this = $(this);
                    const ConstructionProjectId = _this.attr('data-ConstructionProjectId');
                    const contractType = _this.attr('data-contractType');

                    if (addContract.length) {
                        togglecreate.css('transform', 'rotate(0deg)');
                        addContract.remove();

                    } else {

                        togglecreate.css('transform', 'rotate(45deg)');

                        // Open contractLink with matching ConstructionProjectId
                        $('.contractLink[data-ConstructionProjectId="' + ConstructionProjectId + '"]').get(0).click();

                        // Add #addContract form
                        const addContractStr = `
                                                                                                                       <form class="flex AddAttachmentForm" id="addContract">
                                                                                                                    <label class="custom-field two" id="title-add">
                                                                                                                        <input id="contracTitle" class="addAttachmentTitle" placeholder="&nbsp;"/>
                                                                                                                                     <span class="placeholder" id="check-input">  عنوان ${mynewdata} وارد کنید </span>

                                                                                                                        <span class="border"></span>
                                                                                                                    </label>
                                                                                                                    <label class="custom-field two" id="description-add">
                                                                                                                        <input id="contracDescrption" placeholder="&nbsp;" class="addAttachmentDescrption"/>
                                                                                                                            <span class="placeholder">توضیحات ${mynewdata} را وارد کنید</span>
                                                                                                                    </label>
                                                                                                                    <label for="AddContractimageUpload" class="upload-button-text AddContractimageUpload" id="AddContractLabel">
                                                                                                                        <span id="counter1">انتخاب فایل</span>
                                                                                                                        <svg> <!-- SVG Path --> </svg>
                                                                                                                    </label>
                                                                                                                    <div class="submitarea">
                                                                                                                        <input id="AddContractimageUpload" class="d-none drop-here Contract_new1" type="file" name="file" />
                                                                                                                        <i id="remove-button1" class="material-symbols-outlined tooltip-container">close
                                                                                                                            <span class="tooltip-text" id="fileNameuploaded1">Filename</span>
                                                                                                                        </i>
                                                                                                                        <button class="btn btn-primary uplodaButtonMargin" data-ConstructionProjectId="${ConstructionProjectId}" data-contractType="${contractType}" id="SubmitNewContract">بارگذاری</button>
                                                                                                                    </div>
                                                                                                                </form>`;

                        $('.contractsModalTitle').after(addContractStr);


                    }
                    $('.addContractDiv').css('pointer-events', 'auto');



                    $('#togglecreate').css('transform', 'rotate(0deg)');


                    // Handle `data-hasfile` logic
                    if (typeof _this.attr('data-hasfile') !== 'undefined') {
                        const hasFile = _this.attr('data-hasfile') === 'false';
                        if (hasFile) {
                            $('#Contracts-ModalDiv').find('#contracDescrption, #AddContractLabel').remove();
                            $('#Contracts-ModalDiv').find('.uplodaButtonMargin').html('ثبت').attr('data-hasfile', false);

                        } else {
                            $('#Contracts-ModalDiv').find('.uplodaButtonMargin').html('ثبت').attr('data-hasfile', true);

                        }
                    }
                });
                //#endregion


                // Reset any specific styles or data attributes if needed



                //if (result.Records != null)
                //    if (result.Records != undefined)
                //        if (result.Records.length > 0) {
                //            ////$('body').removeClass('fixModalPadding');
                //            $('#titelAndRecords').scrollbox({
                //            });
                //            $('#titelAndRecords').data('scrollbox').update();
                //        }






                $(".tooltip").each(function () {
                    tippy(this, {
                        interactive: true,
                        content: $(this).attr("data-tooltip")
                    });
                });

                //$('#titelAndRecords').scrollbox('destroy');
                ////$('#titelAndRecords').height('750px');
                //$('#titelAndRecords').scrollbox({});

            }
        });


    });

    $('body').on('click', '.addContractDiv', function () {



        const addContract = $('#addContract');
        const togglecreate = $('#togglecreate');
        const _this = $(this);
        const ConstructionProjectId = _this.attr('data-ConstructionProjectId');
        const contractType = _this.attr('data-contractType');

        const $modal = $(".contractAttachmentsModal");

        let trElements = document.querySelectorAll('.related-group, .Contract');

        // Filter out elements with the 'blur' class
        let filteredElements = Array.from(trElements).filter(el => !el.classList.contains('blur'));

        // Assign filteredElements to _this1
        let _this1 = filteredElements;

        // Get the 'data-AgreementId' attribute from the first element in _this1 if it exists
        let AgreementId = _this1.length > 0 ? _this1[0].getAttribute('data-AgreementId') : null;

        console.log('AgreementId:', AgreementId);

        // Check if any element in trElements has the class 'blur'
        let hasBlur = Array.from(trElements).some(el => el.classList.contains('blur'));

        console.log('Has blur:', hasBlur);

        if (hasBlur) {
            $(".related-child").removeClass("active"); // Hide all related-child rows smoothly
            $(".blur").removeClass("blur"); // Remove blur smoothly from unrelated-group elements
            $(".non-blur").removeClass("non-blur"); // Remove non-blur class


            if ($('.contractConversationModal[data-AgreementId="' + AgreementId + '"]').css("display") === "block") {
                $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').hide();
                $('.contractAttachmentsClass').remove();
                $('.contractConversationModalButton[data-AgreementId="' + AgreementId + '"]')[0].click();
            }

            if ($('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').is(':visible')) {
                $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').slideUp(500, function () {
                    $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').hide();
                    $('.contractAttachmentsClass').remove();
                    $('.AddAttachment[data-AgreementId="' + AgreementId + '"] i').css('transform', 'rotate(0deg)');
                });
            }

        }



        // Check if the modal's style includes "display: block"
        if ($modal.css("display") === "block") {
            // Get the data-agreementid of the modal
            const agreementId = $modal.data("agreementid");

            // Find the AttachmentCreate element above with the same data-agreementid
            const $attachmentCreate = $(`.AttachmentCreate[data-agreementid='${agreementId}']`);

            // Find the closest <i> tag and apply the CSS
            const $icon = $attachmentCreate.find(".action_icons");
            $icon.css("transform", "rotate(0deg)");

        }



        $(".AddAttachmentForm").addClass("d-none");

        $('.contractAttachmentsModal').addClass("d-none");
        if (addContract.length) {
            togglecreate.css('transform', 'rotate(0deg)');
            addContract.remove();
        } else {
            togglecreate.css('transform', 'rotate(45deg)');

            // Open contractLink with matching ConstructionProjectId
            $('.contractLink[data-ConstructionProjectId="' + ConstructionProjectId + '"]').get(0).click();
            const mynewdata = $('#Contracts-ModalDiv').data('mynewdata');

            // Add #addContract form
            const addContractStr = `
                                                                                                            <form class="flex AddAttachmentForm" id="addContract">
                                                                                                                <label class="custom-field two" id="title-add">
                                                                                                                    <input id="contracTitle" class="addAttachmentTitle" placeholder="&nbsp;"/>
                                                                                                                                 <span class="placeholder" id="check-input">  عنوان ${mynewdata} وارد کنید </span>

                                                                                                                    <span class="border"></span>
                                                                                                                </label>
                                                                                                                <label class="custom-field two" id="description-add">
                                                                                                                    <input id="contracDescrption" placeholder="&nbsp;" class="addAttachmentDescrption"/>
                                                                                                                        <span class="placeholder">توضیحات ${mynewdata} را وارد کنید</span>
                                                                                                                </label>


                                                                                          <div class="action_value">
                                                                                                <a id="SubmitNewContract" class="intro-x w-8 h-8 flex items-center justify-center rounded-full SubmitNewAttachment uplodaButtonMargin AttachmentcontractConversationModalButton bg-primary text-white ml-2 tooltip-container" data-ConstructionProjectId="${ConstructionProjectId}" data-contractType="${contractType}">
                                                                                        <i class="material-symbols-outlined action_icons">upload</i>
                                                                                            <span class="tooltip-text" id="op2">بارگذاری</span></a>
                                                                                        <label id="AddContractLabel" for="AddContractimageUpload" class="rounded-full w-8 h-8 flex items-center justify-center bg-primary text-white tooltip-container addAttachmentLable" id="upload-button-text" data-AgreementId="' + AgreementId + '"> <span id="counter1" class="tooltip-text">انتخاب فایل</span>
                                                                                        <i class="material-symbols-outlined action_icons attach_icon">attach_file</i>
                                                                                            <i id="remove-button1" class="material-symbols-outlined tooltip-container">close<span class="tooltip-text d-none" id="fileNameuploaded1">Filename</span></i>
                                                                                        </label>
                                                                                            <input id="AddContractimageUpload" class="d-none drop-here Contract_new1" type="file" name="file" />
                                                                                        </div>





                                                                                                            </form>`;

            $('.contractsModalTitle').after(addContractStr);

            var tooltipElements = document.querySelectorAll('.tooltip-container1 .tooltip-text1');

            tooltipElements.forEach(function (el) {
                var text = el.textContent.trim(); // Get the text content
                var container = el.closest('.tooltip-container1'); // Parent container

                var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                if (el.scrollHeight > maxHeight) {
                    // Set z-index only for the current container
                    container.style.zIndex = '1000';
                }

                // Check if text is overflowing
                if (el.scrollHeight > el.clientHeight) {
                    // Add a custom tooltip dynamically on hover
                    container.addEventListener('mouseenter', function () {
                        var tooltip = document.createElement('div');
                        tooltip.className = 'custom-tooltip'; $('.mcl5_value').css('z-index', '1');
                        tooltip.textContent = text;
                        container.appendChild(tooltip);
                    });

                    container.addEventListener('mouseleave', function () {
                        // Remove the tooltip when the mouse leaves
                        var tooltip = container.querySelector('.custom-tooltip'); $('.mcl5_value').css('z-index', '9999');
                        if (tooltip) {
                            tooltip.remove();
                        }
                    });
                } else {
                    // Reset z-index for non-overflowing containers
                    container.style.zIndex = '';
                }
            });
        }

        // Handle `data-hasfile` logic
        if (typeof _this.attr('data-hasfile') !== 'undefined') {
            const hasFile = _this.attr('data-hasfile') === 'false';
            if (hasFile) {
                $('#Contracts-ModalDiv').find('#description-add').remove();
                $('#Contracts-ModalDiv').find('#AddContractLabel').remove();
                $('#Contracts-ModalDiv').find('.uplodaButtonMargin').attr('data-hasfile', false);

                $('#Contracts-ModalDiv').find('#op2').html('ثبت');
            } else {
                $('#Contracts-ModalDiv').find('#op2').html('ثبت');
                $('#Contracts-ModalDiv').find('.uplodaButtonMargin').attr('data-hasfile', true);
            }
        }
    });
    //#endregion

    //#region Onclose Modal 2 - ContractModals
    $('body').on('click', '#contractsModal', function () {
        var modal = $('#contractsModal').hasClass('show');
        if (!modal) {
            $('body').removeClass('fixModalPadding');
            $('body').removeClass('overflow-y-hidden');


            $('html').removeClass('overflow-y-hidden');
        }
        else {



            $('html').addClass('overflow-y-hidden');
        }
    });

    $('body').on('click', '#Total-Public-Cost', function () {

        var modal = $('#Total-Public-Cost').hasClass('show');
        if (!modal) {
            $('body').removeClass('fixModalPadding');
            $('body').removeClass('overflow-y-hidden');


            $('html').removeClass('overflow-y-hidden');
        }

        else {
            $('body').addClass('fixModalPadding');
            $('body').addClass('overflow-y-hidden');

            $('html').addClass('overflow-y-hidden');
        }
    });

    $('body').on('click', '#Share-Of-The-General-Cost', function () {
        var modal = $('#Share-Of-The-General-Cost').hasClass('show');
        if (!modal) {
            $('body').removeClass('fixModalPadding');
            $('body').removeClass('overflow-y-hidden');


            $('html').removeClass('overflow-y-hidden');
        }
        else {
            $('body').addClass('fixModalPadding');
            $('body').addClass('overflow-y-hidden');

            $('html').addClass('overflow-y-hidden');
        }
    });

    $('body').on('click', '#Paid-Share-Of-The-Project', function () {
        var modal = $('#Paid-Share-Of-The-Project').hasClass('show');
        if (!modal) {
            $('body').removeClass('fixModalPadding');
            $('body').removeClass('overflow-y-hidden');


            $('html').removeClass('overflow-y-hidden');
        }
        else {
            $('body').addClass('fixModalPadding');
            $('body').addClass('overflow-y-hidden');

            $('html').addClass('overflow-y-hidden');
        }
    });



    //#endregion

    //#region  Attachment Create Status Create / Reject






    // AttachmentCreate: Shows the form and hides the AddAttachment button



    //#endregion

    //#region Send Message For Conversation
    $('body').on('click', '.sendMessage', function (e) {
        e.preventDefault();

        var _this = $(this);
        var contractType = _this.attr('data-contractType');
        var agreementId = _this.attr('data-AgreementId');
        var chatMessage = '';
        if (contractType == "Attachments") {
            chatMessage = $('.attachmentMessage[data-AgreementId="' + agreementId + '"]').val();
        }
        else {
            chatMessage = $('.messageClass[data-AgreementId="' + agreementId + '"]').val();
        }
        var formData = new FormData();
        formData.append('ConversationLogsVM.ConversationLogDescription', chatMessage);
        formData.append('ConversationLogsVM.RecordId', agreementId);
        formData.append('ConversationLogsVM.TableTitle', contractType);
        $.ajax({
            cache: false,
            type: "POST",
            url: "/UserProjects/MyProjectsManagement/AddToConversationLogs",
            data: formData,
            processData: false,
            contentType: false,

            success: function (result) {

                if (result === null || result === '' || result === undefined || result.length <= 0) {
                    $('#my-warning-modal').find('.modal-title').html('خطا');
                    $('#my-warning-modal').find('#error').html('خطا');
                    return $('#warningModal')[0].click();
                }
                let adminBadge = '';
                var Family = result.Record.CustomUsersVM.Family;
                var Name = result.Record.CustomUsersVM.Name;
                var Picture = result.Record.CustomUsersVM.Picture;
                var Userid = result.Record.CustomUsersVM.UserId;
                var imageSrcProfile = Picture ? `../../Files/UserFiles/localhost/${Userid}/${Picture}` : "/images/profileImage.png";

                if (Family == 'admin' || name == 'admin') {
                    Name = ''; // Use '=' for assignment
                    Family = ''; // Use '=' for assignment
                    imageSrcProfile = "../../Enigma v1.0.5/dist/images/new logo.png";
                    adminBadge = '<img class="badge bg-red-500 ml-2 px-2 py-1 rounded" src="../../Enigma v1.0.5/dist/images/new logo.png">پشتیبان وب سایت</img>';
                }

                var newChat =

                    '<div class="chat__box__text-box flex items-end justify-end items-center mb-4"> '
                    +
                    '    <div class="hidden sm:block dropdown mr-3 my-auto"> <a href="javascript:;"'
                    +
                    '            class="dropdown-toggle w-4 h-4 text-slate-500" aria-expanded="false" data-tw-toggle="dropdown">'
                    +
                    '            <i data-lucide="more-vertical" class="w-4 h-4"></i> </a>'
                    +
                    '        <div class="dropdown-menu w-40">'
                    +
                    '<ul class="dropdown-content"><li>'
                    +
                    '<a href="javascript:;" class="dropdown-item"> <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="corner-up-left" data-lucide="corner-up-left" class="lucide lucide-corner-up-left w-4 h-4 mr-2"><polyline points="9 14 4 9 9 4"></polyline><path d="M20 20v-7a4 4 0 00-4-4H4"></path></svg> پاسخ </a></li><li><a href="javascript:;" class="dropdown-item">'
                    +
                    ' <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="trash" data-lucide="trash" class="lucide lucide-trash w-4 h-4 mr-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6m3 0V4a2 2 0 012-2h4a2 2 0 012 2v2"></path></svg> حذف </a></li></ul>'
                    +
                    '        </div>'
                    +
                    '    </div>'
                    +
                    '    <div class="bg-primary px-4 py-3 text-white rounded-l-md rounded-t-md text-right">'
                    +
                    '<p class=" text-right fname_profile  pb-2">' + Name + ' ' + Family + adminBadge + '</p>'
                    +
                    result.Record.ConversationLogDescription
                    +
                    ' <div class="mt-1 text-xs text-white text-opacity-80 ConversationLogDescription"'
                    +
                    '            > ' + result.Record.OperationDateFa + ' ' + result.Record.OperationTime + ' </div>'
                    +
                    '    </div>'
                    +
                    '    <div class="w-10 h-10 hidden sm:block flex-none image-fit relative ml-5"> <img alt="Midone hi- HTML Admin Template" class="rounded-full image_profile" src="' + imageSrcProfile + '" onerror="this.src=\'/images/profileImage.png\'">'
                    +
                    '    </div>'
                    +
                    '</div><div class="clear-both"></div>'
                    ;


                var address = '';

                if (contractType == "Attachments") {


                    $('.AttachmentconversatioBlock[data-AgreementId="' + agreementId + '"]').append(newChat);

                    $('.attachmentMessage[data-AgreementId="' + agreementId + '"]').val('')
                    address = $('.AttachmentconversatioBlock[data-AgreementId="' + agreementId + '"]');
                    $('.NullMessage[data-RecordId="' + agreementId + '"]').remove();

                }
                else {

                    $('.conversatioBlock[data-AgreementId="' + agreementId + '"]').append(newChat);
                    $('.messageClass[data-AgreementId="' + agreementId + '"]').val('')
                    address = $('.conversatioBlock[data-AgreementId="' + agreementId + '"]');
                    $('.NullMessage[data-RecordId="' + agreementId + '"]').remove();

                }
                $(address).animate({ scrollTop: $(address).prop("scrollHeight") }, 1000);
            }
        });
    });
    //#endregion


    //#region submit New Attachment
    $('body').on('click', '.SubmitNewAttachment', function (e) {

        e.preventDefault();
        var _this = $(this);
        const counter = document.getElementById('counter');

        var constructionProjectId = _this.attr('data-ConstructionProjectId');
        var contractType = _this.attr('data-contractType');
        var agreementId = _this.attr('data-AgreementId');
        var filesElm = $('.addAttachmentImageUpload[data-AgreementId="' + agreementId + '"]');
        var file = filesElm[0];
        var agreementTitle = $('.addAttachmentTitle[data-AgreementId="' + agreementId + '"]').val();
        var agreemetnDescription = $('.addAttachmentDescrption[data-AgreementId="' + agreementId + '"]').val();
        var missingField = false;

        // Title validation
        if (
            (agreementTitle == undefined) ||
            (agreementTitle == null) ||
            (agreementTitle.length == "") ||
            (agreementTitle.length < 1)
        ) {
            $('.addAttachmentTitle[data-AgreementId="' + agreementId + '"]').addClass('has-error');
            counter.textContent = 'عنوان قرارداد اجباریست'; // Error message for missing title
            $('#upload-button-text').css('background-color', '#d11515'); // Set red background to indicate error
            missingField = true;
        } else {
            $('.addAttachmentTitle[data-AgreementId="' + agreementId + '"]').removeClass('has-error');
            counter.textContent = ''; // Clear the title error message if valid
        }

        // File validation
        var hasFile = true;
        if (typeof $(_this).data('hasfile') !== 'undefined') {
            if ($(_this).data('hasfile') == false) {
                hasFile = false;
            }
        }

        if (hasFile == true) {
            if (
                (file == null) ||
                (file.files[0] == null) ||
                (file.files[0].size == 0)
            ) {
                counter.textContent = 'آپلود فایل اجباریست'; // File upload is required
                $('#upload-button-text').css('background-color', '#d11515'); // Red background for error

                missingField = true;
            } else if (file.files[0].size > 500 * 1024 * 1024) { // Check file size (500 MB limit)
                counter.textContent = 'حجم فایل باید کمتر از 500 مگابایت باشد.'; // File size restriction message
                $('#upload-button-text').css('background-color', '#d11515');

                missingField = true;
            } else if (!isValidFileType(file.files[0].name)) { // Check file type
                counter.textContent = 'فرمت این فایل پشتیبانی نمیشود.'; // Invalid file type message
                $('#upload-button-text').css('background-color', '#d11515');

                missingField = true;
            } else {
                counter.textContent = 'فایل آپلود شد'; // File upload success message
                $('#upload-button-text').css('background-color', '#29b586');
                $('#upload-button-text').removeClass('has-erorr-bg');
            }
        }

        // If any required fields are missing or there's an error, stop the process and keep the form visible
        if (missingField === true) {
            return;
        }

        // Prepare FormData for AJAX request if all validations pass
        var formData = new FormData();
        if (hasFile == true && file != null && file.files[0] != null && file.files[0].size > 0) {
            formData.append('File', file.files[0]);
            formData.append('AttachmentTitle', agreementTitle);
            formData.append('AttachmentDescription', agreemetnDescription);
            formData.append('ConstructionProjectId', constructionProjectId);
            formData.append('ContractType', contractType);
            formData.append('AgreementId', agreementId);
        }

        // Proceed with AJAX request if no errors


        $.ajax({
            cache: false,
            type: "POST",
            url: "/UserProjects/MyProjectsManagement/AddAttachment",
            data: formData,
            processData: false,
            contentType: false,
            success: function (result) {


                // Hide the AddAttachmentForm element based on agreementId
                $('.AddAttachmentForm[data-agreementid="' + agreementIdAtt + '"]').hide();

                // Check for errors in the result
                if (result === null || result === '' || result === undefined || result.length <= 0) {
                    $('#my-warning-modal').find('.modal-title').html('خطا');
                    $('#my-warning-modal').find('#error').html('خطا');
                    return $('#warningModal')[0].click();
                }
                var targetRow;
                // Dynamically find the target element based on screen width (mobile vs desktop)
                var targetElement;
                if (window.innerWidth <= 825) {
                    // Mobile view: Look for div element
                    targetElement = document.querySelector('.unrelated-group[data-AgreementId="' + agreementId + '"]');
                } else {
                    // Desktop view: Look for tr element
                    targetElement = document.querySelector('tr[data-AgreementId="' + agreementId + '"]');
                }

                if (targetElement) {
                    // Find the closest parent element with the 'unrelated-group' class
                    var parentElement = targetElement.closest('.unrelated-group');



                    // Create the attachment button HTML
                    var attachmentButtonHTML = '<a style="cursor:pointer!important;" class="contractAttachmentModalsButton" data-ConstructionProjectId="' + constructionProjectId + '" data-ContractType="' + contractType + '" data-AgreementId="' + agreementId + '"></a>';

                    // Dynamically select the target row

                    if (window.innerWidth <= 825) {
                        targetRow = document.querySelector('.tr[data-AgreementId="' + agreementId + '"]');
                    } else {
                        targetRow = document.querySelector('tr[data-AgreementId="' + agreementId + '"]');
                    }



                    // Ensure we found the parent element and it has the 'unrelated-group' class
                    if (parentElement && parentElement.classList.contains('unrelated-group')) {
                        // Change the class from 'unrelated-group' to 'related-group'
                        parentElement.classList.remove('unrelated-group');
                        parentElement.classList.add('related-group');

                        // Get the current count value from the :before pseudo-element
                        var currentCount = window.getComputedStyle(targetElement, '::before').getPropertyValue('content');
                        currentCount = parseInt(currentCount.replace(/"/g, '')) || 0; // Convert to integer, handle empty or non-numeric values

                        // Increment the count by 1
                        var newCount = currentCount + 1;

                        // Dynamically create a style tag to update the :before content
                        var style = document.createElement('style');
                        style.innerHTML = '.related-group[data-AgreementId="' + agreementId + '"]:before { content: "' + newCount + '"; }';
                        document.head.appendChild(style);

                        // Apply the 'blur' effect to other rows in the table (for desktop only)
                        if (window.innerWidth > 825) {
                            $('#Records tr').each(function () {
                                // If the current tr is not the targetRow, apply the 'blur' class
                                if (this !== targetRow) {
                                    $(this).addClass('blur');
                                }
                            });
                        }

                        // Add the attachment button to the targetRow
                        if (targetRow) {
                            $(targetRow).append(attachmentButtonHTML);
                        }
                    }
                    else {
                        var targetElement = document.querySelector('.related-group[data-AgreementId="' + agreementId + '"]');

                        // Get the current count from the :before pseudo-element content
                        var currentCount = window.getComputedStyle(targetElement, '::before').getPropertyValue('content');
                        currentCount = parseInt(currentCount.replace(/"/g, '')) || 0; // Convert to integer, removing quotes if any

                        // Set to 1 if there was no previous value, otherwise increment
                        var newCount = currentCount ? currentCount + 1 : 1;

                        // Apply CSS to update the pseudo-element's content dynamically
                        var style = document.createElement('style');
                        style.innerHTML = '.related-group[data-AgreementId="' + agreementId + '"]:before { content: "' + newCount + '"; }';
                        document.head.appendChild(style);
                    }

                }













                $('.addAttachmentImageUpload[data-AgreementId="' + agreementId + '"]').val('');
                $('.addAttachmentTitle[data-AgreementId="' + agreementId + '"]').val('');
                $('.addAttachmentDescrption[data-AgreementId="' + agreementId + '"]').val('');
                $('.attachmentIcon[data-AgreementId="' + agreementId + '"]').remove();


                if (window.innerWidth <= 825) {
                    // If screen width is 825px or less, render the responsive DOM
                    contractAttachments =


                        '<div class="tr related-child Contract agreementAttachments grid grid-cols-12 gap-x-6 flex bg-slate-100 scrollbox-overflowed" data-AttachmentId="' + result.Record.AttachementId + '" style="position: relative;">'
                        +
                        //'<div class="ContractTitle col-span-12 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center"></div>'

                        '<div class="cl1 cl1_value tooltip-container1 col-span-9 mt-3 mb-3 sm:col-span-9 xs:col-span-9 text-right">' +
                        '<a class="font-normal tooltip-text1">'
                        +
                        (result.Record.AttachementTitle === null ||
                            result.Record.AttachementTitle === undefined ||
                            result.Record.AttachementTitle === ''
                            ? '' :
                            result.Record.AttachementTitle)
                        +

                        '</a></div>'

                        +

                        '<div class="m_status_project col-span-3 mt-3 sm:col-span-3 sm:text-left xs:col-span-3 xs:text-left text-center">'
                        +

                        ((result.Record.IsView === null ||
                            result.Record.IsView === false ||
                            result.Record.IsView === '' ||
                            result.Record.IsView === undefined
                        )
                            ? '<span class="flex items-center justify-center  status_accept text-danger agreementIco" data-AgreementId="' + result.Record.AgreementId + '">' + '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" icon-name="eye-off" data-lucide="eye-off" class="lucide lucide-eye-off block"><path d="M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>' + '</span>'
                            : '<span class="flex items-center justify-center  status_accept text-success">' + '<svg width = "22.2" height = "24" viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke-width="2" stroke - linecap="round" stroke - linejoin="round" icon - name="eye" data - lucide="eye" class="lucide lucide-eye" > <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" > </path><circle cx="12" cy="12" r="3"></circle > </svg>' + '</span>'
                        )
                        +


                        ((result.Record.IsConfirm === null ||
                            result.Record.IsConfirm === false ||
                            result.Record.IsConfirm === '' ||
                            result.Record.IsConfirm === undefined
                        )
                            ? '<span class="m_isconfirm flex tooltip-container items-center justify-center status_accept text-deactive"><a class="font-medium tooltip-text">تایید نشده</a><i class="material-symbols-outlined w-5 h-5 contractsIcons"> priority </i></span></td>'

                            : '<span class="m_isconfirm flex tooltip-container items-center justify-center  text-success" href="javascript:;"><a class="font-medium tooltip-text">تایید شده</a><i class="material-symbols-outlined w-5 h-5">priority</i>'
                        )
                        +
                        '</div>'

                        +


                        //'<div id="mdescription" class="mcl4 mcl4_value tooltip-container1 ContractTitle col-span-12 sm:col-span-7 xs:col-span-5 text-right whitespace-nowrap justify-center">توضیحات</div>'

                        '<div id="mdescription" class="font-light tooltip-text1 tooltip-container1  col-span-12 mt-1  sm:col-span-12 xs:col-span-12 text-right whitespace-nowrap justify-right">' +
                        '<a class="font-light tooltip-text1">' +
                        (result.Record.AttachementDescription === null ||
                            result.Record.AttachementDescription === undefined ||
                            result.Record.AttachementDescription === ''
                            ? '' :
                            result.Record.AttachementDescription)
                        +


                        '</a></div>'
                        +



                        '<div id="maction" class="mcl5  mcl5_value col-span-2 sm:col-span-12 sm:text-left xs:col-span-12 xs:text-left text-center" id="action">' +
                        '<a class="intro-x w-8 h-8 AttachmentcontractConversationModalButton flex items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-AttachmentId="' + result.Record.AttachementId + '">' +
                        '<i class="material-symbols-outlined action_icons">chat</i>' +
                        '<span class="tooltip-text">مکاتبه</span>' +
                        ((result.Record.ConversationIsReadCount > 0)

                            ? '<div data-AgreementId="' + result.Record.AgreementId + '"  class="Viewcount"> ' + result.Record.ConversationIsReadCount + ' </div>'
                            : ''

                        )
                        +
                        '</a>'
                        +
                        ((result.Record.IsConfirm === null ||
                            result.Record.IsConfirm === false ||
                            result.Record.IsConfirm === '' ||
                            result.Record.IsConfirm === undefined
                        )
                            ? '<a class="intro-x w-8 h-8 flex popup-btn isConfirmToggle items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '"  data-ContractType="' + result.Record.AgreementType + '"  data-TargetId="' + result.Record.AttachmentId + '">' +
                            '<i class="material-symbols-outlined action_icons">check</i>' +
                            '<span class="tooltip-text">تاییدیه</span>' +
                            '</a>'
                            : ''
                        )
                        +


                        '<a class="intro-x w-8 h-8 flex items-center downloadFile justify-center rounded-full bg-primary text-white mr-1 tooltip-container"  data-fileName="' + result.Record.AttachementFilePath + '" data-FileId="' + result.Record.AttachementId + '" data-ConstructionProjectId="' + constructionProjectId + '" data-Type="Attachments" >' +
                        '<i class="material-symbols-outlined action_icons">download</i>' +
                        '<span class="tooltip-text">' + result.Record.AttachementTitle + '</span>' +
                        '</a></div>';

                    $('.AddAttachmentForm[data-AgreementId="' + agreementId + '"]').after(contractAttachments);

                    var tooltipElements = document.querySelectorAll('.tooltip-container1 .tooltip-text1');

                    tooltipElements.forEach(function (el) {
                        var text = el.textContent.trim(); // Get the text content
                        var container = el.closest('.tooltip-container1'); // Parent container

                        var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                        var maxHeight = lineHeight * 2; // Maximum height for 1 line

                        // Check if text is overflowing or exceeds 85 characters
                        var cl1ValueElement = container.querySelector('.cl1_value a');
                        var cl1ValueText = cl1ValueElement ? cl1ValueElement.textContent.trim() : '';

                        if (el.scrollHeight > maxHeight || text.length > 85 || (cl1ValueElement && cl1ValueText.length > 29)) {
                            // Set z-index only for the current container
                            container.style.zIndex = '1000';

                            // Add a custom tooltip dynamically on hover
                            container.addEventListener('mouseenter', function () {
                                var tooltip = document.createElement('div');
                                tooltip.className = 'custom-tooltip'; $('.mcl5_value').css('z-index', '1');
                                tooltip.textContent = text.length > 85 ? text : cl1ValueText; // Use the appropriate text
                                container.appendChild(tooltip);
                            });

                            container.addEventListener('mouseleave', function () {
                                // Remove the tooltip when the mouse leaves
                                var tooltip = container.querySelector('.custom-tooltip'); $('.mcl5_value').css('z-index', '9999');
                                if (tooltip) {
                                    tooltip.remove();
                                }
                            });
                        } else {
                            // Reset z-index for non-overflowing containers
                            container.style.zIndex = '';
                        }
                    });
                }
                else {

                    contractAttachments =


                        '<tr class="related-child Contract agreementAttachments"  data-AttachmentId="' + result.Record.AttachementId + '">' +
                        '<td class="cl1 cl1_value">' +
                        '<div class="status_project">'

                        +
                        ((result.Record.IsView === null ||
                            result.Record.IsView === false ||
                            result.Record.IsView === '' ||
                            result.Record.IsView === undefined
                        )
                            ? '<span class="flex items-center justify-center  status_accept text-danger agreementIco" data-AgreementId="' + result.Record.AgreementId + '">' + '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" icon-name="eye-off" data-lucide="eye-off" class="lucide lucide-eye-off block mx-auto"><path d="M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>' + '</span></div>'
                            : '<span class="flex items-center justify-center  status_accept text-success">' + '<svg width = "22.2" height = "22.5" viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke-width="2" stroke - linecap="round" stroke - linejoin="round" icon - name="eye" data - lucide="eye" class="lucide lucide-eye" > <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" > </path><circle cx="12" cy="12" r="3"></circle > </svg>' + '</span>'
                        )
                        +

                        '</div>' +
                        ' </td>' +
                        '<td class="cl2 cl2_value">' +
                        '<div class="status_project">'
                        +
                        ((result.Record.IsConfirm === null ||
                            result.Record.IsConfirm === false ||
                            result.Record.IsConfirm === '')
                            ? '<span  class="m_isconfirm flex items-center justify-center tooltip-container status_accept text-deactive"><a class="font-medium tooltip-text">تایید نشده</a><i class="material-symbols-outlined w-5 h-5 contractsIcons"> priority </i></span></td>'

                            : '<span class="m_isconfirm flex items-center justify-center tooltip-container text-success" href="javascript:;"><a class="font-medium tooltip-text">تایید شده</a><i class="material-symbols-outlined w-5 h-5">priority</i>'


                        )
                        +
                        '<td class="cl3 cl3_value tooltip-container1">' +
                        '<a class="font-normal tooltip-text1">'
                        +
                        (result.Record.AttachementTitle === null ||
                            result.Record.AttachementTitle === undefined ||
                            result.Record.AttachementTitle === ''
                            ? '-' :
                            result.Record.AttachementTitle)
                        +
                        '</a>' +
                        '</td>' +
                        '<td class="cl4 cl4_value tooltip-container1" id="description">' +
                        '<a class="font-light tooltip-text1">' +
                        (result.Record.AttachementDescription === null ||
                            result.Record.AttachementDescription === undefined ||
                            result.Record.AttachementDescription === ''
                            ? '-' :
                            result.Record.AttachementDescription)
                        +
                        '</a>' +
                        '</td>' +

                        '<td class="cl5 cl5_value" id="action">' +
                        '<a class="intro-x w-8 h-8 flex items-center justify-center rounded-full AttachmentcontractConversationModalButton bg-primary text-white ml-2 tooltip-container"  data-AttachmentId="' + result.Record.AttachementId + '">' +
                        '<i class="material-symbols-outlined action_icons">chat</i>' +
                        '<span class="tooltip-text">مکاتبه</span>' +

                        ((result.Record.ConversationIsReadCount > 0)

                            ? '<div data-AgreementId="' + result.Record.AgreementId + '"  class="Viewcount"> ' + result.Record.ConversationIsReadCount + ' </div>'
                            : ''

                        )
                        +
                        '</a>' +
                        ((result.Record.IsConfirm === null ||
                            result.Record.IsConfirm === false ||
                            result.Record.IsConfirm === ''
                        )
                            ? '<a class="intro-x w-8 h-8 isConfirmToggle flex popup-btn isAttachment attachment items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container"  data-AttachmentId="' + result.Record.AttachementId + '"  data-ContractType="' + result.Record.AgreementType + '" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '"  data-TargetId="' + result.Record.AttachementId + '">' +
                            '<i class="material-symbols-outlined action_icons">check</i>' +
                            '<span class="tooltip-text">تاییدیه</span>' +
                            '</a>'
                            : ''
                        )
                        +
                        '<a data-fileName="' + result.Record.AttachementFilePath + '" data-FileId="' + result.Record.AttachementId + '" data-ConstructionProjectId="' + constructionProjectId + '" data-ContractType="' + result.Record.AgreementType + '"  data-Type="Attachments" class="downloadFile intro-x w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container " data-tooltip="' + result.Record.AttachementTitle + '" >' +

                        '<i class="material-symbols-outlined action_icons">download</i>' +
                        '<span class="tooltip-text">' + result.Record.AttachementTitle + '</span>' +
                        '</a>' +

                        '</div>'

                    '</td>' +

                        '</tr>';

                    $('.AddAttachmentForm[data-AgreementId="' + agreementId + '"]').after(contractAttachments);

                    var cl1ValueElement = document.querySelectorAll('.cl3_value a');

                    cl1ValueElement.forEach(function (el) {
                        var text = el.textContent.trim(); // Get the text content
                        var container = el.closest('.tooltip-container1'); // Parent container

                        var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                        var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                        // Only show tooltip if text is overflowing or exceeds specific character limits
                        if (text.length > 60) {
                            container.style.zIndex = '1000'; // Set z-index for overflowing content

                            container.addEventListener('mouseenter', function () {
                                var tooltip = document.createElement('div');
                                tooltip.className = 'custom-tooltip';

                                tooltip.textContent = text; // Add the text content to the tooltip
                                container.appendChild(tooltip);
                            });

                            container.addEventListener('mouseleave', function () {
                                var tooltip = container.querySelector('.custom-tooltip');
                                if (tooltip) {
                                    tooltip.remove();
                                }
                            });
                        } else {
                            container.style.zIndex = ''; // Reset z-index for non-overflowing containers
                        }
                    });

                    var tooltipElements = document.querySelectorAll('.cl4_value a');

                    tooltipElements.forEach(function (el) {
                        var text = el.textContent.trim(); // Get the text content
                        var container = el.closest('.tooltip-container1'); // Parent container

                        var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                        var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                        // Only show tooltip if text is overflowing or exceeds specific character limits
                        if (text.length > 85) {
                            container.style.zIndex = '1000'; // Set z-index for overflowing content

                            container.addEventListener('mouseenter', function () {
                                var tooltip = document.createElement('div');
                                tooltip.className = 'custom-tooltip';
                                tooltip.textContent = text; // Add the text content to the tooltip
                                container.appendChild(tooltip);
                            });

                            container.addEventListener('mouseleave', function () {

                                var tooltip = container.querySelector('.custom-tooltip');
                                if (tooltip) {
                                    tooltip.remove();
                                }
                            });
                        } else {
                            container.style.zIndex = ''; // Reset z-index for non-overflowing containers
                        }
                    });
                    $('.contractAttachmentsClass').each(function () {
                        // Check if this element has a child with the class .AddAttachmentForm
                        var addAttachmentForm = $(this).find('.AddAttachmentForm');

                        if (addAttachmentForm.length > 0 && !addAttachmentForm.hasClass('d-none')) {
                            // Add margin-top: 10px to related-child elements
                            $('.related-child').css('margin-top', '10px');
                        }
                    });
                }








            }

        });
    });

















    //'<div class="grid grid-cols-12 agreementAttachments"   data-AttachmentId="' + result.Record.AttachementId + '">'
    //+
    //'<div class="col-span-1 font-medium py-3 mt-2 px-3 text-center fontSize-s" ></div>'
    //+
    //'<div class="col-span-1 font-medium py-3 px-3 mt-2 contractMargin">'
    //+
    //'<div class="contractsCircles image-fit zoom-in -mr-5 rounded-full bg-success attachments tooltip attachmentH" data-tooltip="' + result.Record.AttachementTitle + '"></div></a>'
    //+
    //'</div>'
    //+
    //'<div class="col-span-1 font-medium py-3 mt-2 px-3 text-center fontSize-s"></div>'
    //+
    //'  <div class="col-span-2 font-medium py-3 px-3 pr-5 mt-4 ">'
    //+
    //'  <div class="font-small text-xs mt-0.5 fontSize-s paddingClass"><div class="font-medium">'
    //+
    //(result.Record.AttachementTitle === null ||
    //    result.Record.AttachementTitle === undefined ||
    //    result.Record.AttachementTitle === ''
    //    ? '-' :
    //    result.Record.AttachementTitle)
    //+
    //'</div></div></div>'
    //+
    //(
    //    (result.Record.AttachementDescription === null ||
    //        result.Record.AttachementDescription === undefined ||
    //        result.Record.AttachementDescription === ''
    //    )
    //        ? '<div class="col-span-4 font-medium py-3 px-3 mt-4 "><div class="font-small text-xs mt-0.5 fontSize-s ">-'
    //        : (
    //            (result.Record.AttachementDescription > 20)
    //                ? '<div class="col-span-4 font-medium py-3 px-3 mt-4 tooltip" data-tooltip="' + result.Record.AttachementDescription + '"><div class="font-small text-xs mt-0.5 fontSize-s" >' + result.Record.AttachementDescription.substring(0, 20) + '...'
    //                : '<div class="col-span-4 font-medium py-3 px-3 mt-4 "><div class="font-small text-xs mt-0.5 fontSize-s" >' + result.Record.AttachementDescription + ''
    //        )
    //)
    //+
    //'</div></div>'
    //+
    //((result.Record.IsView === null ||
    //    result.Record.IsView === false ||
    //    result.Record.IsView === '' ||
    //    result.Record.IsView === undefined
    //)
    //    ? '<div class="col-span-1 font-small py-3 px-3 mt-4" ><div class="font-medium text-xs mt-0.5"><i  data-AgreementId="' + result.Record.AttachementId + '"  class="agreementIco cursorIcon material-symbols-outlined visibility_off contractsIcons">visibility_off</i></div></div>'
    //    : '<div class="col-span-1 font-small py-3 px-3 mt-4" ><div class="font-medium text-xs mt-0.5"><i class="cursorIcon material-symbols-outlined visibility contractsIcons">visibility</i></div></div>'
    //)
    //+
    //'<div class="col-span-1 font-medium py-3 px-3 mt-4 attahmentContractModal">'
    //+
    //'<a class="AttachmentcontractConversationModalButton" data-AttachmentId="' + result.Record.AttachementId + '"><i class="material-symbols-outlined speaker_notes contractsIcons">speaker_notes</i><div  data-AttachmentId="' + result.Record.AttachementId + '"  class="Viewcount" > 0 </div></a></div>'
    //+
    //((result.Record.IsConfirm === null ||
    //    result.Record.IsConfirm === false ||
    //    result.Record.IsConfirm === '')
    //    ?
    //    '<a  class="statusCircle flex items-center justify-center isConfirmToggle isAttachment mt-2 attachment"  data-AttachmentId="' + result.Record.AttachementId + '"  data-ContractType="' + result.Record.AgreementType + '" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Record.ConstructionProjectId + '"  data-TargetId="' + result.Record.AttachementId + '"  href="javascript:;"><i class="material-symbols-outlined check_circle contractsIcons" >check_circle</i></a></div>'
    //    :
    //    '<a   class="statusCircle flex items-center justify-center text-success mt-2" href="javascript:;"><i class="material-symbols-outlined check_circle contractsIcons" >check_circle</i></a></div>'
    //);


    //#endregion

    //#region Function For Get Contracts
    function getContracts(constructionProjectId, contractType, hasFile) {
        $("#titelAndRecords").removeClass("d-none");
        $('#Records').empty('');
        $('.agreementAttachments').remove();

        //$('#titelAndRecords').scrollbox('destroy');

        $('body').addClass('fixModalPadding');
        $('body').addClass('overflow-y-hidden');

        $('html').addClass('overflow-y-hidden');

        //$('#titelAndRecords').scrollbox('destroy');

        $.ajax({

            cache: false,
            type: "POST",
            url: "/UserProjects/MyProjectsManagement/GetAgreementDataByAgreementTypeAndConstructionProjectId",
            data: { 'constructionProjectId': constructionProjectId, 'contractType': contractType },
            success: function (result) {

                //console.log('ajax for get contractDetail  ==> : ', result)
                if (result === null || result === '' || result === undefined || result.length <= 0) {
                    $('#my-warning-modal').find('.modal-title').html('خطا');
                    $('#my-warning-modal').find('#error').html('خطا');
                    return $('#warningModal')[0].click();
                }

                //if (hasFile == false) {
                //    $('#titelAndRecords').find('.grid').find(':nth-child(1)').html('موضوع').removeClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6').addClass('col-span-7 xxl:col-span-7 xl:col-span-7 llg:col-span-7 lg:col-span-7 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6 text-right');
                //    $('#titelAndRecords').find('.grid').find(':nth-child(2)').hide();
                //    $('#titelAndRecords').find('.grid').find(':nth-child(3)').hide();
                //    $('#titelAndRecords').find('.grid').find(':nth-child(4)').hide();
                //    //$('#titelAndRecords').find('.grid').find(':nth-child(4)').html('');
                //    $('#titelAndRecords').find('.grid').find(':nth-child(5)').hide();
                //    $('#titelAndRecords').find('.grid').find(':nth-child(6)').removeClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6').addClass('col-span-5 xxl:col-span-5 xl:col-span-5 llg:col-span-5 lg:col-span-5 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6').addClass('text-left');
                //    $('#titelAndRecords').find('.grid').find(':nth-child(7)').hide();
                //}
                //else {
                //    $('#titelAndRecords').find('.grid').find(':nth-child(1)').html('').removeClass('col-span-7 xxl:col-span-7 xl:col-span-7 llg:col-span-7 lg:col-span-7 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6 text-right').addClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6 xs:col-span-6');
                //    $('#titelAndRecords').find('.grid').find(':nth-child(2)').show();
                //    $('#titelAndRecords').find('.grid').find(':nth-child(3)').show();
                //    $('#titelAndRecords').find('.grid').find(':nth-child(4)').show();
                //    //$('#titelAndRecords').find('.grid').find(':nth-child(4)').html('');
                //    $('#titelAndRecords').find('.grid').find(':nth-child(5)').show();
                //    $('#titelAndRecords').find('.grid').find(':nth-child(6)').removeClass('col-span-5 xxl:col-span-5 xl:col-span-5 llg:col-span-5 lg:col-span-5 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6').addClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6').removeClass('text-left');
                //    $('#titelAndRecords').find('.grid').find(':nth-child(7)').show();
                //}

                for (var j = 0; j < result.Records.length; j++) {




                    let attachmentCount = result.Records[j].AttachmentFilesVMs.length;
                    let contractsAttachmentsCircles = '';
                    let contractsConversations = '';
                    tailwind.svgLoader();
                    var trClass = result.Records[j].AttachmentFilesVMs.length > 0 ? "related-group" : "unrelated-group";


                    // if attachment > 0  or have attachment give cl1_value before = content : Count
                    if (attachmentCount > 0) {
                        let style = document.createElement('style');
                        let paddingValue;

                        if (window.innerWidth <= 825) {
                            // On mobile, use padding-right
                            paddingValue = '16.5px';
                        } else {
                            // On larger screens, use padding-left
                            paddingValue = attachmentCount > 10 ? '5px!important' : '6.5px';
                        }

                        style.innerHTML = `
                                                .related-group[data-AgreementId="${result.Records[j].AgreementId}"]:before {
                                                    content: '${attachmentCount}';
                                                    ${window.innerWidth <= 825
                                ? `padding-right: ${paddingValue};`
                                : `padding-left: ${paddingValue}; `}
                                                }
                                            `;

                        document.head.appendChild(style);
                    }

                    if (window.innerWidth <= 825) {
                        // If screen width is 825px or less, render the responsive DOM
                        var recordsStr =



                            '<div class="' + trClass + ' Contract grid grid-cols-12 gap-x-6 flex bg-slate-100 scrollbox-overflowed tr" data-AgreementId="' + result.Records[j].AgreementId + '">'
                            +
                            //'<div class="ContractTitle col-span-12 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center"></div>'

                            '<div class="cl1 cl1_value tooltip-container1 col-span-9 mt-3 mb-3 sm:col-span-9 xs:col-span-9 text-right">' +
                            '<a class="font-normal tooltip-text1">'
                            +
                            (result.Records[j].AgreementTitle === null ||
                                result.Records[j].AgreementTitle === undefined ||
                                result.Records[j].AgreementTitle === ''
                                ? '' :
                                result.Records[j].AgreementTitle)
                            +

                            '</a></div>'

                            +

                            '<div class="m_status_project col-span-3 mt-3 sm:col-span-3 sm:text-left xs:col-span-3 xs:text-left text-center">'
                            +

                            ((result.Records[j].IsView === null ||
                                result.Records[j].IsView === false ||
                                result.Records[j].IsView === '' ||
                                result.Records[j].IsView === undefined
                            )
                                ? '<span class="flex items-center justify-center  status_accept text-danger agreementIco" data-AgreementId="' + result.Records[j].AgreementId + '">' + '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" icon-name="eye-off" data-lucide="eye-off" class="lucide lucide-eye-off block"><path d="M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>' + '</span>'
                                : '<span class="flex items-center justify-center  status_accept text-success">' + '<svg width = "22.2" height = "24" viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke-width="2" stroke - linecap="round" stroke - linejoin="round" icon - name="eye" data - lucide="eye" class="lucide lucide-eye" > <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" > </path><circle cx="12" cy="12" r="3"></circle > </svg>' + '</span>'
                            )
                            +


                            ((result.Records[j].IsConfirm === null ||
                                result.Records[j].IsConfirm === false ||
                                result.Records[j].IsConfirm === '' ||
                                result.Records[j].IsConfirm === undefined
                            )
                                ? '<span class="m_isconfirm flex tooltip-container items-center justify-center text-deactive" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '"  data-ContractType="' + result.Records[j].AgreementType + '"  data-TargetId="' + result.Records[j].AgreementId + '"><a class="font-medium tooltip-text">تایید نشده</a><i class="material-symbols-outlined contractsIcons"> priority </i></span></td>'
                                : '<span class="m_isconfirm flex tooltip-container items-center justify-center text-success" href="javascript:;"><a class="font-medium  tooltip-text">تایید شده</a><i class="material-symbols-outlined">priority</i>'
                            )
                            +
                            '</div>'

                            +


                            //'<div id="mdescription" class="mcl4 mcl4_value tooltip-container1 ContractTitle col-span-12 sm:col-span-7 xs:col-span-5 text-right whitespace-nowrap justify-center">توضیحات</div>'

                            '<div id="mdescription" class="font-light tooltip-text1 tooltip-container1  col-span-12 mt-1 sm:col-span-12 xs:col-span-12 text-right whitespace-nowrap justify-right">' +
                            '<a class="font-light tooltip-text1">' +
                            (result.Records[j].AgreementDescription === null ||
                                result.Records[j].AgreementDescription === undefined ||
                                result.Records[j].AgreementDescription === ''
                                ? '' :
                                result.Records[j].AgreementDescription)
                            +


                            '</a></div>'
                            +


                            '<div id="maction" class="mcl5  mcl5_value col-span-2 sm:col-span-12 sm:text-left xs:col-span-12 xs:text-left text-center" id="action">' +
                            '<a class="intro-x w-8 h-8 contractConversationModalButton flex items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-ContractType="' + result.Records[j].AgreementType + '"  data-AgreementId="' + result.Records[j].AgreementId + '">' +
                            '<i class="material-symbols-outlined action_icons">chat</i>' +
                            '<span class="tooltip-text">مکاتبه</span>' +
                            ((result.Records[j].ConversationIsReadCount > 0)

                                ? '<div data-AgreementId="' + result.Records[j].AgreementId + '"  class="Viewcount"> ' + result.Records[j].ConversationIsReadCount + ' </div>'
                                : ''

                            )
                            +
                            '</a>'
                            +
                            ((result.Records[j].IsConfirm === null ||
                                result.Records[j].IsConfirm === false ||
                                result.Records[j].IsConfirm === '' ||
                                result.Records[j].IsConfirm === undefined
                            )
                                ? '<a class="intro-x w-8 h-8 flex popup-btn isConfirmToggle items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '"  data-ContractType="' + result.Records[j].AgreementType + '"  data-TargetId="' + result.Records[j].AgreementId + '">' +
                                '<i class="material-symbols-outlined action_icons">check</i>' +
                                '<span class="tooltip-text">تاییدیه</span>' +
                                '</a>'
                                : ''
                            )
                            +
                            '<a class="intro-x w-8 h-8 flex items-center downloadFile justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-AgreementId="' + result.Records[j].AgreementId + '" data-fileName="' + result.Records[j].AgreementFilePath + '" data-FileId="' + result.Records[j].AgreementId + '" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-Type="' + result.Records[j].AgreementType + '" >' +
                            '<i class="material-symbols-outlined action_icons">download</i>' +
                            '<span class="tooltip-text">' + result.Records[j].AgreementTitle + '</span>' +
                            '</a>' +
                            '<a class="AttachmentCreate AddAttachment intro-x w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '"  data-AgreementId="' + result.Records[j].AgreementId + '" data-AgreementId="' + result.Records[j].AgreementId + '">' +
                            '<i class="material-symbols-outlined action_icons">add</i>' +
                            '<span class="tooltip-text">اضافه کردن الحاقیه</span></a>' +


                            ((result.Records[j].AttachmentFilesVMs.length > 0)
                                ? '<a style="cursor:pointer!important;" class="contractAttachmentModalsButton" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '" data-AgreementId="' + result.Records[j].AgreementId + '"></div>'
                                : '<a class="" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '" data-AgreementId="' + result.Records[j].AgreementId + '"></a></div>'
                            )
                            +

                            //'<div class="requestItemFileTitle col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 pr-5 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >عنوان</div></div></div>'
                            //+
                            '</a>';






                        $('#Records').prepend(recordsStr);

                        currentPage = 1; // Reset the page to the first
                        setupPagination();

                        if (hasFile == false) {

                            $('.m_status_project').remove();
                            $('.downloadFile').remove();
                            $('.AddAttachment').remove();
                            $('.isConfirmToggle').remove();
                            $('#mdescription').remove();
                            $('.cl1_value').removeClass('sm:col-span-9').addClass('sm:col-span-9');
                            $('.mcl5_value').removeClass('sm:col-span-12').addClass('sm:col-span-3');
                            $('.cl1_value').removeClass('mb-3');
                            $('.cl1_value').removeClass('mt-3');
                            $('.tr').css('padding-top', '0.75rem!important');
                            $('.unrelated-group').css('min-height', 'unset');
                            $('.unrelated-group').css('align-items', 'center');





                        }
                        else {
                            $('.m_status_project').show();
                            $('.downloadFile').show();
                            $('.AddAttachment').show();
                            $('.isConfirmToggle').show();
                            $('#mdescription').show();
                        }
                        var tooltipElements = document.querySelectorAll('.tooltip-container1 .tooltip-text1');

                        tooltipElements.forEach(function (el) {
                            var text = el.textContent.trim(); // Get the text content
                            var container = el.closest('.tooltip-container1'); // Parent container

                            var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                            var maxHeight = lineHeight * 2; // Maximum height for 1 line

                            // Check if text is overflowing or exceeds 85 characters
                            var cl1ValueElement = container.querySelector('.cl1_value a');
                            var cl1ValueText = cl1ValueElement ? cl1ValueElement.textContent.trim() : '';

                            if (el.scrollHeight > maxHeight || text.length > 85 || (cl1ValueElement && cl1ValueText.length > 29)) {
                                // Set z-index only for the current container
                                container.style.zIndex = '1000';

                                // Add a custom tooltip dynamically on hover
                                container.addEventListener('mouseenter', function () {
                                    var tooltip = document.createElement('div');
                                    tooltip.className = 'custom-tooltip'; $('.mcl5_value').css('z-index', '1');
                                    tooltip.textContent = text.length > 85 ? text : cl1ValueText; // Use the appropriate text
                                    container.appendChild(tooltip);
                                });

                                container.addEventListener('mouseleave', function () {
                                    // Remove the tooltip when the mouse leaves
                                    var tooltip = container.querySelector('.custom-tooltip'); $('.mcl5_value').css('z-index', '9999');
                                    if (tooltip) {
                                        tooltip.remove();
                                    }
                                });
                            } else {
                                // Reset z-index for non-overflowing containers
                                container.style.zIndex = '';
                            }
                        });

                    }

                    else {



                        var recordsStr =




                            '<tr class="' + trClass + ' Contract"  data-AgreementId="' + result.Records[j].AgreementId + '" >' +
                            ' <td class="cl1 cl1_value">' +
                            '<div class="status_project">'
                            +
                            ((result.Records[j].IsView === null ||
                                result.Records[j].IsView === false ||
                                result.Records[j].IsView === '' ||
                                result.Records[j].IsView === undefined
                            )
                                ? '<span class="flex items-center justify-center  status_accept text-danger agreementIco" data-AgreementId="' + result.Records[j].AgreementId + '">' + '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" icon-name="eye-off" data-lucide="eye-off" class="lucide lucide-eye-off block mx-auto"><path d="M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>' + '</span></div>'
                                : '<span class="flex items-center justify-center  status_accept text-success">' + '<svg width = "22.2" height = "22.5" viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke-width="2" stroke - linecap="round" stroke - linejoin="round" icon - name="eye" data - lucide="eye" class="lucide lucide-eye" > <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" > </path><circle cx="12" cy="12" r="3"></circle > </svg>' + '</span>'
                            )
                            +
                            ' </td>' +
                            '<td class="cl2 cl2_value">' +
                            '<div class="status_project">'
                            +
                            ((result.Records[j].IsConfirm === null ||
                                result.Records[j].IsConfirm === false ||
                                result.Records[j].IsConfirm === '' ||
                                result.Records[j].IsConfirm === undefined
                            )
                                ? '<span class="flex tooltip-container items-center justify-center text-deactive" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '"  data-ContractType="' + result.Records[j].AgreementType + '"  data-TargetId="' + result.Records[j].AgreementId + '"><a class="font-medium tooltip-text">تایید نشده</a><i class="material-symbols-outlined w-5 h-5 contractsIcons"> priority </i></span></td>'
                                : '<span class="flex tooltip-container items-center justify-center text-success" href="javascript:;"><a class="font-medium tooltip-text">تایید شده</a><i class="material-symbols-outlined">priority</i>'
                            )
                            +
                            '<td class="cl3 cl3_value tooltip-container1">' +
                            '<a class="font-normal tooltip-text1">'
                            +
                            (result.Records[j].AgreementTitle === null ||
                                result.Records[j].AgreementTitle === undefined ||
                                result.Records[j].AgreementTitle === ''
                                ? '-' :
                                result.Records[j].AgreementTitle)
                            +
                            '</a>' +
                            '</td>' +
                            '<td class="cl4 cl4_value tooltip-container1" id="description">' +
                            '<a class="font-light tooltip-text1">' +
                            (result.Records[j].AgreementDescription === null ||
                                result.Records[j].AgreementDescription === undefined ||
                                result.Records[j].AgreementDescription === ''
                                ? '-' :
                                result.Records[j].AgreementDescription)
                            +
                            '</a>' +
                            '</td>' +
                            ' <td class="cl5  cl5_value" id="action">' +
                            '<a class="intro-x w-8 h-8 contractConversationModalButton flex items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container" data-ContractType="' + result.Records[j].AgreementType + '"  data-AgreementId="' + result.Records[j].AgreementId + '">' +
                            '<i class="material-symbols-outlined action_icons">chat</i>' +
                            '<span class="tooltip-text">مکاتبه</span>' +
                            ((result.Records[j].ConversationIsReadCount > 0)

                                ? '<div data-AgreementId="' + result.Records[j].AgreementId + '"  class="Viewcount"> ' + result.Records[j].ConversationIsReadCount + ' </div>'
                                : ''

                            )
                            +
                            '</a>'
                            +
                            ((result.Records[j].IsConfirm === null ||
                                result.Records[j].IsConfirm === false ||
                                result.Records[j].IsConfirm === '' ||
                                result.Records[j].IsConfirm === undefined
                            )
                                ? '<a class="intro-x w-8 h-8 flex popup-btn isConfirmToggle items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '"  data-ContractType="' + result.Records[j].AgreementType + '"  data-TargetId="' + result.Records[j].AgreementId + '">' +
                                '<i class="material-symbols-outlined action_icons">check</i>' +
                                '<span class="tooltip-text">تاییدیه</span>' +
                                '</a>'
                                : ''
                            )
                            +
                            '<a class="intro-x w-8 h-8 flex items-center downloadFile justify-center rounded-full bg-primary text-white ml-2 tooltip-container" data-AgreementId="' + result.Records[j].AgreementId + '" data-fileName="' + result.Records[j].AgreementFilePath + '" data-FileId="' + result.Records[j].AgreementId + '" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-Type="' + result.Records[j].AgreementType + '" >' +
                            '<i class="material-symbols-outlined action_icons">download</i>' +
                            '<span class="tooltip-text">' + result.Records[j].AgreementTitle + '</span>' +
                            '</a>' +
                            '<a class="AttachmentCreate AddAttachment intro-x w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '"  data-AgreementId="' + result.Records[j].AgreementId + '" data-AgreementId="' + result.Records[j].AgreementId + '">' +
                            '<i class="material-symbols-outlined action_icons">add</i>' +
                            '<span class="tooltip-text">اضافه کردن الحاقیه</span>' +

                            '</div>'
                            +
                            ((result.Records[j].AttachmentFilesVMs.length > 0)
                                ? '<a style="cursor:pointer!important;" class="contractAttachmentModalsButton" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '" data-AgreementId="' + result.Records[j].AgreementId + '">'
                                : '<a class="" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '" data-AgreementId="' + result.Records[j].AgreementId + '"></a></div>'
                            )
                            +
                            //'<div class="requestItemFileTitle col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 pr-5 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >عنوان</div></div></div>'
                            //+
                            '</a>' +
                            '</td>' +
                            '</tr>';

                        $('#Records').prepend(recordsStr);
                        setupPagination();



                        if (hasFile == false) {




                            $('#titelAndRecords th:nth-child(1)').hide();
                            $('#titelAndRecords th:nth-child(2)').hide();
                            $('#titelAndRecords th:nth-child(4)').hide();
                            $('.cl5_value a:nth-child(2)').hide();
                            $('.cl5_value a:nth-child(3)').hide();
                            $('.cl1_value').hide();
                            $('.cl2_value').hide();
                            $('.cl4_value').hide();
                            $('.AttachmentCreate').hide();
                            $('.tablerecord tr').addClass('hasfilefalsetr');
                            $('#titelAndRecords tr').addClass('hasfilefalseth');


                            //$('#titelAndRecords').find('.grid').find(':nth-child(4)').html('');
                            $('#titelAndRecords').find('cl5');
                        }
                        else {


                            $('#titelAndRecords th:nth-child(1)').show();
                            $('#titelAndRecords th:nth-child(2)').show();
                            $('#titelAndRecords th:nth-child(4)').show();
                            $('.cl5_value a:nth-child(2)').show();
                            $('.cl5_value a:nth-child(3)').show();
                            $('.cl1_value').show();
                            $('.cl2_value').show();
                            $('.cl4_value').show();
                            $('.tablerecord tr').removeClass('hasfilefalsetr');
                            $('#titelAndRecords tr').removeClass('hasfilefalseth');
                            //$('#titelAndRecords').find('.grid').find(':nth-child(4)').html('');

                            $('#titelAndRecords').find('cl5');
                        }


                        var cl1ValueElement = document.querySelectorAll('.cl3_value a');

                        cl1ValueElement.forEach(function (el) {
                            var text = el.textContent.trim(); // Get the text content
                            var container = el.closest('.tooltip-container1'); // Parent container

                            var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                            var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                            // Only show tooltip if text is overflowing or exceeds specific character limits
                            if (text.length > 60) {
                                container.style.zIndex = '1000'; // Set z-index for overflowing content

                                container.addEventListener('mouseenter', function () {
                                    var tooltip = document.createElement('div');
                                    tooltip.className = 'custom-tooltip';

                                    tooltip.textContent = text; // Add the text content to the tooltip
                                    container.appendChild(tooltip);
                                });

                                container.addEventListener('mouseleave', function () {
                                    var tooltip = container.querySelector('.custom-tooltip');
                                    if (tooltip) {
                                        tooltip.remove();
                                    }
                                });
                            } else {
                                container.style.zIndex = ''; // Reset z-index for non-overflowing containers
                            }
                        });

                        var tooltipElements = document.querySelectorAll('.cl4_value a');

                        tooltipElements.forEach(function (el) {
                            var text = el.textContent.trim(); // Get the text content
                            var container = el.closest('.tooltip-container1'); // Parent container

                            var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                            var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                            // Only show tooltip if text is overflowing or exceeds specific character limits
                            if (text.length > 85) {
                                container.style.zIndex = '1000'; // Set z-index for overflowing content

                                container.addEventListener('mouseenter', function () {
                                    var tooltip = document.createElement('div');
                                    tooltip.className = 'custom-tooltip';
                                    tooltip.textContent = text; // Add the text content to the tooltip
                                    container.appendChild(tooltip);
                                });

                                container.addEventListener('mouseleave', function () {

                                    var tooltip = container.querySelector('.custom-tooltip');
                                    if (tooltip) {
                                        tooltip.remove();
                                    }
                                });
                            } else {
                                container.style.zIndex = ''; // Reset z-index for non-overflowing containers
                            }
                        });






                    }






                }

            }
        });
    };














    //'<div class="grid grid-cols-12 mb-2 flex contractStyle Contract" data-AgreementId="' + result.Records[j].AgreementId + '" >' +
    //'<div class="col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 text-center fontSize-s aTagPadding">' +
    //'<a  data-fileName="' + result.Records[j].AgreementFilePath + '" data-FileId="' + result.Records[j].AgreementId + '" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-Type="' + result.Records[j].AgreementType + '"'
    //+
    //'class="tooltip downloadFile"  data-tooltip="' + result.Records[j].AgreementTitle + '">'
    //+
    //'<div class="contractsCircles image-fit zoom-in rounded-full mt-2 bg-success attachments attachmentHeight" ></div></a></div>'
    //+
    //'<div class="col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 mt-2 px-3 text-center circleContainter">'
    //+
    //'<div class="flex ltrDir attachment"  data-AgreementId="' + result.Records[j].AgreementId + '">'


    //+
    //'<a  class="tooltip AttachmentCreate AddAttachment" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '"  data-AgreementId="' + result.Records[j].AgreementId + '" data-tooltip="افزودن الحاقیه جدید"><div class="contractsCircles image-fit zoom-in -mr-5 rounded-full bg-success attachments attachmentHeight"><i class="material-symbols-outlined add contractsIcons colorWhite AddAttachmentIcon" data-AgreementId="' + result.Records[j].AgreementId + '" >add</i></div></a>'
    //+
    //'<a  class="d-none  AttachmentCreateReject CloseAttachment" data-AgreementId="' + result.Records[j].AgreementId + '" ><div class="attachmentH contractsCircles image-fit zoom-in -mr-5 rounded-full bg-success attachments"><i class="material-symbols-outlined add contractsIcons colorWhite addAttachmentCircle " data-AgreementId="' + result.Records[j].AgreementId + '"  >remove</i></div></a>'
    //+
    //contractsAttachmentsCircles
    //+
    //'</div>'
    //+
    //((result.Records[j].AttachmentFilesVMs.length > 0)
    //    ? '<a class="contractAttachmentModalsButton" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '" data-AgreementId="' + result.Records[j].AgreementId + '"><i class="material-symbols-outlined speaker_notes contractsIcons float-left iconMargin">arrow_drop_down </i></a></div>'
    //    : '<a data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '" data-AgreementId="' + result.Records[j].AgreementId + '"></a></div>'
    //)
    //+
    //'<div class="requestItemFileTitle col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 pr-5 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >عنوان</div></div></div>'
    //+
    //'<div class="col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 pr-0 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >'
    //+
    //(result.Records[j].AgreementTitle === null ||
    //    result.Records[j].AgreementTitle === undefined ||
    //    result.Records[j].AgreementTitle === ''
    //    ? '-' :
    //    result.Records[j].AgreementTitle)
    //+
    //'</div></div></div>'
    //+
    //'<div class="requestItemFileTitle col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 pr-5 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >توضیحات</div></div></div>'
    //+
    //'<div class="col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-4 sm:col-span-4 xs:col-span-4 font-medium py-3 px-3 pr-0 mt-2 text-right TitlePadding" >'
    //+
    //(
    //    (result.Records[j].AgreementDescription === null ||
    //        result.Records[j].AgreementDescription === undefined ||
    //        result.Records[j].AgreementDescription === ''
    //    )
    //        ? '<div class="font-small text-xs mt-0.5 fontSize-s ">-</div>'
    //        : (
    //            (result.Records[j].AgreementDescription.length > 20)
    //                ? '<div class="font-small text-xs mt-0.5 fontSize-s tooltip" data-tooltip="' + result.Records[j].AgreementDescription + '" >' + result.Records[j].AgreementDescription.substring(0, 20) + '...</div>'
    //                : '<div class="font-small text-xs mt-0.5 fontSize-s">' + result.Records[j].AgreementDescription + '</div>'
    //        )
    //)
    //+
    //'</div>'
    //+
    //((result.Records[j].IsView === null ||
    //    result.Records[j].IsView === false ||
    //    result.Records[j].IsView === '' ||
    //    result.Records[j].IsView === undefined
    //)
    //    ? '<div class="col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 mt-2 TitlePadding" ><div class="font-medium text-xs mt-0.5"><i data-AgreementId="' + result.Records[j].AgreementId + '"  class="agreementIco cursorIcon material-symbols-outlined visibility_off contractsIcons ">visibility_off</i></div></div>'
    //    : '<div class="col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 mt-2 TitlePadding" ><div class="font-medium text-xs mt-0.5"><i  class="cursorIcon material-symbols-outlined visibility contractsIcons">visibility</i></div></div>'
    //)

    //+
    //'<div class="col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 mt-2 TitlePadding attahmentContractModal"><div class="font-medium text-xs mt-0.5">'
    //+
    //'<a   data-ContractType="' + result.Records[j].AgreementType + '"  data-AgreementId="' + result.Records[j].AgreementId + '" class="contractConversationModalButton"><i class="material-symbols-outlined speaker_notes contractsIcons">speaker_notes</i><div     data-AgreementId="' + result.Records[j].AgreementId + '"  class="Viewcount"> ' + result.Records[j].ConversationIsReadCount + ' </div></a></div></div>'
    //+
    //'<div class="col-span-1 font-medium py-3 px-3 mt-2 text-center TitlePadding" >'
    //+
    //((result.Records[j].IsConfirm === null ||
    //    result.Records[j].IsConfirm === false ||
    //    result.Records[j].IsConfirm === '' ||
    //    result.Records[j].IsConfirm === undefined
    //)
    //    ? '<div class="font-medium text-xs mt-0.5"><a class="flex items-center justify-center isConfirmToggle"  data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '"  data-ContractType="' + result.Records[j].AgreementType + '"  data-TargetId="' + result.Records[j].AgreementId + '" href="#"><i class="material-symbols-outlined check_circle contractsIcons" >check_circle</i></a></div></div></div>'
    //    : '<div class="font-medium text-xs mt-0.5"><a class="flex items-center justify-center text-success" href="javascript:;"><i class="material-symbols-outlined check_circle contractsIcons" >check_circle</i></a></div></div></div>'
    //)
    //;
    //    $('#Records').append(recordsStr);
    //    $(".tooltip").each(function () {
    //        tippy(this, {
    //            interactive: true,
    //            content: $(this).attr("data-tooltip")
    //        });
    //    });


    //}

    //if (hasFile == false) {

    //    if (isMobile) {
    //
    //        $('#Records').find('.grid').find('.aTagPadding').remove();
    //        $('#Records').find('.grid').find('.circleContainter').remove();
    //        $('#Records').find('.grid').find('.TitlePadding:nth-child(2)').removeClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6').addClass('col-span-7 xxl:col-span-7 xl:col-span-7 llg:col-span-7 lg:col-span-7 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6 text-right').parent().css('height', '60px');
    //        // $('#Records').find('.grid').find('.TitlePadding:nth-child(3)').html('').removeClass('col-span-4').addClass('col-span-3');
    //        // $('#Records').find('.grid').find('.TitlePadding:nth-child(4)').html('');
    //        // $('#Records').find('.grid').find('.TitlePadding:nth-child(5)').html('');
    //        //$('#Records').find('.grid').find('.TitlePadding:nth-child(3)').hide();
    //        //$('#Records').find('.grid').find('.TitlePadding:nth-child(4)').removeClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-6 sm:col-span-6 xs:col-span-6').addClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-4 sm:col-span-4 xs:col-span-4');
    //        $('#Records').find('.grid').find('.TitlePadding:nth-child(4)').html('');
    //        $('#Records').find('.grid').find('.TitlePadding:nth-child(5)').hide();
    //        $('#Records').find('.grid').find(':nth-child(6)').removeClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6').addClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-1 sm:col-span-1 xs:col-span-1');
    //        $('#Records').find('.grid').find('.TitlePadding:nth-child(7)').hide();
    //        $('#Records').find('.grid').find('.requestItemFileTitle').hide();
    //    }
    //    else {
    //        $('#Records').find('.grid').find('.aTagPadding').remove();
    //        $('#Records').find('.grid').find('.circleContainter').remove();
    //        $('#Records').find('.grid').find('.TitlePadding:nth-child(2)').removeClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6').addClass('col-span-7 xxl:col-span-7 xl:col-span-7 llg:col-span-7 lg:col-span-7 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6 text-right').parent().css('height', '60px');
    //        // $('#Records').find('.grid').find('.TitlePadding:nth-child(3)').html('').removeClass('col-span-4').addClass('col-span-3');
    //        // $('#Records').find('.grid').find('.TitlePadding:nth-child(4)').html('');
    //        // $('#Records').find('.grid').find('.TitlePadding:nth-child(5)').html('');
    //        //$('#Records').find('.grid').find('.TitlePadding:nth-child(3)').hide();
    //        $('#Records').find('.grid').find('.TitlePadding:nth-child(4)').html('');//.removeClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-6 sm:col-span-6 xs:col-span-6').addClass('col-span-5 xxl:col-span-5 xl:col-span-5 llg:col-span-5 lg:col-span-5 mt-3 md:col-span-12 sm:col-span-6 xs:col-span-6');
    //        //$('#Records').find('.grid').find('.TitlePadding:nth-child(4)').hide();
    //        $('#Records').find('.grid').find('.TitlePadding:nth-child(5)').hide();
    //        $('#Records').find('.grid').find('.TitlePadding:nth-child(7)').hide('');
    //        $('#Records').find('.grid').find('.requestItemFileTitle').hide();
    //    }

    //    //$('#Records').find('.grid').find('.circleContainter').hide();
    //    //$('#Records').find('.grid').find(':nth-child(4)').html('').removeClass('col-span-4').addClass('col-span-4');
    //    //$('#Records').find('.grid').find(':nth-child(5) div a').css('height', '');
    //}
    //else {
    //    if (isMobile) {
    //        $('#Records').find('.grid').find(':nth-child(6)').removeClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-4 sm:col-span-4 xs:col-span-4').addClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-6 sm:col-span-6 xs:col-span-6');
    //        $('#Records').find('.grid').find(':nth-child(7)').removeClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6').addClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-4 sm:col-span-4 xs:col-span-4');
    //        $('#Records').find('.grid').find(':nth-child(8)').removeClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6').addClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-4 sm:col-span-4 xs:col-span-4');
    //        $('#Records').find('.grid').find(':nth-child(9)').removeClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6').addClass('col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-4 sm:col-span-4 xs:col-span-4');
    //    }
    //    else {
    //    }

    //    // $('#Records').find('.grid').find('.aTagPadding').show();

    //    // $('#Records').find('.grid').find('.circleContainter').show();
    //    // $('#Records').find('.grid').find(':nth-child(1)').addClass('col-span-2').removeClass('col-span-5 text-right').parent().css('height', '60px');
    //    // $('#Records').find('.grid').find(':nth-child(2)').html('').addClass('col-span-4').removeClass('col-span-4');
    //    // $('#Records').find('.grid').find(':nth-child(5) div a').css('height', '60px');
    //}

    //$('#titelAndRecords').css('height', "800px");

    //            if (result.Records != null)
    //                if (result.Records != undefined)
    //                    if (result.Records.length > 0) {
    //                        ////$('body').removeClass('fixModalPadding');
    //                        $('#titelAndRecords').scrollbox({
    //                        });
    //                        $('#titelAndRecords').data('scrollbox').update();
    //                    }
    //        }
    //    });
    //};
    //#endregion

    //#region Function For Get Attachments



    function getAttachments(AgreementId, ContractType, ConstructionProjectId, hasDnone) {

        // Check if an element with the specific AgreementId already exists
        if ($('.contractAttachmentsClass[data-AgreementId="' + AgreementId + '"]').length > 0) {
            console.log('Attachment form for AgreementId ' + AgreementId + ' already exists.');
            return; // Prevent further execution if the form already exists
        }

        var dnoneClass = 'd-none';
        if (!hasDnone)
            dnoneClass = '';




        var str =
            '<div data-AgreementId="' + AgreementId + '" class="contractAttachmentsClass contractAttachmentsModal" tabindex="-1" aria-hidden="true">' +
            ' <form class="validate-form flex AddAttachmentForm ' + dnoneClass + '" data-AgreementId="' + AgreementId + '">' +
            '<label class="custom-field two" id="title-add">' +
            '<input data-AgreementId="' + AgreementId + '" class="addAttachmentTitle" placeholder="&nbsp;"/>' +
            '<span class="placeholder">عنوان الحاقیه را وارد کنید</span>' +
            '<span class="border"></span>' +
            '</label>' +
            '<label class="custom-field two" id="description-add">' +
            '<input data-AgreementId="' + AgreementId + '" placeholder="&nbsp;" class="addAttachmentDescrption"/>' +
            '<span class="placeholder">توضیحات الحاقیه را وارد کنید</span>' +
            '</label>' +
            '<div class="action_value">' +
            '<a class="intro-x w-8 h-8 flex items-center justify-center rounded-full SubmitNewAttachment uplodaButtonMargin AttachmentcontractConversationModalButton bg-primary text-white ml-2 tooltip-container" data-ConstructionProjectId="' + ConstructionProjectId + '" data-ContractType="' + ContractType + '" data-AgreementId="' + AgreementId + '">' +
            '<i class="material-symbols-outlined action_icons">upload</i>' +
            '<span class="tooltip-text">بارگذاری</span></a>' +
            '<label for="addAttachmentImageUpload-' + AgreementId + '" class="rounded-full w-8 h-8 flex items-center justify-center bg-primary text-white tooltip-container addAttachmentLable" id="upload-button-text" data-AgreementId="' + AgreementId + '"> <span id="counter" class="tooltip-text">انتخاب فایل</span>' +
            '<i class="material-symbols-outlined action_icons attach_icon">attach_file</i>' +
            '<i id="remove-button" class="material-symbols-outlined tooltip-container">close<span class="tooltip-text d-none" id="fileNameuploaded">Filename</span></i>' +
            '</label>' +
            '<input id="addAttachmentImageUpload-' + AgreementId + '" data-AgreementId="' + AgreementId + '" class="d-none drop-here addAttachmentImageUpload" type="file" name="file" />' +
            '</div>' +
            '</form>' +
            '</div>';

        $('.Contract[data-AgreementId="' + AgreementId + '"]').after(str);
        const $tr = $('.contractAttachmentsClass').prevAll('tr').first();

        // Apply padding to the newly created .AddAttachmentForm based on the <tr> class
        const $form = $('.AddAttachmentForm'); // Adjust this if there are multiple forms or specific targeting is needed
        if ($form.length) {
            if ($tr.hasClass('unrelated-group')) {
                $form.css('padding-right', '105px');
            } else if ($tr.hasClass('related-group')) {
                $form.css('padding-right', '125px');
            }
        }

        $.ajax({
            cache: false,
            type: "POST",
            url: "/UserProjects/MyProjectsManagement/GetAttachementsByAgreementIdAndTableTitle",
            data: { 'agreeemntId': AgreementId, 'tableTitle': ContractType },
            success: function (result) {

                //console.log('tttttt  ==> : ', result)
                if (result === null || result === '' || result === undefined || result.length <= 0) {
                    $('#my-warning-modal').find('.modal-title').html('خطا');
                    $('#my-warning-modal').find('#error').html('خطا');
                    return $('#warningModal')[0].click();
                }

                for (var j = 0; j < result.Records.length; j++) {
                    let contractsAttachmentsCircles = '';
                    let contractsConversations = '';
                    let contractAttachments = '';


                    if (window.innerWidth <= 825) {
                        // If screen width is 825px or less, render the responsive DOM
                        contractAttachments =


                            '<div class="tr related-child Contract agreementAttachments grid grid-cols-12 gap-x-6 flex bg-slate-100 scrollbox-overflowed" data-AttachmentId="' + result.Records[j].AttachementId + '" style="position: relative;">'
                            +
                            //'<div class="ContractTitle col-span-12 mt-3 md:col-span-6 sm:col-span-6 xs:col-span-6 text-justify whitespace-nowrap justify-center"></div>'

                            '<div class="cl1 cl1_value tooltip-container1 col-span-9 mt-3 mb-3 sm:col-span-9 xs:col-span-9 text-right">' +
                            '<a class="font-normal tooltip-text1">'
                            +
                            (result.Records[j].AttachementTitle === null ||
                                result.Records[j].AttachementTitle === undefined ||
                                result.Records[j].AttachementTitle === ''
                                ? '' :
                                result.Records[j].AttachementTitle)
                            +

                            '</a></div>'

                            +

                            '<div class="m_status_project col-span-3 mt-3 sm:col-span-3 sm:text-left xs:col-span-3 xs:text-left text-center">'
                            +

                            ((result.Records[j].IsView === null ||
                                result.Records[j].IsView === false ||
                                result.Records[j].IsView === '' ||
                                result.Records[j].IsView === undefined
                            )
                                ? '<span class="flex items-center justify-center  status_accept text-danger agreementIco" data-AgreementId="' + result.Records[j].AgreementId + '">' + '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" icon-name="eye-off" data-lucide="eye-off" class="lucide lucide-eye-off block"><path d="M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>' + '</span>'
                                : '<span class="flex items-center justify-center  status_accept text-success">' + '<svg width = "22.2" height = "24" viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke-width="2" stroke - linecap="round" stroke - linejoin="round" icon - name="eye" data - lucide="eye" class="lucide lucide-eye" > <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" > </path><circle cx="12" cy="12" r="3"></circle > </svg>' + '</span>'
                            )
                            +


                            ((result.Records[j].IsConfirm === null ||
                                result.Records[j].IsConfirm === false ||
                                result.Records[j].IsConfirm === '' ||
                                result.Records[j].IsConfirm === undefined
                            )
                                ? '<span class="m_isconfirm flex tooltip-container items-center justify-center status_accept text-deactive"><a class="font-medium tooltip-text">تایید نشده</a><i class="material-symbols-outlined w-5 h-5 contractsIcons"> priority </i></span></td>'

                                : '<span class="m_isconfirm flex tooltip-container items-center justify-center  text-success" href="javascript:;"><a class="font-medium tooltip-text">تایید شده</a><i class="material-symbols-outlined w-5 h-5">priority</i>'
                            )
                            +
                            '</div>'

                            +


                            //'<div id="mdescription" class="mcl4 mcl4_value tooltip-container1 ContractTitle col-span-12 sm:col-span-7 xs:col-span-5 text-right whitespace-nowrap justify-center">توضیحات</div>'

                            '<div id="mdescription" class="font-light tooltip-text1 tooltip-container1  col-span-12 mt-1  sm:col-span-12 xs:col-span-12 text-right whitespace-nowrap justify-right">' +
                            '<a class="font-light tooltip-text1">' +
                            (result.Records[j].AttachementDescription === null ||
                                result.Records[j].AttachementDescription === undefined ||
                                result.Records[j].AttachementDescription === ''
                                ? '' :
                                result.Records[j].AttachementDescription)
                            +


                            '</a></div>'
                            +



                            '<div id="maction" class="mcl5  mcl5_value col-span-2 sm:col-span-12 sm:text-left xs:col-span-12 xs:text-left text-center" id="action">' +
                            '<a class="intro-x w-8 h-8 AttachmentcontractConversationModalButton flex items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-AttachmentId="' + result.Records[j].AttachementId + '">' +
                            '<i class="material-symbols-outlined action_icons">chat</i>' +
                            '<span class="tooltip-text">مکاتبه</span>' +
                            ((result.Records[j].ConversationIsReadCount > 0)

                                ? '<div data-AgreementId="' + result.Records[j].AgreementId + '"  class="Viewcount"> ' + result.Records[j].ConversationIsReadCount + ' </div>'
                                : ''

                            )
                            +
                            '</a>'
                            +
                            ((result.Records[j].IsConfirm === null ||
                                result.Records[j].IsConfirm === false ||
                                result.Records[j].IsConfirm === '' ||
                                result.Records[j].IsConfirm === undefined
                            )
                                ? '<a class="intro-x w-8 h-8 flex popup-btn isConfirmToggle items-center justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '"  data-ContractType="' + result.Records[j].AgreementType + '"  data-TargetId="' + result.Records[j].AttachmentId + '">' +
                                '<i class="material-symbols-outlined action_icons">check</i>' +
                                '<span class="tooltip-text">تاییدیه</span>' +
                                '</a>'
                                : ''
                            )
                            +


                            '<a class="intro-x w-8 h-8 flex items-center downloadFile justify-center rounded-full bg-primary text-white mr-1 tooltip-container" data-AttachmentId="' + result.Records[j].AttachementId + '" data-fileName="' + result.Records[j].AttachementFilePath + '" data-FileId="' + result.Records[j].AttachementId + '" data-ConstructionProjectId="' + ConstructionProjectId + '" data-Type="Attachments" >' +
                            '<i class="material-symbols-outlined action_icons">download</i>' +
                            '<span class="tooltip-text">' + result.Records[j].AttachementTitle + '</span>' +
                            '</a></div>';

                        $('.AddAttachmentForm[data-AgreementId="' + AgreementId + '"]').after(contractAttachments);
                        var tooltipElements = document.querySelectorAll('.tooltip-container1 .tooltip-text1');

                        tooltipElements.forEach(function (el) {
                            var text = el.textContent.trim(); // Get the text content
                            var container = el.closest('.tooltip-container1'); // Parent container

                            var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                            var maxHeight = lineHeight * 2; // Maximum height for 1 line

                            // Check if text is overflowing or exceeds 85 characters
                            var cl1ValueElement = container.querySelector('.cl1_value a');
                            var cl1ValueText = cl1ValueElement ? cl1ValueElement.textContent.trim() : '';

                            if (el.scrollHeight > maxHeight || text.length > 85 || (cl1ValueElement && cl1ValueText.length > 29)) {
                                // Set z-index only for the current container
                                container.style.zIndex = '1000';

                                // Add a custom tooltip dynamically on hover
                                container.addEventListener('mouseenter', function () {
                                    var tooltip = document.createElement('div');
                                    tooltip.className = 'custom-tooltip'; $('.mcl5_value').css('z-index', '1');
                                    tooltip.textContent = text.length > 85 ? text : cl1ValueText; // Use the appropriate text
                                    container.appendChild(tooltip);
                                });

                                container.addEventListener('mouseleave', function () {
                                    // Remove the tooltip when the mouse leaves
                                    var tooltip = container.querySelector('.custom-tooltip'); $('.mcl5_value').css('z-index', '9999');
                                    if (tooltip) {
                                        tooltip.remove();
                                    }
                                });
                            } else {
                                // Reset z-index for non-overflowing containers
                                container.style.zIndex = '';
                            }
                        });
                    }
                    else {



                        contractAttachments =

                            '<tr class="related-child Contract agreementAttachments"  data-AttachmentId="' + result.Records[j].AttachementId + '">' +
                            '<td class="cl1 cl1_value">' +
                            '<div class="status_project">'

                            +
                            ((result.Records[j].IsView === null ||
                                result.Records[j].IsView === false ||
                                result.Records[j].IsView === '' ||
                                result.Records[j].IsView === undefined
                            )
                                ? '<span class="flex items-center justify-center  status_accept text-danger agreementIco" data-AgreementId="' + result.Records[j].AgreementId + '">' + '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" icon-name="eye-off" data-lucide="eye-off" class="lucide lucide-eye-off block mx-auto"><path d="M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>' + '</span></div>'
                                : '<span class="flex items-center justify-center  status_accept text-success">' + '<svg width = "22.2" height = "22.5" viewBox = "0 0 24 24" fill = "none" stroke = "currentColor" stroke-width="2" stroke - linecap="round" stroke - linejoin="round" icon - name="eye" data - lucide="eye" class="lucide lucide-eye" > <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" > </path><circle cx="12" cy="12" r="3"></circle > </svg>' + '</span>'
                            )
                            +

                            '</div>' +
                            ' </td>' +
                            '<td class="cl2 cl2_value">' +
                            '<div class="status_project">'
                            +
                            ((result.Records[j].IsConfirm === null ||
                                result.Records[j].IsConfirm === false ||
                                result.Records[j].IsConfirm === '')
                                ? '<span class="flex tooltip-container items-center justify-center status_accept text-deactive"><a class="font-medium tooltip-text">تایید نشده</a><i class="material-symbols-outlined w-5 h-5 contractsIcons"> priority </i></span></td>'

                                : '<span class="flex tooltip-container items-center justify-center  text-success" href="javascript:;"><a class="font-medium tooltip-text">تایید شده</a><i class="material-symbols-outlined w-5 h-5">priority</i>'


                            )
                            +
                            '<td class="cl3 cl3_value tooltip-container1">' +
                            '<a class="font-normal tooltip-text1">'
                            +
                            (result.Records[j].AttachementTitle === null ||
                                result.Records[j].AttachementTitle === undefined ||
                                result.Records[j].AttachementTitle === ''
                                ? '-' :
                                result.Records[j].AttachementTitle)
                            +
                            '</a>' +
                            '</td>' +
                            '<td class="cl4 cl4_value tooltip-container1" id="description">' +
                            '<a class="font-light tooltip-text1">' +
                            (result.Records[j].AttachementDescription === null ||
                                result.Records[j].AttachementDescription === undefined ||
                                result.Records[j].AttachementDescription === ''
                                ? '-' :
                                result.Records[j].AttachementDescription)
                            +
                            '</a>' +
                            '</td>' +

                            '<td class="cl5 cl5_value" id="action">' +
                            '<a class="intro-x w-8 h-8 flex items-center justify-center rounded-full AttachmentcontractConversationModalButton bg-primary text-white ml-2 tooltip-container"  data-AttachmentId="' + result.Records[j].AttachementId + '">' +
                            '<i class="material-symbols-outlined action_icons">chat</i>' +
                            '<span class="tooltip-text">مکاتبه</span>' +

                            ((result.Records[j].ConversationIsReadCount > 0)

                                ? '<div data-AgreementId="' + result.Records[j].AgreementId + '"  class="Viewcount"> ' + result.Records[j].ConversationIsReadCount + ' </div>'
                                : ''

                            )
                            +
                            '</a>' +
                            ((result.Records[j].IsConfirm === null ||
                                result.Records[j].IsConfirm === false ||
                                result.Records[j].IsConfirm === ''
                            )
                                ? '<a class="intro-x w-8 h-8 isConfirmToggle flex popup-btn isAttachment attachment items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container"  data-AttachmentId="' + result.Records[j].AttachementId + '"  data-ContractType="' + result.Records[j].AgreementType + '" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '"  data-TargetId="' + result.Records[j].AttachementId + '">' +
                                '<i class="material-symbols-outlined action_icons">check</i>' +
                                '<span class="tooltip-text">تاییدیه</span>' +
                                '</a>'
                                : ''
                            )
                            +
                            '<a  data-fileName="' + result.Records[j].AttachementFilePath + '" data-FileId="' + result.Records[j].AttachementId + '" data-ConstructionProjectId="' + ConstructionProjectId + '" data-Type="Attachments" class="downloadFile intro-x w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white ml-2 tooltip-container " data-tooltip="' + result.Records[j].AttachementTitle + '">' +
                            '<i class="material-symbols-outlined action_icons">download</i>' +
                            '<span class="tooltip-text">' + result.Records[j].AttachementTitle + '</span>' +
                            '</a>' +

                            '</div>'

                        '</td>' +

                            '</tr>';

                        $('.AddAttachmentForm[data-AgreementId="' + AgreementId + '"]').after(contractAttachments);
                    }
                }
                var cl1ValueElement = document.querySelectorAll('.cl3_value a');

                cl1ValueElement.forEach(function (el) {
                    var text = el.textContent.trim(); // Get the text content
                    var container = el.closest('.tooltip-container1'); // Parent container

                    var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                    var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                    // Only show tooltip if text is overflowing or exceeds specific character limits
                    if (text.length > 60) {
                        container.style.zIndex = '1000'; // Set z-index for overflowing content

                        container.addEventListener('mouseenter', function () {
                            var tooltip = document.createElement('div');
                            tooltip.className = 'custom-tooltip';

                            tooltip.textContent = text; // Add the text content to the tooltip
                            container.appendChild(tooltip);
                        });

                        container.addEventListener('mouseleave', function () {
                            var tooltip = container.querySelector('.custom-tooltip');
                            if (tooltip) {
                                tooltip.remove();
                            }
                        });
                    } else {
                        container.style.zIndex = ''; // Reset z-index for non-overflowing containers
                    }
                });

                var tooltipElements = document.querySelectorAll('.cl4_value a');

                tooltipElements.forEach(function (el) {
                    var text = el.textContent.trim(); // Get the text content
                    var container = el.closest('.tooltip-container1'); // Parent container

                    var lineHeight = parseFloat(window.getComputedStyle(el).lineHeight);
                    var maxHeight = lineHeight * 2; // Maximum height for 2 lines

                    // Only show tooltip if text is overflowing or exceeds specific character limits
                    if (text.length > 85) {
                        container.style.zIndex = '1000'; // Set z-index for overflowing content

                        container.addEventListener('mouseenter', function () {
                            var tooltip = document.createElement('div');
                            tooltip.className = 'custom-tooltip';
                            tooltip.textContent = text; // Add the text content to the tooltip
                            container.appendChild(tooltip);
                        });

                        container.addEventListener('mouseleave', function () {

                            var tooltip = container.querySelector('.custom-tooltip');
                            if (tooltip) {
                                tooltip.remove();
                            }
                        });
                    } else {
                        container.style.zIndex = ''; // Reset z-index for non-overflowing containers
                    }
                });

                $('.contractAttachmentsClass').each(function () {
                    // Check if this element has a child with the class .AddAttachmentForm
                    var addAttachmentForm = $(this).find('.AddAttachmentForm');

                    if (addAttachmentForm.length > 0 && !addAttachmentForm.hasClass('d-none')) {
                        // Add margin-top: 10px to related-child elements
                        $('.related-child').css('margin-top', '10px');
                    }


                });




                $(".tooltip").each(function () {
                    tippy(this, {
                        interactive: true,
                        content: $(this).attr("data-tooltip")
                    });
                });
                $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').show().hide().slideDown(500);
            }
        });
    }















    //                '<div class="grid grid-cols-12 agreementAttachments"   data-AttachmentId="' + result.Records[j].AttachementId + '">'
    //                +
    //                '<div class="col col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 mt-2 px-3 text-center fontSize-s" ></div>'
    //                +
    //                '<div class="col col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 mt-2 contractMargin">'
    //                +
    //                '<a data-fileName="' + result.Records[j].AttachementFilePath + '" data-FileId="' + result.Records[j].AttachementId + '" data-ConstructionProjectId="' + ConstructionProjectId + '" data-ContractType="' + result.Records[j].AgreementType + '"  data-Type="Attachments" class=" downloadFile " >' +
    //                '<div class="contractsCircles image-fit zoom-in -mr-5 rounded-full bg-success attachments tooltip attachmentH"  data-tooltip="' + result.Records[j].AttachementTitle + '"></div></a>'
    //                +
    //                '</div>'
    //                +
    //                '<div class="col col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 mt-2 px-3 text-center fontSize-s"></div>'
    //                +
    //                '<div class="attachmentItemTitle col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >عنوان</div></div></div>'
    //                +
    //                '  <div class="col col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-1 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 pr-0 mt-2 text-right">'
    //                +
    //                '  <div class="font-small text-xs mt-0.5 fontSize-s paddingClass"><div class="font-medium">'
    //                +
    //                (result.Records[j].AttachementTitle === null ||
    //                    result.Records[j].AttachementTitle === undefined ||
    //                    result.Records[j].AttachementTitle === ''
    //                    ? '-' :
    //                    result.Records[j].AttachementTitle)
    //                +
    //                '</div></div></div>'
    //                +
    //                (
    //                    (result.Records[j].AttachementDescription === null ||
    //                        result.Records[j].AttachementDescription === undefined ||
    //                        result.Records[j].AttachementDescription === ''
    //                    )
    //                        ?
    //                        '<div class="attachmentItemTitle col-span-2 xxl:col-span-2 xl:col-span-2 llg:col-span-2 lg:col-span-2 md:col-span-6 sm:col-span-6 xs:col-span-6 font-medium py-3 px-3 mt-2 text-right TitlePadding" ><div class="font-small text-xs mt-0.5 fontSize-s paddingClass" ><div class="font-medium" >توضیحات</div></div></div>'
    //                        +
    //                        '<div class="col col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-4 sm:col-span-4 xs:col-span-4 font-medium py-3 px-3 pr-0 mt-2 text-right"><div class="font-small text-xs mt-0.5 fontSize-s ">-'
    //                        : (
    //                            (result.Records[j].AttachementDescription > 20)
    //                                ? '<div class="col col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-4 sm:col-span-4 xs:col-span-4 font-medium py-3 px-3 mt-2 tooltip" data-tooltip="' + result.Records[j].AttachementDescription + '"><div class="font-small text-xs mt-0.5 fontSize-s" >' + result.Records[j].AttachementDescription.substring(0, 20) + '...'
    //                                : '<div class="col col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-4 sm:col-span-4 xs:col-span-4 font-medium py-3 px-3 mt-2 "><div class="font-small text-xs mt-0.5 fontSize-s" >' + result.Records[j].AttachementDescription + ''
    //                        )
    //                )
    //                +
    //                '</div></div>'
    //                +
    //                ((result.Records[j].IsView === null ||
    //                    result.Records[j].IsView === false ||
    //                    result.Records[j].IsView === '' ||
    //                    result.Records[j].IsView === undefined
    //                )
    //                    ? '<div class="col col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-4 sm:col-span-4 xs:col-span-4 font-small py-3 px-3 mt-2" ><div class="font-medium text-xs mt-0.5"><i  data-AgreementId="' + result.Records[j].AttachementId + '"  class="agreementIco cursorIcon material-symbols-outlined visibility_off contractsIcons">visibility_off</i></div></div>'
    //                    : '<div class="col col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-4 sm:col-span-4 xs:col-span-4 font-small py-3 px-3 mt-2" ><div class="font-medium text-xs mt-0.5"><i class="cursorIcon material-symbols-outlined visibility contractsIcons">visibility</i></div></div>'
    //                )
    //                +
    //                '<div class="col col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-4 sm:col-span-4 xs:col-span-4 font-medium py-3 px-3 mt-2 attahmentContractModal">'
    //                +
    //                '<a class="AttachmentcontractConversationModalButton" data-AttachmentId="' + result.Records[j].AttachementId + '"><i class="material-symbols-outlined speaker_notes contractsIcons">speaker_notes</i><div  data-AttachmentId="' + result.Records[j].AttachementId + '"  class="Viewcount" > ' + result.Records[j].ConversationIsReadCount + ' </div></a></div>'
    //                +
    //                ((result.Records[j].IsConfirm === null ||
    //                    result.Records[j].IsConfirm === false ||
    //                    result.Records[j].IsConfirm === '')
    //                    ?
    //                    '<div class="col col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-4 sm:col-span-4 xs:col-span-4 font-medium py-3 px-3 mt-2 attahmentContractModal">'
    //                    +
    //                    '<a  class="statusCircle flex items-center justify-center isConfirmToggle isAttachment attachmentIsConfirmToggle"  data-AttachmentId="' + result.Records[j].AttachementId + '"  data-ContractType="' + result.Records[j].AgreementType + '" data-tw-target="#Danger-confirmation-modal" data-tw-toggle="modal" data-ConstructionProjectId="' + result.Records[j].ConstructionProjectId + '"  data-TargetId="' + result.Records[j].AttachementId + '"  href="javascript:;"><i class="material-symbols-outlined check_circle contractsIcons" >check_circle</i></a></div>'
    //                    +
    //                    '</div>'
    //                    :
    //                    '<div class="col col-span-1 xxl:col-span-1 xl:col-span-1 llg:col-span-1 lg:col-span-1 md:col-span-4 sm:col-span-4 xs:col-span-4 font-medium py-3 px-3 mt-2 attahmentContractModal">'
    //                    +
    //                    '<a   class="statusCircle flex items-center justify-center text-success " href="javascript:;"><i class="material-symbols-outlined check_circle contractsIcons" >check_circle</i></a></div>'
    //                    +
    //                    '</div>'
    //                );
    //            $('.AddAttachmentForm[data-AgreementId="' + AgreementId + '"]').after(contractAttachments);
    //        }


    //        if (isMobile) {
    //            $('.contractAttachmentsClass').find('.grid').find('.col:nth-child(1)').hide();//.removeClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-4 sm:col-span-4 xs:col-span-4').addClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-6 sm:col-span-6 xs:col-span-6');

    //        }
    //        else {
    //            $('.contractAttachmentsClass').find('.grid').find('.col:nth-child(3)').hide();//.removeClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-4 sm:col-span-4 xs:col-span-4').addClass('col-span-4 xxl:col-span-4 xl:col-span-4 llg:col-span-4 lg:col-span-4 md:col-span-6 sm:col-span-6 xs:col-span-6');
    //        }

    //        $(".tooltip").each(function () {
    //            tippy(this, {
    //                interactive: true,
    //                content: $(this).attr("data-tooltip ")
    //            });
    //        });
    //        $('.contractAttachmentsModal[data-AgreementId="' + AgreementId + '"]').show().hide().slideDown(500);
    //    }
    //});
    //}
    //#endregion


    //#region Function For GenerateAgreementCircles In Get Contracts
    function generateAgreementCircles(count, type) {
        let circles = '';
        for (let p = 0; p < count && p < 4; p++) {
            circles += '';
        }
        return circles;
    }
    //#endregion

    //#region Function For Get Conversation
    function getConversation(recordId, contractType) {
        $('.ConversationClass').remove()
        $.ajax({
            cache: false,
            type: "POST",
            url: "/UserProjects/MyProjectsManagement/GetConversationDataByAgreementTypeAndRecordId",
            data: { 'recordId': recordId, 'contractType': contractType },
            success: function (result) {
                if (result === null || result === '' || result === undefined || result.length <= 0) {
                    $('#my-warning-modal').find('.modal-title').html('خطا');
                    $('#my-warning-modal').find('#error').html('خطا');
                    return $('#warningModal').click();
                }
                let contractsConversations = '';
                if (result.Records.length > 0) {
                    for (var j = 0; j < result.Records.length; j++) {
                        var Family = result.Records[j].CustomUsersVM.Family;
                        var Name = result.Records[j].CustomUsersVM.Name;
                        var Picture = result.Records[j].CustomUsersVM.Picture;
                        var Userid = result.Records[j].CustomUsersVM.UserId;

                        var imageSrcProfile = Picture ? `../../Files/UserFiles/localhost/${Userid}/${Picture}` : "/images/profileImage.png";

                        let adminBadge = '';
                        if (result.Records[j].UserIdCreator != userId) {
                            if (Family == 'admin' || name == 'admin') {
                                Name = ''; // Use '=' for assignment
                                Family = ''; // Use '=' for assignment
                                imageSrcProfile = "../../Enigma v1.0.5/dist/images/new logo.png";
                                adminBadge = '<img class="badge bg-red-500 ml-2 px-2 py-1 rounded" src="../../Enigma v1.0.5/dist/images/new logo.png">پشتیبان وب سایت</img>';
                            }
                            // if (conver.includes('پاسخ: ')) {

                            //     let firstLine = conver.split('\n')[0]; // Use `let` for reassignment

                            //     // Remove "پاسخ:" from the first line (if it exists)
                            //     firstLine = firstLine.replace('پاسخ:', '').trim();
                            //     const descriptionLines = result.Records[j].ConversationLogDescription.split('\n');
                            //     descriptionLines.shift(); // Removes the first line
                            //     const modifiedDescription = descriptionLines.join('\n');

                            // }
                            var description = result.Records[j].ConversationLogDescription.replace(/\r\n|\n/g, "<br>");
                            contractsConversations +=

                                '<div class="chat__box__text-box flex items-end float-left mb-4 converstionque">' +
                                '<div class="w-10 h-10 hidden sm:block flex-none image-fit relative contractConversation">' +
                                '<img alt="Midone - HTML Admin Template" class="rounded-full image_profile" src="' + imageSrcProfile + '" onerror="this.src=\'/images/profileImage.png\'"></div>' +


                                '<div class="bg-white dark:bg-darkmode-400 px-4 py-3 text-slate-500 rounded-r-md rounded-t-md text-right">' +
                                '<p class=" text-right  sender-pro pb-2">' + Name + ' ' + Family + adminBadge + '</p>'
                                +
                                (description || "").replace(/(\r\n|\r|\n)/g, "<br>")
                                +
                                '<div class="mt-1 text-xs text-slate-500 conversationDescription">' +
                                result.Records[j].OperationDateFa +
                                ' '
                                +
                                result.Records[j].OperationTime +

                                '</div>' +
                                '</div>' +
                                '<div class="hidden sm:block dropdown ml-3 my-auto">' +
                                '<a href="javascript:;" class="dropdown-toggle w-4 h-4 text-slate-500" aria-expanded="false" data-tw-toggle="dropdown"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="more-vertical" data-lucide="more-vertical" class="lucide lucide-more-vertical w-4 h-4"><circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle></svg>' +
                                '</a>' +
                                '<div class="dropdown-menu w-40">' +
                                '<ul class="dropdown-content"><li>' +
                                '<a href="javascript:;" class="dropdown-item"> <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="corner-up-left" data-lucide="corner-up-left" class="lucide lucide-corner-up-left w-4 h-4 mr-2"><polyline points="9 14 4 9 9 4"></polyline><path d="M20 20v-7a4 4 0 00-4-4H4"></path></svg> پاسخ </a></li><li><a href="javascript:;" class="dropdown-item">'
                                + ' <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="trash" data-lucide="trash" class="lucide lucide-trash w-4 h-4 mr-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6m3 0V4a2 2 0 012-2h4a2 2 0 012 2v2"></path></svg> حذف </a></li></ul></div></div></div><div class="clear-both"></div>';
                        } else {
                            var Family = result.Records[j].CustomUsersVM.Family;
                            var Name = result.Records[j].CustomUsersVM.Name;
                            var Picture = result.Records[j].CustomUsersVM.Picture;
                            var Userid = result.Records[j].CustomUsersVM.UserId;
                            var imageSrcProfile = Picture ? `../../Files/UserFiles/localhost/${Userid}/${Picture}` : "/images/profileImage.png";

                            if (Family == 'admin' || name == 'admin') {
                                Name = ''; // Use '=' for assignment
                                Family = ''; // Use '=' for assignment
                                imageSrcProfile = "../../Enigma v1.0.5/dist/images/new logo.png";
                                adminBadge = '<img class="badge bg-red-500 ml-2 px-2 py-1 rounded" src="../../Enigma v1.0.5/dist/images/new logo.png">پشتیبان وب سایت</img>';
                            }
                            var description = result.Records[j].ConversationLogDescription.replace(/\r\n|\n/g, "<br>");

                            contractsConversations +=


                                '                <div class="chat__box__text-box flex items-end justify-end items-center mb-4">'
                                +
                                '    <div class="hidden sm:block dropdown mr-3 my-auto"> <a href="javascript:;"'
                                +
                                '            class="dropdown-toggle w-4 h-4 text-slate-500" aria-expanded="false" data-tw-toggle="dropdown">'
                                +
                                '            <i data-lucide="more-vertical" class="w-4 h-4"></i> </a>'
                                +
                                '        <div class="dropdown-menu w-40">'
                                +
                                '<ul class="dropdown-content"><li>'
                                +
                                '<a href="javascript:;" class="dropdown-item"> <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="corner-up-left" data-lucide="corner-up-left" class="lucide lucide-corner-up-left w-4 h-4 mr-2"><polyline points="9 14 4 9 9 4"></polyline><path d="M20 20v-7a4 4 0 00-4-4H4"></path></svg> پاسخ </a></li><li><a href="javascript:;" class="dropdown-item">'
                                +
                                ' <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="trash" data-lucide="trash" class="lucide lucide-trash w-4 h-4 mr-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6m3 0V4a2 2 0 012-2h4a2 2 0 012 2v2"></path></svg> حذف </a></li></ul>'
                                +
                                '        </div>'
                                +
                                '    </div>'
                                +






                                '    <div class="bg-primary px-4 py-3 text-white rounded-l-md rounded-t-md text-right">' +
                                '<p class=" text-right fname_profile pb-2">' + Name + ' ' + Family + adminBadge + '</p>'
                                +
                                (description || "").replace(/(\r\n|\r|\n)/g, "<br>")
                                +
                                ' <div class="mt-1 text-xs text-white text-opacity-80 conversationDescription"'
                                +
                                '     > ' + result.Records[j].OperationDateFa + ' ' + result.Records[j].OperationTime + ' </div>'
                                +
                                '    </div>'
                                +
                                '    <div class="w-10 h-10 hidden sm:block flex-none image-fit relative ml-5"> <img alt="Midone - HTML Admin Template" class="rounded-full image_profile" src="' + imageSrcProfile + '" onerror="this.src=\'/images/profileImage.png\'">'
                                +
                                '    </div>'



                                +
                                '</div><div class="clear-both"></div>'
                                ;
                        }
                    }

                }

                else {
                    contractsConversations = '<div class="mt-3 NullMessage" data-RecordId="' + recordId + '" ><div class=" mt-5 h-48 font-medium"></div><div class="text-slate-500 mt-1">در حال حاضر هیچ پیامی ندارید</div></div>';
                }
                var str = '';
                if (contractType === "Attachments") {
                    // Attachment Chat Modal -->
                    str = '<div   data-AttachmentId="' + recordId + '"  class="mt-5 mb-2 AttachmentcontractConversationModal" tabindex="-1" aria-hidden="true">'
                        +
                        '<div class="h-full flex flex-col divConversation" dir="ltr">'
                        +
                        '<div class="overflow-auto px-5 pt-5 flex-1 AttachmentconversatioBlock" data-AgreementId="' + recordId + '">'
                        +
                        contractsConversations
                        +
                        '</div>'
                        +
                        '    <div class="p-4 sm:py-4 flex items-center border-t border-slate-200/60 dark:border-darkmode-400" dir="rtl" style="position: relative;justify-content: space-around!important;align-items: center;">'
                        +
                        '        <textarea data-AgreementId="' + recordId + '"  onkeydown="if(event.which === 13 && !event.shiftKey){event.preventDefault(); $(`.attachmentSendMessage[data-AgreementId=' + recordId + ']`)[0].click();}"  class="messageClass attachmentMessage chat__box__input form-control dark:bg-darkmode-600 h resize-none border-transparent px-5 py-3 shadow-none focus:border-transparent focus:ring-0 height46" rows="1" placeholder="پیام خود را تایپ کنید..."></textarea>'
                        +
                        '        <div class="flex mtbn">'
                        +
                        '        <a href="#" class="w-8 h-8 sm:w-10 sm:h-10 block bg-primary text-white rounded-full flex-none flex items-center justify-center sendMessage chatMargin attachment attachmentSendMessage" data-AgreementId="' + recordId + '" data-ContractType="Attachments"> <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="send" data-lucide="send" class="lucide lucide-send w-4 h-4"><line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon></svg> </a>'
                        +
                        '    </div>  '
                        ;
                    $('.agreementAttachments[data-AttachmentId="' + recordId + '"]').after(str);
                    $('.Viewcount[data-AttachmentId="' + recordId + '"]').html('0');
                }
                else {
                    str = '<div data-AgreementId="' + recordId + '" class="mt-2 mb-2  contractConversationModal ConversationClass" tabindex="-1" aria-hidden="true">'
                        +
                        '<div class="h-full flex flex-col divConversation"  dir="ltr">'
                        +
                        '<div class="overflow-auto px-5 pt-5 flex-1 conversatioBlock" data-AgreementId="' + recordId + '">'
                        +
                        //contractsConversations
                        contractsConversations
                        +
                        '</div>'
                        +
                        '    <div class="p-4 sm:py-4 xs:py-4 flex items-center border-t border-slate-200/60 dark:border-darkmode-400" dir="rtl" style="position: relative;justify-content: space-around;align-items: center;">'
                        +
                        '        <textarea data-AgreementId="' + recordId + '" onkeydown="if(event.which === 13 && !event.shiftKey){event.preventDefault(); $(`.sendMessage[data-AgreementId=' + recordId + ']`)[0].click();}"  class="messageClass TextArea chat__box__input form-control dark:bg-darkmode-600 h resize-none border-transparent px-5 py-3 shadow-none focus:border-transparent focus:ring-0 height46"  rows="1" placeholder="پیام خود را تایپ کنید..."></textarea>'
                        +
                        '        <div class="flex btnsend">'
                        +
                        '        <a href="#" class="w-8 h-8 sm:w-10 sm:h-10 block bg-primary text-white rounded-full flex-none flex items-center justify-center sendMessage chatMargin "  data-AgreementId="' + recordId + '"  data-ContractType="' + contractType + '"> <svg  width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" icon-name="send" data-lucide="send" class="lucide lucide-send w-4 h-4"><line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon></svg> </a>'
                        +
                        '    </div>  '
                        +
                        '</div>'
                        +
                        '</div>';

                    $('.Contract[data-AgreementId="' + recordId + '"]').after(str);
                    $('.Viewcount[data-AgreementId="' + recordId + '"]').html('0');
                }


                //$('#titelAndRecords').data('scrollbox').update();


            }

        });



    }
    //#endregion

    //#region Function For Check File Type
    function isValidFileType(fileName) {
        var extension = fileName.split('.').pop().toLowerCase();
        //return extension === 'pdf' || ['jpg', 'dwg', 'skp', 'mp4', 'mkv', 'xlsx', 'jpeg', 'png', 'gif', 'doc', 'docx'].includes(extension);
        return extension === 'pdf' || ['jpeg', 'jpg', 'png', 'mp4', 'mkv', 'mov', 'pptx', 'xls', 'xlsx', 'docx', 'doc', 'mpp', 'txt', 'rar', 'zip'].includes(extension);
    }
    //#endregion


    var constructionProjectId;
    var lastDateForDailyPictures = '';
    $('body').on('click', '.setDailyPicturesModal', function (e) {
        e.preventDefault();

        var _this = $(this);

        $('body').addClass('fixModalPadding');
        $('body').addClass('overflow-y-hidden');

        $('html').addClass('overflow-y-hidden');



        $('.showMoreDailyPictures').show();

        var constructionProjectId = _this.attr('data-constructionProjectId');
        //constructionProjectId = 10059;
        $.ajax({
            cache: false,
            type: "POST",
            url: "/UserProjects/MyProjectsManagement/GetListOfConstructionProjectDailyPicturesWithLastDate",
            data: {
                'ConstructionProjectId': constructionProjectId
                //'ConstructionProjectId': 10059
            },
            success: function (result) {
                if (result.Result == "OK") {

                    var strHtml = '';

                    $('#parentDailyPicturesData').html('');

                    var records = result.Records;

                    if (records != null)
                        if (records.length > 0) {
                            for (var i = 0; i < records.length; i++) {
                                var year = records[i];
                                var months = year.YearKey.MonthKey;




                                if (months != null)
                                    if (months.length > 0) {

                                        strHtml += `<div class="intro-x relative items-center mb-3  monthParent scrollbox-overflowed ">`;

                                        var pic = (months[months.length - 1]).ConstructionProjectDailyPicturesVMList;
                                        lastDateForDailyPictures = (months[months.length - 1]).ConstructionProjectDailyPicturesVMList[pic.length - 1].EnDate.split('T')[0];

                                        for (var j = 0; j < months.length; j++) {
                                            var month = months[j];

                                            var pictures = month.ConstructionProjectDailyPicturesVMList;

                                            if (pictures != null) {
                                                if (pictures.length > 0) {
                                                    // مرتب‌سازی تصاویر بر اساس ماه
                                                    pictures.sort((a, b) => parseInt(a.MonthFa) - parseInt(b.MonthFa));

                                                    var lastPictures = [];
                                                    var middlePictures = [];
                                                    var firstPictures = [];

                                                    for (var k = 0; k < pictures.length; k++) {
                                                        var picture = pictures[k];
                                                        var intDayFa = parseInt(picture.DayFa);
                                                        if ((intDayFa >= 21) && (intDayFa <= 31)) {
                                                            lastPictures.push(picture);
                                                        } else if ((intDayFa >= 11) && (intDayFa <= 20)) {
                                                            middlePictures.push(picture);
                                                        } else if ((intDayFa >= 1) && (intDayFa <= 10)) {
                                                            firstPictures.push(picture);
                                                        }
                                                    }

                                                    // بقیه کد بدون تغییر
                                                    String.prototype.toPersianDigit = function () {
                                                        return this.replace(/\d/g, (digit) => {
                                                            return "۰۱۲۳۴۵۶۷۸۹"[digit];
                                                        });
                                                    };

                                                    const monthsFa = [
                                                        "فروردین",
                                                        "اردیبهشت",
                                                        "خرداد",
                                                        "تیر",
                                                        "مرداد",
                                                        "شهریور",
                                                        "مهر",
                                                        "آبان",
                                                        "آذر",
                                                        "دی",
                                                        "بهمن",
                                                        "اسفند",
                                                    ];

                                                    // فرض کنید monthFa عدد ماه به صورت عددی باشد
                                                    const monthFaNumber = month.MonthFa; // مثلاً 1 یا 2
                                                    const monthNameFa = monthsFa[monthFaNumber - 1]; // نام ماه شمسی
                                                    const persianDate = `${monthNameFa.toPersianDigit()}`.toPersianDigit();

                                                    strHtml += '<div class="intro-x relative items-center mb-3  monthParent ">';

                                                    var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];

                                                    if (lastPictures.length > 0) {
                                                        strHtml += `<div class="intro-x relative flex items-center mb-3 responsivew last">

                                                                                <div class="monthDay before:block before:absolute before:w-20 before:h-px before:bg-slate-200 before:dark:bg-darkmode-400 before:mt-5 before:ml-5">
                                                                                <div class=" text-slate-500 text-xs text-center my-4 yearTitleParent absolute">

                                                                    <span class="yearTitle">` + year.YearKey.YearFa.toPersinaDigit() + `</span>

                                                    </div>
                                                                                    <span>
                                                                                            ` + persianDate + `
                                                                                    </span>
                                                                                </div>
                                                                                <div class="box ml-8 flex-1 zoom-in-block z-50">
                                                                                    <div class="">
                                                                                <div class="responsive-mode">`;

                                                        for (var k = 0; k < lastPictures.length; k++) {
                                                            var picture = lastPictures[k];

                                                            if ($.inArray(picture.FileName.split('.').pop().toLowerCase(), fileExtension) >= 0) {

                                                                var picturePath = '/Files/ConstructionProjectFiles/' + domainName + '/' + constructionProjectId + '/DailyPictures/images/' + picture.FileName;

                                                                var caption = '';
                                                                if (picture.Caption.length > 60)
                                                                    caption = picture.Caption.substring(0, 70) + '...';
                                                                else
                                                                    caption = picture.Caption;
                                                                strHtml += `<div class="relative" data-action="zoom">` +
                                                                    `<div class="parent-tnsImage ">` +
                                                                    `<img alt="" src="` + picturePath + `" data-action="zoom" class="w-full rounded-md dailyImage" style="">
                                                                                                <div class="info">
                                                                                                    <p class="mt-2 text-sm text-gray-300" style="direction: rtl; ">
                                                                                                        ` + caption + `<br /> ` + picture.MonthDayFa.toPersinaDigit() + `
                                                                                                    </p>
                                                                                                </div>` +
                                                                    `</div>` +
                                                                    `</div>`;
                                                            }
                                                        }

                                                        strHtml += `</div>
                                                                                        </div>
                                                                                        </div>
                                                                                        </div>`;
                                                    }

                                                    //else
                                                    if (middlePictures.length > 0) {
                                                        strHtml += `<div class="intro-x relative flex items-center mb-3 responsivew last">

                                                                                    <div class="monthDay before:block before:absolute before:w-20 before:h-px before:bg-slate-200 before:dark:bg-darkmode-400 before:mt-5 before:ml-5">
                                                                                    <div class=" text-slate-500 text-xs text-center my-4 yearTitleParent absolute">

                                                                        <span class="yearTitle">` + year.YearKey.YearFa.toPersinaDigit() + `</span>

                                                        </div>
                                                                                        <span>
                                                                                                ` + persianDate + `
                                                                                        </span>
                                                                                    </div>
                                                                                    <div class="box ml-8 flex-1 zoom-in-block z-50">
                                                                                        <div class="">
                                                                                    <div class="responsive-mode">`;

                                                        for (var k = 0; k < middlePictures.length; k++) {
                                                            var picture = middlePictures[k];

                                                            if ($.inArray(picture.FileName.split('.').pop().toLowerCase(), fileExtension) >= 0) {

                                                                var picturePath = '/Files/ConstructionProjectFiles/' + domainName + '/' + constructionProjectId + '/DailyPictures/images/' + picture.FileName;

                                                                var caption = '';
                                                                if (picture.Caption.length > 60)
                                                                    caption = picture.Caption.substring(0, 70) + '...';
                                                                else
                                                                    caption = picture.Caption;

                                                                strHtml += `<div class="relative" data-action="zoom">` +
                                                                    `<div class="parent-tnsImage ">` +
                                                                    `<img alt="" src="` + picturePath + `" data-action="zoom" class="w-full rounded-md dailyImage" style="">
                                                                                                <div class="info">
                                                                                                    <p class="mt-2 text-sm text-gray-300" style="direction: rtl; ">
                                                                                                        ` + caption + `<br /> ` + picture.MonthDayFa.toPersinaDigit() + `
                                                                                                    </p>
                                                                                                </div>` +
                                                                    `</div>` +
                                                                    `</div>`;
                                                            }
                                                        }

                                                        strHtml += `</div>
                                                                        </div>
                                                                        </div>
                                                                        </div>`;
                                                    }
                                                    //else
                                                    if (firstPictures.length > 0) {
                                                        strHtml += `<div class="intro-x relative flex items-center mb-3 responsivew last">

                                                                                    <div class="monthDay before:block before:absolute before:w-20 before:h-px before:bg-slate-200 before:dark:bg-darkmode-400 before:mt-5 before:ml-5">
                                                                                    <div class=" text-slate-500 text-xs text-center my-4 yearTitleParent absolute">

                                                                        <span class="yearTitle">` + year.YearKey.YearFa.toPersinaDigit() + `</span>

                                                        </div>
                                                                                        <span>
                                                                                                ` + persianDate + `
                                                                                        </span>
                                                                                    </div>
                                                                                    <div class="box ml-8 flex-1 zoom-in-block z-50">
                                                                                        <div class="">
                                                                                    <div class="responsive-mode">`;

                                                        for (var k = 0; k < firstPictures.length; k++) {
                                                            var picture = firstPictures[k];

                                                            if ($.inArray(picture.FileName.split('.').pop().toLowerCase(), fileExtension) >= 0) {

                                                                var picturePath = '/Files/ConstructionProjectFiles/' + domainName + '/' + constructionProjectId + '/DailyPictures/images/' + picture.FileName;

                                                                var caption = '';
                                                                if (picture.Caption.length > 60)
                                                                    caption = picture.Caption.substring(0, 70) + '...';
                                                                else
                                                                    caption = picture.Caption;

                                                                strHtml += `<div class="relative" data-action="zoom">` +
                                                                    `<div class="parent-tnsImage ">` +
                                                                    `<img alt="" src="` + picturePath + `" data-action="zoom" class="w-full rounded-md dailyImage" style="">
                                                                                                <div class="info">
                                                                                                    <p class="mt-2 text-sm text-gray-300" style="direction: rtl; ">
                                                                                                        ` + caption + `<br /> ` + picture.MonthDayFa.toPersinaDigit() + `
                                                                                                    </p>
                                                                                                </div>` +
                                                                    `</div>` +
                                                                    `</div>`;
                                                            }
                                                        }

                                                        strHtml += `</div>
                                                                                        </div>
                                                                                        </div>
                                                                                        </div>`;
                                                    }

                                                    strHtml += '</div>';
                                                }
                                            }

                                            strHtml += '</div>';
                                        }
                                    }
                            }

                            $('#parentDailyPicturesData').html(strHtml);



                            $('#parentDailyPicturesData').append('<span class="showMoreDailyPictures" data-ConstructionProjectId="' + constructionProjectId + '">نمایش تصاویر بیشتر </span>');

                            var responsiveModes = $('.monthParent').find('.responsive-mode');

                            for (var i = 0; i < responsiveModes.length; i++) {
                                var responsiveMode = responsiveModes[i];





                                var itemCount = $(responsiveMode).find('img').length;


                                let a = tns({
                                    container: $(responsiveMode)[0],
                                    slideBy: 2, // Default for mobile
                                    items: 2,  // Default for mobile
                                    mouseDrag: true,  // Enables touch swipe
                                    touch: true,  // Ensures touch gestures are detected
                                    autoplay: false,
                                    controls: true,
                                    nav: true,
                                    speed: 500,
                                    rewind: true,
                                    loop: false,
                                    swipeAngle: false,  // Disable angle restriction for easier swiping
                                    responsive: {
                                        825: {
                                            slideBy: 5,
                                            items: 5
                                        }
                                    }
                                });
                                $(responsiveMode)[0].tns = a;

                                const nodes = document.querySelectorAll('.tns-item');

                                const directions = { 0: 'top', 1: 'right', 2: 'bottom', 3: 'left' };
                                const classNames = ['in', 'out'].map((p) => Object.values(directions).map((d) => `${p}-${d}`)).reduce((a, b) => a.concat(b));

                                const getDirectionKey = (ev, node) => {
                                    const { width, height, top, left } = node.getBoundingClientRect();
                                    const l = ev.pageX - (left + window.pageXOffset);
                                    const t = ev.pageY - (top + window.pageYOffset);
                                    const x = (l - (width / 2) * (width > height ? (height / width) : 1));
                                    const y = (t - (height / 2) * (height > width ? (width / height) : 1));
                                    return Math.round(Math.atan2(y, x) / 1.57079633 + 5) % 4;
                                }

                                class Item {
                                    constructor(element) {

                                        this.element = element;
                                        this.element.addEventListener('mouseover', (ev) => this.update(ev, 'in'));
                                        this.element.addEventListener('mouseout', (ev) => this.update(ev, 'out'));

                                    }

                                    update(ev, prefix) {
                                        this.element.classList.remove(...classNames);
                                        this.element.classList.add(`${prefix}-${directions[getDirectionKey(ev, this.element)]}`);
                                    }
                                }

                                nodes.forEach(node => new Item(node));
                            }
                            //$(".Daily-Pictures-Link[data-ConstructionProjectId='" + projectIdValue + "']")[0].click();


                            ////$('body').removeClass('fixModalPadding');

                            return;
                        }

                    lastDateForDailyPictures = '';
                }
                else
                    if (result.Result == "ERROR") {
                        $('#my-warning-modal').find('.modal-title').html('خطا');
                        $('#my-warning-modal').find('#error').html('خطا');
                        return $('#warningModal')[0].click();
                        // $('#my-warning-modal').find('.modal-title').html('خطا');
                        // $('#my-warning-modal').find('#error').html('خطا');
                        // $('#my-warning-modal').modal("show");
                    }
            }

        });
        ////$('body').removeClass('fixModalPadding');
    });

    $('body').on('click', '.setMonthlyPicturesModal', function (e) {

        e.preventDefault();

        var _this = $(this);



        var constructionProjectId = _this.attr('data-constructionProjectId');

        $('body').addClass('fixModalPadding');
        $('body').addClass('overflow-y-hidden');

        $('html').addClass('overflow-y-hidden');

        try {
            $('.parentMonthlyPicturesData').scrollbox('destroy');
        }
        catch (e) { }

        // var videoUrl = '';
        // $('#playerBlock').html('<div class="myVideo w-100" style="" id="my_video" oncontextmenu="return false;"' +
        //     'data-video="/Files/PropertiesFiles/localhost/7/Media/c4670122-b2eb-4e8c-a47c-84eae342172b.mp4" ' +
        //     'data-poster="/images/negativeLogoPlay.png"' +
        //     'data-type="video/mp4"></div>');

        // var vid = $('#my_video').RTOP_VideoPlayer({
        //     showFullScreen: true,
        //     showTimer: true,
        //     showSoundControl: true
        // });


        // $('.parentMonthlyPicturesData').scrollbox({
        // });

        //constructionProjectId = 10059;
        $.ajax({
            cache: false,
            type: "POST",
            url: "/UserProjects/MyProjectsManagement/GetAllProgressPicturesList",
            data: {
                'ConstructionProjectId': constructionProjectId
                //'ConstructionProjectId': 10059
            },
            success: function (result) {
                if (result.Result == "OK") {

                    var strHtml = '';

                    $('#parentMonthlyPicturesData').html('');
                    $('#playerBlock').html('');

                    var records = result.Records;

                    if (records != null)
                        if (records.length > 0) {

                            for (var i = 0; i < records.length; i++) {
                                var record = records[i];

                                var videoUrl = '/Files/ConstructionProjectFiles/' + domainName + '/' + constructionProjectId + '/ProgressPictureFiles/' + record.ProgressPictureId +
                                    '/Image/' + record.ProgressPictureFilePath;
                                strHtml += '<div class="videoReport flex w-32 h-24 text-center align-middle mb-2" data-videoUrl="' + videoUrl + '"><div class="progressPictureTitle">' +
                                    record.ProgressPictureTitle +
                                    '</div></div>';
                            }
                            $('.parentMonthlyPicturesData').html(strHtml);

                            $('.videoReport:nth-child(1)').addClass('selected');
                            $('.videoReport:nth-child(1)').click();
                            // $('#playerBlock').html('<div class="myVideo w-100" style="" id="my_video" oncontextmenu="return false;"' +
                            //     'data-video="/Files/PropertiesFiles/localhost/7/Media/c4670122-b2eb-4e8c-a47c-84eae342172b.mp4" ' +
                            //     'data-poster="/images/negativeLogoPlay.png"' +
                            //     'data-type="video/mp4"></div>');

                            // var vid = $('#my_video').RTOP_VideoPlayer({
                            //     showFullScreen: true,
                            //     showTimer: true,
                            //     showSoundControl: true
                            // });



                            ////$('body').removeClass('fixModalPadding');

                            return;
                        }

                    $('.parentMonthlyPicturesData').html('');
                }
                else
                    if (result.Result == "ERROR") {
                        $('#my-warning-modal').find('.modal-title').html('خطا');
                        $('#my-warning-modal').find('#error').html('خطا');
                        return $('#warningModal')[0].click();
                        // $('#my-warning-modal').find('.modal-title').html('خطا');
                        // $('#my-warning-modal').find('#error').html('خطا');
                        // $('#my-warning-modal').modal("show");
                    }
            }

        });
        ////$('body').removeClass('fixModalPadding');
    });

    $('body').on('mouseenter', '.videoReport', function () {
        $('.videoReport').removeClass('selected'); // Remove the 'selected' class from all elements
        $(this).addClass('selected'); // Add the 'selected' class to the hovered element
    });

    $('body').on('mouseleave', '.videoReport', function () {
        $(this).removeClass('selected'); // Optionally, remove 'selected' when hover ends
    });


    $('body').on('click', '.videoReport', function (e) {
        e.preventDefault();
        e.stopPropagation();

        var _this = $(this);
        $('.videoReport').removeClass('selected');

        var videoUrl = _this.attr('data-videoUrl');

        _this.addClass('selected');

        // حذف آیکون‌های قبلی
        $('#playerBlock').find('.playicon, .downloadButton').remove();

        $('#playerBlock').html(`
                                <div class="myVideo w-100" id="my_video" oncontextmenu="return false;"
                                     data-video="${videoUrl}" data-poster="/images/negativeLogoPlay.png"
                                     data-type="video/mp4" playsinline="false" allowfullscreen></div>
                                <button id="downloadVideo" class="bg-blue-500 text-white px-4 py-2 rounded mt-2 block text-center">
                                    دانلود ویدیو
                                </button>
                            `);

        var vid = $('#my_video').RTOP_VideoPlayer({
            showFullScreen: true,
            showTimer: true,
            showSoundControl: true,
        });

        // دانلود سریع با کلیک روی دکمه
        $('#downloadVideo').on('click', function () {
            var a = document.createElement('a');
            a.href = videoUrl;
            a.download = 'video.mp4'; // نام پیش‌فرض فایل
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        });

        // مدیریت نمایش آیکون پخش و توقف
        setTimeout(() => {
            const videoElement = document.getElementById('my_video');

            if (videoElement) {
                videoElement.addEventListener('play', function () {
                    iconVisible = false;
                    $('#playerBlock').find('.playicon').remove();
                });

                videoElement.addEventListener('pause', function () {
                    iconVisible = true;
                });
            }
        }, 500);
    });


    $(document).ready(function () {


        const playerBlock = $('#playerBlock');

        playerBlock.on('click', function () {
            const videoElement = document.getElementById('my_video');

            if (!videoElement) return;

            if (videoElement.paused) {
                // If the video is paused, show the play icon
                if (!iconVisible) {
                    playerBlock.append('<div class="playicon"><i class="material-symbols-outlined" id="playerIcon">play_circle</i></div>');
                    iconVisible = true;
                }
            } else {
                // If the video is playing, remove the play icon
                $('#playerBlock').find('.playicon').remove();
                iconVisible = false;
            }
        });
    });

    $('body').on('click', '#Monthly-Pictures', function (e) {
        e.preventDefault();


        var modal = $('#Monthly-Pictures').hasClass('show');
        if (!modal) {
            $('body').removeClass('fixModalPadding');
            $('body').removeClass('overflow-y-hidden');


            $('html').removeClass('overflow-y-hidden');
        }
        else {
            $('body').addClass('fixModalPadding');
            $('body').addClass('overflow-y-hidden');

            $('html').addClass('overflow-y-hidden');
        }
    });

    // $('body').on('click', '.imgDesc', function (e) {
    //     //e.preventDefault();
    //     var _this = $(this);
    //     var img = _this.prev();
    //     img.click();
    //     //$(img).attr('style', "visibility: hidden;");
    // });

    // // $('body').on('click', '.zoom-overlay',function(e){
    // //     e.preventDefault();
    // //     $('img[data-action="zoom-out"]').click();
    // //     // var _this = $(this);
    // //     // if(_this != undefined)
    // //     // _this.remove();
    // // });

    // $('body').on('click', 'img[data-action="zoom-out"]', function (e) {
    //     e.preventDefault();
    //     $('.zoom-overlay').click();
    //     // var _this = $(this);
    //     // if(_this != undefined)
    //     // _this.remove();
    // });

    // $('body').on('mouseover', '.imgDesc', function (e) {
    //     //e.preventDefault();

    //     var _this = $(this);

    //     //var _imgDesc = _this.next();
    //     _this.animate({ opacity: 1 });
    //     //$(this).animate({ "opacity": "show", top: "0" }, 500);
    //     //$(this).fadeIn(500);

    // });

    // $('body').on('mouseleave', '.imgDesc', function (e) {
    //     //e.preventDefault();

    //     var _this = $(this);

    //     //var _imgDesc = _this.next();
    //     _this.animate({ opacity: 0 });

    //     //$(this).animate({ opacity: 0 });
    //     //$(this).animate({ "opacity": "show", top: "150" }, 5000);
    //     //$(this).fadeOut(500);
    // });

    $('body').on('click', '.showMoreDailyPictures', function (e) {
        e.preventDefault();
        var _this = $(this);
        var constructionProjectId = _this.attr('data-ConstructionProjectId');
        GetDailyPicturesModal(constructionProjectId);
    });

    function GetDailyPicturesModal(constructionProjectId) {

        // Only proceed if there is a valid lastDateForDailyPictures marker
        if (lastDateForDailyPictures != '') {
            $.ajax({
                cache: false,
                type: "POST",
                url: "/UserProjects/MyProjectsManagement/GetListOfConstructionProjectDailyPicturesWithLastDate",
                data: {
                    'ConstructionProjectId': constructionProjectId,
                    'lastDate': lastDateForDailyPictures
                },
                success: function (result) {
                    if (result.Result == "OK") {
                        var strHtml = '';
                        var records = result.Records;
                        var morePicturesAvailable = false; // flag to indicate if more pictures are available

                        if (!records || records.length === 0) {
                            $('.showMoreDailyPictures').hide();
                            return;
                        }

                        if (records != null && records.length > 0) {
                            for (var i = 0; i < records.length; i++) {
                                var year = records[i];
                                var months = year.YearKey.MonthKey;
                                if (months != null && months.length > 0) {
                                    // Open a container for the month's data
                                    strHtml += `<div class="intro-x relative items-center mb-3 monthParent">`;

                                    // Update the lastDateForDailyPictures from the last month element
                                    var lastMonth = months[months.length - 1];
                                    var pic = lastMonth.ConstructionProjectDailyPicturesVMList;
                                    if (pic && pic.length > 0) {
                                        // Update the marker for the next AJAX call
                                        lastDateForDailyPictures = pic[pic.length - 1].EnDate.split('T')[0];
                                        morePicturesAvailable = true;
                                    } else {
                                        morePicturesAvailable = false;
                                    }

                                    // Process each month for this year
                                    for (var j = 0; j < months.length; j++) {
                                        var month = months[j];
                                        var pictures = month.ConstructionProjectDailyPicturesVMList;
                                        if (pictures != null && pictures.length > 0) {
                                            var lastPictures = [];
                                            var middlePictures = [];
                                            var firstPictures = [];

                                            // Divide pictures into groups based on DayFa value
                                            for (var k = 0; k < pictures.length; k++) {
                                                var picture = pictures[k];
                                                var intDayFa = parseInt(picture.DayFa);
                                                if (intDayFa >= 21 && intDayFa <= 31) {
                                                    lastPictures.push(picture);
                                                } else if (intDayFa >= 11 && intDayFa <= 20) {
                                                    middlePictures.push(picture);
                                                } else if (intDayFa >= 1 && intDayFa <= 10) {
                                                    firstPictures.push(picture);
                                                }
                                            }

                                            // Add a helper function to convert digits to Persian
                                            String.prototype.toPersianDigit = function () {
                                                return this.replace(/\d/g, (digit) => {
                                                    return "۰۱۲۳۴۵۶۷۸۹"[digit];
                                                });
                                            };

                                            // Convert month number to Persian month name
                                            const monthsFa = [
                                                "فروردین",
                                                "اردیبهشت",
                                                "خرداد",
                                                "تیر",
                                                "مرداد",
                                                "شهریور",
                                                "مهر",
                                                "آبان",
                                                "آذر",
                                                "دی",
                                                "بهمن",
                                                "اسفند"
                                            ];
                                            const monthFaNumber = month.MonthFa; // assuming this is a number like 1, 2, etc.
                                            const monthNameFa = monthsFa[monthFaNumber - 1];
                                            const persianDate = `${monthNameFa.toPersianDigit()}`.toPersianDigit();

                                            // Start a new inner container for this month
                                            strHtml += '<div class="intro-x relative items-center mb-3 monthParent">';
                                            var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];

                                            // Decide which picture group to show: last, middle, or first
                                            if (lastPictures.length > 0) {
                                                strHtml += `<div class="intro-x relative flex items-center mb-3 responsivew last">
                                                                        <div class="monthDay before:block before:absolute before:w-20 before:h-px before:bg-slate-200 before:dark:bg-darkmode-400 before:mt-5 before:ml-5">
                                                                            <div class="text-slate-500 text-xs text-center my-4 yearTitleParent absolute">
                                                                                <span class="yearTitle">` + year.YearKey.YearFa.toPersinaDigit() + `</span>
                                                                            </div>
                                                                            <span>` + persianDate + `</span>
                                                                        </div>
                                                                        <div class="box ml-8 flex-1 zoom-in-block z-50 showzoom">
                                                                            <div class="">
                                                                                <div class="responsive-mode">`;
                                                for (var k = 0; k < pictures.length; k++) {
                                                    var picture = pictures[k];
                                                    if ($.inArray(picture.FileName.split('.').pop().toLowerCase(), fileExtension) >= 0) {
                                                        var picturePath = '/Files/ConstructionProjectFiles/' + domainName + '/' + constructionProjectId + '/DailyPictures/images/' + picture.FileName;
                                                        var caption = picture.Caption.length > 60 ? picture.Caption.substring(0, 70) + '...' : picture.Caption;
                                                        strHtml += `<div class="relative" data-action="zoom">
                                                                                <div class="parent-tnsImage">
                                                                                    <img alt="" src="` + picturePath + `" data-action="zoom" class="w-full rounded-md dailyImage">
                                                                                    <div class="info">
                                                                                        <p class="mt-2 text-sm text-gray-300" style="direction: rtl;">` + caption + `<br /> ` + picture.MonthDayFa.toPersinaDigit() + `</p>
                                                                                    </div>
                                                                                </div>
                                                                            </div>`;
                                                    }
                                                }
                                                strHtml += `</div>
                                                                            </div>
                                                                        </div>
                                                                    </div>`;
                                            } else if (middlePictures.length > 0) {
                                                strHtml += `<div class="intro-x relative flex items-center mb-3 responsivew middle">
                                                                        <div class="monthDay before:block before:absolute before:w-20 before:h-px before:bg-slate-200 before:dark:bg-darkmode-400 before:mt-5 before:ml-5">
                                                                            <div class="text-slate-500 text-xs text-center my-4 yearTitleParent absolute">
                                                                                <span class="yearTitle">` + year.YearKey.YearFa.toPersinaDigit() + `</span>
                                                                            </div>
                                                                            <span>` + persianDate + `</span>
                                                                        </div>
                                                                        <div class="box ml-8 flex-1 zoom-in-block z-50 showzoom">
                                                                            <div class="">
                                                                                <div class="responsive-mode">`;
                                                for (var k = 0; k < pictures.length; k++) {
                                                    var picture = pictures[k];
                                                    if ($.inArray(picture.FileName.split('.').pop().toLowerCase(), fileExtension) >= 0) {
                                                        var picturePath = '/Files/ConstructionProjectFiles/' + domainName + '/' + constructionProjectId + '/DailyPictures/images/' + picture.FileName;
                                                        var caption = picture.Caption.length > 60 ? picture.Caption.substring(0, 70) + '...' : picture.Caption;
                                                        strHtml += `<div class="relative" data-action="zoom">
                                                                                <div class="parent-tnsImage">
                                                                                    <img alt="" src="` + picturePath + `" data-action="zoom" class="w-full rounded-md dailyImage">
                                                                                    <div class="info">
                                                                                        <p class="mt-2 text-sm text-gray-300" style="direction: rtl;">` + caption + `<br /> ` + picture.MonthDayFa.toPersinaDigit() + `</p>
                                                                                    </div>
                                                                                </div>
                                                                            </div>`;
                                                    }
                                                }
                                                strHtml += `</div>
                                                                            </div>
                                                                        </div>
                                                                    </div>`;
                                            } else if (firstPictures.length > 0) {
                                                strHtml += `<div class="intro-x relative flex items-center mb-3 responsivew first">
                                                                        <div class="monthDay before:block before:absolute before:w-20 before:h-px before:bg-slate-200 before:dark:bg-darkmode-400 before:mt-5 before:ml-5">
                                                                            <div class="text-slate-500 text-xs text-center my-4 yearTitleParent absolute">
                                                                                <span class="yearTitle">` + year.YearKey.YearFa.toPersinaDigit() + `</span>
                                                                            </div>
                                                                            <span>` + persianDate + `</span>
                                                                        </div>
                                                                        <div class="box ml-8 flex-1 zoom-in-block z-50 showzoom">
                                                                            <div class="">
                                                                                <div class="responsive-mode">`;
                                                for (var k = 0; k < pictures.length; k++) {
                                                    var picture = pictures[k];
                                                    if ($.inArray(picture.FileName.split('.').pop().toLowerCase(), fileExtension) >= 0) {
                                                        var picturePath = '/Files/ConstructionProjectFiles/' + domainName + '/' + constructionProjectId + '/DailyPictures/images/' + picture.FileName;
                                                        var caption = picture.Caption.length > 60 ? picture.Caption.substring(0, 70) + '...' : picture.Caption;
                                                        strHtml += `<div class="relative" data-action="zoom">
                                                                                <div class="parent-tnsImage">
                                                                                    <img alt="" src="` + picturePath + `" data-action="zoom" class="w-full rounded-md dailyImage">
                                                                                    <div class="info">
                                                                                        <p class="mt-2 text-sm text-gray-300" style="direction: rtl;">` + caption + `<br /> ` + picture.MonthDayFa.toPersinaDigit() + `</p>
                                                                                    </div>
                                                                                </div>
                                                                            </div>`;
                                                    }
                                                }
                                                strHtml += `</div>
                                                                            </div>
                                                                        </div>
                                                                    </div>`;
                                            }
                                            strHtml += '</div>'; // close inner month container
                                        }
                                    }
                                    strHtml += '</div>'; // close main monthParent container
                                }
                            }
                        }

                        // Destroy any existing tns instances before reinitializing them
                        var oldResponsiveModes = $('.monthParent').find('.responsive-mode');
                        for (var i = 0; i < oldResponsiveModes.length; i++) {
                            var oldResponsiveMode = oldResponsiveModes[i];
                            if ($(oldResponsiveMode).tns != undefined) {
                                $(oldResponsiveMode)[0].tns.destroy();
                            }
                        }

                        // Append the new HTML content to the container
                        $('#parentDailyPicturesData').html($('#parentDailyPicturesData').html() + strHtml);

                        // Initialize tns sliders for the new content
                        var responsiveModes = $('.monthParent').find('.responsive-mode');
                        for (var i = 0; i < responsiveModes.length; i++) {
                            var responsiveMode = responsiveModes[i];
                            var itemCount = $(responsiveMode).find('img').length;
                            if (itemCount > 4)
                                itemCount = parseInt(itemCount / 4) + 1;
                            var slider = tns({
                                container: $(responsiveMode)[0],
                                slideBy: 2, // Default for mobile
                                items: 2,  // Default for mobile
                                mouseDrag: true,  // Enables touch swipe
                                touch: true,  // Ensures touch gestures are detected
                                autoplay: false,
                                controls: true,
                                nav: true,
                                speed: 500,
                                rewind: true,
                                loop: false,
                                swipeAngle: false,  // Disable angle restriction for easier swiping
                                responsive: {
                                    825: {
                                        slideBy: 5,
                                        items: 5
                                    }
                                }

                            });
                            $(responsiveMode)[0].tns = slider;
                        }

                        // Reinitialize hover effects for tns items
                        const nodes = document.querySelectorAll('.tns-item');
                        const directions = { 0: 'top', 1: 'right', 2: 'bottom', 3: 'left' };
                        const classNames = ['in', 'out'].map((p) => Object.values(directions).map((d) => `${p}-${d}`)).reduce((a, b) => a.concat(b));

                        const getDirectionKey = (ev, node) => {
                            const { width, height, top, left } = node.getBoundingClientRect();
                            const l = ev.pageX - (left + window.pageXOffset);
                            const t = ev.pageY - (top + window.pageYOffset);
                            const x = (l - (width / 2) * (width > height ? (height / width) : 1));
                            const y = (t - (height / 2) * (height > width ? (width / height) : 1));
                            return Math.round(Math.atan2(y, x) / 1.57079633 + 5) % 4;
                        };

                        class Item {
                            constructor(element) {
                                this.element = element;
                                this.element.addEventListener('mouseover', (ev) => this.update(ev, 'in'));
                                this.element.addEventListener('mouseout', (ev) => this.update(ev, 'out'));
                            }
                            update(ev, prefix) {
                                this.element.classList.remove(...classNames);
                                this.element.classList.add(`${prefix}-${directions[getDirectionKey(ev, this.element)]}`);
                            }
                        }
                        nodes.forEach(node => new Item(node));

                        // Only reset lastDateForDailyPictures and hide the button if there are no more pictures.
                        if (!morePicturesAvailable) {
                            lastDateForDailyPictures = '';
                            $('.showMoreDailyPictures').hide();
                        } else {
                            // Hide the current button and append a new one for the next batch.
                            $('.showMoreDailyPictures').hide();
                            $('#parentDailyPicturesData').append('<span class="showMoreDailyPictures" data-ConstructionProjectId="' + constructionProjectId + '">نمایش تصاویر بیشتر </span>');
                        }
                    }
                    else if (result.Result == "ERROR") {
                        $('#my-warning-modal').find('.modal-title').html('خطا');
                        $('#my-warning-modal').find('#error').html('خطا');
                        return $('#warningModal')[0].click();
                    }
                }
            });
        }
        else {
            $('.showMoreDailyPictures').hide();
        }
    }



    $('body').on('click', '#Daily-Pictures', function (e) {
        e.preventDefault();
        var modal = $('#Daily-Pictures').hasClass('show');
        if (!modal) {
            $('body').removeClass('fixModalPadding');
            $('body').removeClass('overflow-y-hidden');


            $('html').removeClass('overflow-y-hidden');
        }
        else {
            $('body').addClass('fixModalPadding');
            $('body').addClass('overflow-y-hidden');

            $('html').addClass('overflow-y-hidden');
        }
    });

    //#endregion


</script>
